<?xml version="1.0"?>
<doc>
    <assembly>
        "SlimDX"
    </assembly>
    <members>
        <member name="T:SlimDX.Direct3D10.Font">
            <summary>Encapsulates all of the textures and resources needed to render a font through a Direct3D 10 device.</summary>
            <unmanaged>ID3DX10Font</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechniqueDescription.Equals(SlimDX.Direct3D11.EffectTechniqueDescription@,SlimDX.Direct3D11.EffectTechniqueDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechniqueDescription.Equals(SlimDX.Direct3D11.EffectTechniqueDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechniqueDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechniqueDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechniqueDescription.op_Inequality(SlimDX.Direct3D11.EffectTechniqueDescription,SlimDX.Direct3D11.EffectTechniqueDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechniqueDescription.op_Equality(SlimDX.Direct3D11.EffectTechniqueDescription,SlimDX.Direct3D11.EffectTechniqueDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTechniqueDescription.AnnotationCount">
            <summary>
Number of annotations on this technique.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTechniqueDescription.PassCount">
            <summary>
Number of passes contained in the technique.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTechniqueDescription.Name">
            <summary>
Name of this technique.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectTechniqueDescription">
            <summary>
Provides a description for effect techniques.
</summary>
            <unmanaged>D3DX11_TECHNIQUE_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.RenderToEnvironmentMap">
            <summary>Used to generalize the process of rendering to environment maps.</summary>
            <unmanaged>ID3DXRenderToEnvMap</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.SurfaceDescription.Equals(SlimDX.DXGI.SurfaceDescription@,SlimDX.DXGI.SurfaceDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SurfaceDescription.Equals(SlimDX.DXGI.SurfaceDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SurfaceDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SurfaceDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SurfaceDescription.op_Inequality(SlimDX.DXGI.SurfaceDescription,SlimDX.DXGI.SurfaceDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SurfaceDescription.op_Equality(SlimDX.DXGI.SurfaceDescription,SlimDX.DXGI.SurfaceDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DXGI.SurfaceDescription.SampleDescription">
            <summary>
Gets the surface's multisampling properties.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SurfaceDescription.Format">
            <summary>
Gets the format of the surface.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SurfaceDescription.Height">
            <summary>
Gets the height of the surface.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SurfaceDescription.Width">
            <summary>
Gets the width of the surface.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.SurfaceDescription">
            <summary>
Describes properties of a surface.
</summary>
            <unmanaged>DXGI_SURFACE_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.XInput.Controller.SetReporting(System.Boolean)">
            <summary>
Enables or disables data reporting in XInput.
</summary>
            <param name="value">
                <c>true</c> to enable XInput, <c>false</c> to disable it.</param>
        </member>
        <member name="M:SlimDX.XInput.Controller.SetVibration(SlimDX.XInput.Vibration)">
            <summary>
Sets vibration information for the controller.
</summary>
            <param name="vibration">Vibration settings for the controller.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.XInput.Controller.GetKeystroke(SlimDX.XInput.DeviceQueryType,SlimDX.XInput.Keystroke@)">
            <summary>
Gets keystroke information from the device.
</summary>
            <param name="flag">The type of the device to query.</param>
            <param name="keystroke">Keystroke information from the device.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.XInput.Controller.GetState">
            <summary>
Gets the state of the controller.
</summary>
            <returns>A <see cref="T:SlimDX.XInput.State" /> structure describing the state of the controller.</returns>
        </member>
        <member name="M:SlimDX.XInput.Controller.GetCapabilities(SlimDX.XInput.DeviceQueryType)">
            <summary>
Retrieves the capabilities of the controller.
</summary>
            <param name="device">The type of the device whose capabilities are being retrieved.</param>
            <returns>A <see cref="T:SlimDX.XInput.Capabilities" /> structure describing the capabilities of the controller.</returns>
        </member>
        <member name="M:SlimDX.XInput.Controller.GetBatteryInformation(SlimDX.XInput.BatteryDeviceType)">
            <summary>
Retrieves battery information for the controller.
</summary>
            <param name="battery">The type of battery whose information is being retrieved.</param>
            <returns>A <see cref="T:SlimDX.XInput.BatteryInformation" /> structure describing the battery in the controller.</returns>
        </member>
        <member name="M:SlimDX.XInput.Controller.#ctor(SlimDX.XInput.UserIndex)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XInput.Controller" /> class.
</summary>
            <param name="userIndex">The index of the player whose controller is being represented.</param>
        </member>
        <member name="P:SlimDX.XInput.Controller.SoundCaptureGuid">
            <summary>
Gets the identifier for the sound capture device in the controller.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Controller.SoundRenderGuid">
            <summary>
Gets the identifier for the sound renderer in the controller.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Controller.IsConnected">
            <summary>
Gets a value indicating whether or not the controller is connected.
</summary>
        </member>
        <member name="T:SlimDX.XInput.Controller">
            <summary>
Represents an XInput controller.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlock.ReleaseAllDeviceObjects">
            <summary>
Release all references to device objects.
</summary>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlock.Capture">
            <summary>
Captures the relevant state to the state block.
</summary>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlock.Apply">
            <summary>
Applies the relevant state from the state block.
</summary>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlock.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.StateBlockMask)">
            <summary>
Constructs a new StateBlock object.
</summary>
            <param name="device">The device to associate the state block with.</param>
            <param name="mask">The mask describing which state properties are relevant to the state block.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlock.Device">
            <summary>
Gets the device the object is bound to.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Debug.ReportLiveDeviceObjects(SlimDX.Direct3D11.ReportingLevel)">
            <summary>
Reports information about live device objects.
</summary>
            <param name="level">Options for specifying the amount of detail in the output.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Debug.ValidateContextForDispatch(SlimDX.Direct3D11.DeviceContext)">
            <summary>
Validates the device context for dispatching operations.
</summary>
            <param name="context">The device context to validate.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Debug.ValidateContext(SlimDX.Direct3D11.DeviceContext)">
            <summary>
Validates the current pipeline state of a device context.
</summary>
            <param name="context">The device context to validate.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Debug.#ctor(SlimDX.Direct3D11.Device)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Debug" /> class.
</summary>
            <param name="device">The device with which the debug interface is to be associated.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.Debug.SwapChain">
            <summary>
Gets or sets the swap chain the runtime will use for automatic presentation.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Debug.PresentDelay">
            <summary>
Gets or sets the number of milliseconds to delay after a swap chain is presented.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Debug.FeatureFlags">
            <summary>
Gets or sets the flags indicating which debug features are enabled.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Debug">
            <summary>
An interface for controlling debug state and validating pipeline settings.
</summary>
            <unmanaged>ID3D11Debug</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.OnResetDevice">
            <summary>
Use this method to re-acquire resources and save initial state.
</summary>
            <unmanaged>ID3DXFont::OnResetDevice</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.OnLostDevice">
            <summary>
Use this method to release all references to video memory resources and delete all stateblocks.
This method should be called whenever a device is lost, or before resetting a device.
</summary>
            <unmanaged>ID3DXFont::OnLostDevice</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.PreloadText(System.String)">
            <summary>Loads formatted text into video memory to improve the efficiency of rendering to the device.</summary>
            <unmanaged>ID3DXFont::PreloadText</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.PreloadGlyphs(System.Int32,System.Int32)">
            <summary>Loads a series of glyphs into video memory to improve the efficiency of rendering to the device.</summary>
            <unmanaged>ID3DXFont::PreloadText</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.PreloadCharacters(System.Int32,System.Int32)">
            <summary>Loads a series of characters into video memory to improve the efficiency of rendering to the device.</summary>
            <unmanaged>ID3DXFont::PreloadText</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.MeasureString(SlimDX.Direct3D9.Sprite,System.String,SlimDX.Direct3D9.DrawTextFormat,System.Drawing.Rectangle@)">
            <summary>Computes the bounding rectangle for a given string to be rendered using this font.</summary>
            <unmanaged>ID3DXFont::DrawText</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.MeasureString(SlimDX.Direct3D9.Sprite,System.String,SlimDX.Direct3D9.DrawTextFormat)">
            <summary>Computes the bounding rectangle for a given string to be rendered using this font.</summary>
            <unmanaged>ID3DXFont::DrawText</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.DrawString(SlimDX.Direct3D9.Sprite,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Draws formatted text, optionally using a <see cref="T:SlimDX.Direct3D9.Sprite" /> object for improved performance.</summary>
            <unmanaged>ID3DXFont::DrawText</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.DrawString(SlimDX.Direct3D9.Sprite,System.String,System.Int32,System.Int32,SlimDX.Color4)">
            <summary>Draws formatted text, optionally using a <see cref="T:SlimDX.Direct3D9.Sprite" /> object for improved performance.</summary>
            <unmanaged>ID3DXFont::DrawText</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.DrawString(SlimDX.Direct3D9.Sprite,System.String,System.Drawing.Rectangle,SlimDX.Direct3D9.DrawTextFormat,System.Int32)">
            <summary>Draws formatted text, optionally using a <see cref="T:SlimDX.Direct3D9.Sprite" /> object for improved performance.</summary>
            <unmanaged>ID3DXFont::DrawText</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Font.DrawString(SlimDX.Direct3D9.Sprite,System.String,System.Drawing.Rectangle,SlimDX.Direct3D9.DrawTextFormat,SlimDX.Color4)">
            <summary>Draws formatted text, optionally using a <see cref="T:SlimDX.Direct3D9.Sprite" /> object for improved performance.</summary>
            <unmanaged>ID3DXFont::DrawText</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Font">
            <summary>Encapsulates the textures and resources needed to render a specific font on a specific device.</summary>
            <unmanaged>ID3DXFont</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Line">
            <summary>Implements line drawing using textured triangles.</summary>
            <unmanaged>ID3DXLine</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.BufferDescription.Equals(SlimDX.Direct3D10.BufferDescription@,SlimDX.Direct3D10.BufferDescription@)">
            <summary>
Returns a value indicating whether the two BufferDescriptions are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.BufferDescription.Equals(SlimDX.Direct3D10.BufferDescription)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D10.BufferDescription" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.BufferDescription.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.BufferDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.BufferDescription.op_Inequality(SlimDX.Direct3D10.BufferDescription,SlimDX.Direct3D10.BufferDescription)">
            <summary>
Tests for inequality between two BufferDescriptions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.BufferDescription.op_Equality(SlimDX.Direct3D10.BufferDescription,SlimDX.Direct3D10.BufferDescription)">
            <summary>
Tests for equality between two BufferDescriptions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.BufferDescription.#ctor(System.Int32,SlimDX.Direct3D10.ResourceUsage,SlimDX.Direct3D10.BindFlags,SlimDX.Direct3D10.CpuAccessFlags,SlimDX.Direct3D10.ResourceOptionFlags)">
            <summary>
Constructs a new BufferDescription object.
</summary>
            <param name="sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name="usage">Identifies the usage pattern for the buffer.</param>
            <param name="bindFlags">Specifies how the buffer will be bound to the pipeline.</param>
            <param name="accessFlags">Specifies how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Specifies miscellaneous resource options.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.BufferDescription.OptionFlags">
            <summary>
Gets or sets the flags specifying miscellaneous resource options.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.BufferDescription.CpuAccessFlags">
            <summary>
Gets or sets the flags specifying how the CPU will be allowed to access the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.BufferDescription.BindFlags">
            <summary>
Gets or sets the flags specifying how the buffer is bound to the pipeline.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.BufferDescription.Usage">
            <summary>
Gets or sets the intended usage pattern of the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.BufferDescription.SizeInBytes">
            <summary>
Gets or sets the size, in bytes, of the buffer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.BufferDescription">
            <summary>
Describes a buffer resource.
</summary>
            <unmanaged>D3D10_BUFFER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageInformation.Equals(SlimDX.Direct3D11.ImageInformation@,SlimDX.Direct3D11.ImageInformation@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageInformation.Equals(SlimDX.Direct3D11.ImageInformation)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageInformation.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageInformation.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageInformation.op_Inequality(SlimDX.Direct3D11.ImageInformation,SlimDX.Direct3D11.ImageInformation)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageInformation.op_Equality(SlimDX.Direct3D11.ImageInformation,SlimDX.Direct3D11.ImageInformation)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageInformation.FromMemory(System.Byte[])">
            <summary>
Loads information about the given image file in memory.
</summary>
            <param name="memory">An array of memory containing the image file.</param>
            <returns>An <see cref="T:SlimDX.Direct3D11.ImageInformation" /> instance containing information about the image file, or <c>null</c> if the file cannot be loaded.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageInformation.FromFile(System.String)">
            <summary>
Loads information about the given image file.
</summary>
            <param name="fileName">Name of the image file.</param>
            <returns>An <see cref="T:SlimDX.Direct3D11.ImageInformation" /> instance containing information about the image file, or <c>null</c> if the file cannot be loaded.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.FileFormat">
            <summary>
The format of the image file.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.Dimension">
            <summary>
The type of the texture stored in the file.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.Format">
            <summary>
The original format of the image.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.OptionFlags">
            <summary>
Flags that identifies other, less common resource options.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.MipLevels">
            <summary>
Number of mipmap levels in the original image.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.ArraySize">
            <summary>
Size of the image, in bytes.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.Depth">
            <summary>
Depth of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.Height">
            <summary>
Height of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageInformation.Width">
            <summary>
Width of the original image, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ImageInformation">
            <summary>
Contains the description of the contents of an image file.
</summary>
            <unmanaged>D3DX11_IMAGE_INFO</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.Success">
            <summary>
Represents the result of a successful operation.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb509553">S_OK</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.NotCurrentlyAvailable">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged>DXGI_ERROR_NOT_CURRENTLY_AVAILABLE</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.Nonexclusive">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_NONEXCLUSIVE</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.DriverInternalError">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_DRIVER_INTERNAL_ERROR</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.WasStillDrawing">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_WAS_STILL_DRAWING</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.DeviceReset">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_DEVICE_RESET</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.DeviceHung">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_DEVICE_HUNG</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.DeviceRemoved">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_DEVICE_REMOVED</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.Unsupported">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_UNSUPPORTED</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.MoreData">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_MORE_DATA</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.NotFound">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_NOT_FOUND</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.InvalidCall">
            <summary />
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb509553">DXGI_ERROR_INVALID_CALL</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.ModeChangeInProgress">
            <summary />
            <remarks>This is a successful result.</remarks>
            <unmanaged href="cc308061">DXGI_STATUS_MODE_CHANGE_IN_PROGRESS</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.ModeChanged">
            <summary />
            <remarks>This is a successful result.</remarks>
            <unmanaged href="cc308061">DXGI_STATUS_MODE_CHANGED</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.VideoPresentNetworkSourceInUse">
            <summary />
            <remarks>This is a successful result.</remarks>
            <unmanaged>DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.NoDesktopAccess">
            <summary />
            <remarks>This is a successful result.</remarks>
            <unmanaged>DXGI_STATUS_NO_DESKTOP_ACCESS</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.NoRedirection">
            <summary />
            <remarks>This is a successful result.</remarks>
            <unmanaged>DXGI_STATUS_NO_REDIRECTION</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.Clipped">
            <summary />
            <remarks>This is a successful result.</remarks>
            <unmanaged>DXGI_STATUS_CLIPPED</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.ResultCode.Occluded">
            <summary>
Returned when the window content is not visible.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="cc308061">DXGI_STATUS_OCCLUDED</unmanaged>
        </member>
        <member name="T:SlimDX.DXGI.ResultCode">
            <summary>Defines result codes that are returned by DXGI functions.</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="M:SlimDX.Windows.DisplayMonitor.Equals(SlimDX.Windows.DisplayMonitor)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Windows.DisplayMonitor.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Windows.DisplayMonitor.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Windows.DisplayMonitor.op_Inequality(SlimDX.Windows.DisplayMonitor,SlimDX.Windows.DisplayMonitor)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Windows.DisplayMonitor.op_Equality(SlimDX.Windows.DisplayMonitor,SlimDX.Windows.DisplayMonitor)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.NoiseSuppress.Enabled">
            <summary>
Gets or sets he noise suppression parameters of a buffer.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.NoiseSuppress.Reset">
            <summary>
Sets the enumerator to its initial position, which is before the first element in the collection.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.NoiseSuppress">
            <summary>
The NoiseSuppress object is used to set and retrieve parameters on a capture buffer that supports noise suppression. This object requires Microsoft Windows XP or later.
</summary>
            <unmanaged>IDirectSoundCaptureFXNoiseSuppress</unmanaged>
        </member>
        <member name="M:SlimDX.DirectInput.Keyboard.GetObjectPropertiesByName(System.String)">
            <summary>
Gets properties about a single object on an input device.
</summary>
            <param name="name">The name of the object whose properties are to be retrieved.</param>
            <returns>The properties of the desired object.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Keyboard.GetBufferedData">
            <summary>
Retrieves buffered data from the device.
</summary>
            <returns>A collection of buffered input events.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Keyboard.GetCurrentState(SlimDX.DirectInput.KeyboardState@)">
            <summary>
Retrieves the current device state.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Keyboard.GetCurrentState">
            <summary>
Retrieves the current device state.
</summary>
            <returns>The current device state.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.DepthStencilState.FromDescription(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.DepthStencilStateDescription)">
            <summary>
Constructs a new DepthStencilState based on the specified description. If the description
is identical to that of an existing DepthStencilState object, the existing DepthStencilState object
is returned instead of a new instance.
</summary>
            <param name="device">The device to associate the state object with</param>
            <param name="description">The state description.</param>
            <returns>The DepthStencilState object.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10.DepthStencilState.Description">
            <summary>
Gets the state's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.DepthStencilState">
            <summary>
A state object defining the behavior of the depth and stencil test stages of the output merger. 
</summary>
            <unmanaged>ID3D10DepthStencilState</unmanaged>
        </member>
        <member name="M:SlimDX.SHVector.Equals(SlimDX.SHVector,SlimDX.SHVector)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.SHVector.Equals(SlimDX.SHVector)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.SHVector.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.SHVector.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.SHVector.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.SHVector.op_Inequality(SlimDX.SHVector,SlimDX.SHVector)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.SHVector.op_Equality(SlimDX.SHVector,SlimDX.SHVector)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.SHVector.op_Multiply(System.Single,SlimDX.SHVector)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.SHVector.op_Multiply(SlimDX.SHVector,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.SHVector.op_Addition(SlimDX.SHVector,SlimDX.SHVector)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="T:SlimDX.Direct3D10.SpriteInstance">
            <summary>
Describes instance data for a single sprite rendered by the
<see cref="T:SlimDX.Direct3D10.Sprite" /> interface.
</summary>
            <unmanaged>D3DX10_SPRITE</unmanaged>
        </member>
        <member name="P:SlimDX.XAudio2.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.XAudio2.ResultCode.Success">
            <summary>
Represents the result of a successful operation.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="aa378137">S_OK</unmanaged>
        </member>
        <member name="P:SlimDX.XAudio2.ResultCode.DeviceInvalidated">
            <summary>
An audio device became unusable (possibly due to being unplugged, or some other event).
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="cc308077">XAUDIO2_E_DEVICE_INVALIDATED</unmanaged>
        </member>
        <member name="P:SlimDX.XAudio2.ResultCode.EffectCreationFailed">
            <summary>
An effect failed to instantiate.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="cc308077">XAUDIO2_E_XAPO_CREATION_FAILED</unmanaged>
        </member>
        <member name="P:SlimDX.XAudio2.ResultCode.XmaDecoderError">
            <summary>
The decoder suffered an unrecoverable error.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="cc308077">XAUDIO2_E_XMA_DECODER_ERROR</unmanaged>
        </member>
        <member name="P:SlimDX.XAudio2.ResultCode.InvalidCall">
            <summary>
Returned by XAudio2 for certain API usage errors (invalid calls etc) that
are hard to avoid completely and should be handled by a title at runtime.
(API usage errors that are completely avoidable, such as invalid parameters,
cause an ASSERT in debug builds and undefined behavior in retail builds,
so no error code is defined for them.)
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="cc308077">XAUDIO2_E_INVALID_CALL</unmanaged>
        </member>
        <member name="T:SlimDX.XAudio2.ResultCode">
            <summary>Defines result codes that are returned by XAudio 2 functions.</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.IsSampleFrequencyShader">
            <summary>
Gets a value indicating whether the shader is a sample frequency shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.InterfaceSlotCount">
            <summary>
Gets the number of interface slots.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.ConditionalMoveInstructionCount">
            <summary>
Gets the number of conditional move instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.MoveInstructionCount">
            <summary>
Gets the number of move instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.ConversionInstructionCount">
            <summary>
Gets the number of conversion instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.BitwiseInstructionCount">
            <summary>
Gets the number of bitwise instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.Description">
            <summary>
Gets the shader's description.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.GeometryShaderInputPrimitive">
            <summary>
Gets the input primitive used by the geometry shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflection.MinimumFeatureLevel">
            <summary>
Gets the minimum feature level required to use the shader.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflection.GetResourceBindingDescription(System.String)">
            <summary>
Gets a description of the resources bound to a shader.
</summary>
            <param name="name">The name of the bound resource.</param>
            <returns>A description of the resource bound with the given name.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflection.GetResourceBindingDescription(System.Int32)">
            <summary>
Gets a description of the resources bound to a shader.
</summary>
            <param name="index">Zero-based index of the bound resource.</param>
            <returns>A description of the resource bound at the given index.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflection.GetPatchConstantParameterDescription(System.Int32)">
            <summary>
Gets the description of a patch-constant parameter.
</summary>
            <param name="index">The zero-based index of the patch-constant parameter whose description is to be retrieved.</param>
            <returns>The description of the patch-constant parameter at the given index.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflection.GetOutputParameterDescription(System.Int32)">
            <summary>
Gets the description of an output parameter.
</summary>
            <param name="index">The zero-based index of the output parameter whose description is to be retrieved.</param>
            <returns>The description of the output parameter at the given index.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflection.GetInputParameterDescription(System.Int32)">
            <summary>
Gets the description of an input parameter.
</summary>
            <param name="index">The zero-based index of the input parameter whose description is to be retrieved.</param>
            <returns>The description of the input parameter at the given index.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflection.GetConstantBuffer(System.String)">
            <summary>
Gets a constant buffer by name.
</summary>
            <param name="name">The name of the constant buffer to retrieve.</param>
            <returns>The constant buffer with the given name.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflection.GetConstantBuffer(System.Int32)">
            <summary>
Gets a constant buffer by index.
</summary>
            <param name="index">The zero-based index of the constant buffer to retrieve.</param>
            <returns>The constant buffer at the given index.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflection.#ctor(SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.D3DCompiler.ShaderReflection" /> class.
</summary>
            <param name="bytecode">The compiled shader or effect to reflect upon.</param>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderReflection">
            <summary>
Defines an interface for reflecting on shader information and metadata.
</summary>
            <unmanaged>ID3D11ShaderReflection</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.Success">
            <summary>
Represents the result of a successful operation.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="aa378137">S_OK</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.AlreadyRegistered">
            <summary>
The given interface is already registered.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>DWRITE_E_ALREADYREGISTERED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.FontCollectionObsolete">
            <summary>
A font collection is obsolete due to changes in the system.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>DWRITE_E_FONTCOLLECTIONOBSOLETE</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.InvalidFileAccess">
            <summary>
A font file exists but could not be opened due to access denied, sharing violation, or similar error.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>DWRITE_E_FILEACCESS</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.FileNotFound">
            <summary>
A font file could not be opened because the file, directory, network location, drive, or other storage
location does not exist or is unavailable.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>DWRITE_E_FILENOTFOUND</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.NonexistentFont">
            <summary>
Indicates the specified font does not exist.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>DWRITE_E_NOFONT</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.UnexpectedError">
            <summary>
Indicates an error originating in DirectWrite code, which is not expected to occur but is safe to recover from.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>DWRITE_E_UNEXPECTED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.ResultCode.InvalidFileFormat">
            <summary>
Indicates an error in an input file such as a font file.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>DWRITE_E_FILEFORMAT</unmanaged>
        </member>
        <member name="T:SlimDX.DirectWrite.ResultCode">
            <summary>Defines result codes that are returned by DirectWrite functions.</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.RenderToSurface">
            <summary>Used to generalize the process of rendering to surfaces.</summary>
            <unmanaged>ID3DXRenderToSurface</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.ZeroVector">
            <summary>
The supplied vector is vero.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_ZERO_VECTOR</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.WrongState">
            <summary>
The object was not in the correct state to process the method.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_WRONG_STATE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.WrongResourceDomain">
            <summary>
The resource was realized on the wrong render target.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_WRONG_RESOURCE_DOMAIN</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.WrongFactory">
            <summary>
Objects used together must be created from the same factory instance.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_WRONG_FACTORY</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.Win32Error">
            <summary>
An unknown Win32 failure occurred.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_WIN32_ERROR</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.UnsupportedVersion">
            <summary>
The requested D2D version is not supported.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_UNSUPPORTED_VERSION</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.UnsupportedOperation">
            <summary>
The requested opertion is not supported.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_UNSUPPORTED_OPERATION</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.TooManyShaderElements">
            <summary>
Shader construction failed because it was too complex.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_TOO_MANY_SHADER_ELEMENTS</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.TextRendererNotReleased">
            <summary>
The application is holding a reference to the IDWriteTextRenderer interface 
after the corresponding DrawText or DrawTextLayout call has returned.
The TextRenderer instance will be zombied.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_TEXT_RENDERER_NOT_RELEASED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.TextEffectIsWrongType">
            <summary>
A text client drawing effect object is of the wrong type.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_TEXT_EFFECT_IS_WRONG_TYPE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.TargetNotGdiCompatible">
            <summary>
The render target is not compatible with GDI.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_TARGET_NOT_GDI_COMPATIBLE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.Success">
            <summary>
Represents the result of a successful operation.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.ShaderCompileFailed">
            <summary>
Shader compilation failed.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_SHADER_COMPILE_FAILED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.ScreenAccessDenied">
            <summary>
D2D could not access the screen.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_SCREEN_ACCESS_DENIED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.ScannerFailed">
            <summary>
The geometry scanner failed to process the data.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_SCANNER_FAILED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.RenderTargetHasLayerOrClippingRectangle">
            <summary>
Attempted to copy from a render target while a layer or clip rect is applied.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.RecreateTarget">
            <summary>
There has been a presentation error that may be recoverable. The caller
needs to recreate, rerender the entire frame, and reattempt present.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_RECREATE_TARGET</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.PushPopUnbalanced">
            <summary>
The push and pop calls were unbalanced.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_PUSH_POP_UNBALANCED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.PopCallDidNotMatchPush">
            <summary>
The pop call did not match the corresponding push call.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_POP_CALL_DID_NOT_MATCH_PUSH</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.NoHardwareDevice">
            <summary>
No HW rendering device is available for this operation.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_NO_HARDWARE_DEVICE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.MaxTextureSizeExceeded">
            <summary>
Requested DX surface size exceeded maximum texture size.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_MAX_TEXTURE_SIZE_EXCEEDED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.LayerAlreadyInUse">
            <summary>
A layer resource was used more than once.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_LAYER_ALREADY_IN_USE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.InvalidCall">
            <summary>
A call to this method is invalid.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_INVALID_CALL</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.InternalError">
            <summary>
An internal error (D2D bug) occurred. On checked builds, we would assert.
The application should close this instance of D2D and should consider restarting its process.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_INTERNAL_ERROR</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.NotInitialized">
            <summary>
The object has not yet been initialized.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_NOT_INITIALIZED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.InsufficientBuffer">
            <summary>
The supplied buffer was too small to accomodate the data.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_INSUFFICIENT_BUFFER</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.IncompatibleBrushTypes">
            <summary>
The brush types are incompatible for the call.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_INCOMPATIBLE_BRUSH_TYPES</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.DisplayStateInvalid">
            <summary>
A valid display state could not be determined.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_DISPLAY_STATE_INVALID</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.DisplayFormatNotSupported">
            <summary>
The display format needed to render is not supported by the hardware device.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_DISPLAY_FORMAT_NOT_SUPPORTED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct2D.ResultCode.BadNumber">
            <summary>
Invalid number.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D2DERR_BAD_NUMBER</unmanaged>
        </member>
        <member name="T:SlimDX.Direct2D.ResultCode">
            <summary>Defines result codes that are returned by Direct2D functions.</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.JapaneseJ3100Keyboard">
            <summary>
Japanese J3100 keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.JapaneseAXKeyboard">
            <summary>
Japanese AX keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.Japanese106Keyboard">
            <summary>
Japanese 106-key keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.JapaneseNec106Keyboard">
            <summary>
Japanese NEC PC98 106-key keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.JapaneseNecLaptopKeyboard">
            <summary>
Japanese NEC PC98 laptop keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.JapaneseNecKeyboard">
            <summary>
Japanse NEC PC98 keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.Nokia9140Keyboard">
            <summary>
Nokia 9140 keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.Nokia1050Keyboard">
            <summary>
Nokia 1050 keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.StandardKeyboard">
            <summary>
IBM PC Enhanced 101/102-key keyboard or Microsoft Natural keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.PCATKeyboard">
            <summary>
IBM PC/AT 84-key keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.OlivettiKeyboard">
            <summary>
Olivetti 102-key keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.PCXTKeyboard">
            <summary>
IBM PC/XT 83-key keyboard.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.StandardGamepad">
            <summary>
Standard game pad that provides the minimum number of objects for
action mapping.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.FlightYoke">
            <summary>
A yoke for flight simulators.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.FlightStick">
            <summary>
A joystick for flight simulators.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.RemoteControlledFlight">
            <summary>
Flight device based upon a remote control for model aircraft.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.ThreePedals">
            <summary>
Steering device that reports acceleration, break, and clutch pedal values from
separate axes.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.DrivingHandheld">
            <summary>
Hand-held steering device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.DualPedals">
            <summary>
Steering device that reports accelerations and break pedal values from separate axes.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.CombinedPedals">
            <summary>
Steering device that reports accelerations and break pedal values from a single axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.ControlDeviceUnknown">
            <summary>
Unknown subtype for a control device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.Hardwired">
            <summary>
Device that must use its default configuration and cannot be remapped.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.CommunicationSelections">
            <summary>
Control used to make communications selections.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.SixDegreesOfFreedom">
            <summary>
Device with six degrees of freedom; that is, three lateral axes and three rotation axes.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.FirstPersonShooter">
            <summary>
Device designed for first-person person shooter games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.FirstPersonUnknown">
            <summary>
Unknown subtype for a first-person device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceSubtype.Limited">
            <summary>
A device that does not provide the minimum number of device objects for
action mapping.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceSubtype">
            <summary>
Specifies the sub type of a DirectInput device.
</summary>
        </member>
        <member name="M:SlimDX.DirectWrite.TextAnalyzer.AnalyzeBidi(SlimDX.DirectWrite.TextAnalysisSource,System.Int32,System.Int32,SlimDX.DirectWrite.TextAnalysisSink)">
            <summary>
Analyzes a text range for script directionality, reading attributes
from the source and reporting levels to the sink callback SetBidiLevel.
</summary>
            <param name="analysisSource">Source object to analyze.</param>
            <param name="textPosition">Starting position within the source object.</param>
            <param name="textLength">Length to analyze.</param>
            <param name="analysisSink">Callback object.</param>
            <returns>7
Standard Result error code.
</returns>
            <remarks>
While the function can handle multiple paragraphs, the text range
should not arbitrarily split the middle of paragraphs. Otherwise the
returned levels may be wrong, since the Bidi algorithm is meant to
apply to the paragraph as a whole.
</remarks>
            <remarks>
Embedded control codes (LRE/LRO/RLE/RLO/PDF) are taken into account.
</remarks>
        </member>
        <member name="M:SlimDX.DirectWrite.TextAnalyzer.AnalyzeScript(SlimDX.DirectWrite.TextAnalysisSource,System.Int32,System.Int32,SlimDX.DirectWrite.TextAnalysisSink)">
            <summary>
Analyzes a text range for script boundaries, reading text attributes
from the source and reporting the Unicode script ID to the sink 
callback SetScript.
</summary>
            <param name="analysisSource">Source object to analyze.</param>
            <param name="textPosition">Starting position within the source object.</param>
            <param name="textLength">Length to analyze.</param>
            <param name="analysisSink">Callback object.</param>
            <returns>
Standard Result error code.
</returns>
        </member>
        <member name="T:SlimDX.DirectWrite.TextAnalyzer">
            <summary>
Analyzes various text properties for complex script processing.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerStateDescription.Equals(SlimDX.Direct3D11.RasterizerStateDescription@,SlimDX.Direct3D11.RasterizerStateDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerStateDescription.Equals(SlimDX.Direct3D11.RasterizerStateDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerStateDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerStateDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerStateDescription.op_Inequality(SlimDX.Direct3D11.RasterizerStateDescription,SlimDX.Direct3D11.RasterizerStateDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerStateDescription.op_Equality(SlimDX.Direct3D11.RasterizerStateDescription,SlimDX.Direct3D11.RasterizerStateDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.IsAntialiasedLineEnabled">
            <summary>
Determines whether to enable line antialiasing; only applies if doing line drawing and IsMultisampleEnabled is false.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.IsMultisampleEnabled">
            <summary>
Determines whether to enable multisample antialiasing.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.IsScissorEnabled">
            <summary>
Determines whether to enable scissor-rectangle culling. All pixels ouside an active scissor rectangle are culled.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.IsDepthClipEnabled">
            <summary>
Determines whether to enable clipping based on distance.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.SlopeScaledDepthBias">
            <summary>
Scalar on a given pixel's slope.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.DepthBiasClamp">
            <summary>
Maximum depth bias of a pixel.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.DepthBias">
            <summary>
Depth value added to a given pixel.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.IsFrontCounterclockwise">
            <summary>
Determines if a triangle is front- or back-facing. If this parameter is true, then a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If this parameter is false then the opposite is true.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.CullMode">
            <summary>
Gets or sets which triangles are to be culled.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerStateDescription.FillMode">
            <summary>
Gets or sets the fill mode to use when rendering.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.RasterizerStateDescription">
            <summary>
Provides a description for rasterizer state objects.
</summary>
            <unmanaged>D3D11_RASTERIZER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.Draw(SlimDX.Direct3D9.Texture,SlimDX.Color4)">
            <summary>Adds a sprite to the list of batched sprites.</summary>
            <param name="color">The color and alpha channels of the texture are modulated by this color.</param>
            <unmanaged>ID3DXSprite::Draw</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.Draw(SlimDX.Direct3D9.Texture,System.Nullable`1{SlimDX.Vector3},System.Nullable`1{SlimDX.Vector3},SlimDX.Color4)">
            <summary>Adds a sprite to the list of batched sprites.</summary>
            <param name="center">Specifies the center position of the sprite.</param>
            <param name="position">Specifies the position at which to render the sprite.</param>
            <param name="color">The color and alpha channels of the texture are modulated by this color.</param>
            <unmanaged>ID3DXSprite::Draw</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.Draw(SlimDX.Direct3D9.Texture,System.Nullable`1{System.Drawing.Rectangle},SlimDX.Color4)">
            <summary>Adds a sprite to the list of batched sprites.</summary>
            <param name="sourceRect">A rectangle that specifies the portion of the source texture to use.</param>
            <param name="color">The color and alpha channels of the texture are modulated by this color.</param>
            <unmanaged>ID3DXSprite::Draw</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.Draw(SlimDX.Direct3D9.Texture,System.Nullable`1{System.Drawing.Rectangle},System.Nullable`1{SlimDX.Vector3},System.Nullable`1{SlimDX.Vector3},SlimDX.Color4)">
            <summary>Adds a sprite to the list of batched sprites.</summary>
            <param name="sourceRect">A rectangle that specifies the portion of the source texture to use. If null is passed, the entire source image will be used.</param>
            <param name="center">Specifies the center position of the sprite.</param>
            <param name="position">Specifies the position at which to render the sprite.</param>
            <param name="color">The color and alpha channels of the texture are modulated by this color.</param>
            <unmanaged>ID3DXSprite::Draw</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.SetWorldViewRH(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Sets the right-handed world-view transform for a sprite.
A call to this method is required before billboarding or sorting sprites.
</summary>
            <unmanaged>ID3DXSprite::SetWorldViewRH</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.SetWorldViewLH(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Sets the left-handed world-view transform for a sprite.
A call to this method is required before billboarding or sorting sprites.
</summary>
            <unmanaged>ID3DXSprite::SetWorldViewLH</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.OnResetDevice">
            <summary>
Use this method to re-acquire resources and save initial state.
</summary>
            <unmanaged>ID3DXFont::OnResetDevice</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.OnLostDevice">
            <summary>
Use this method to release all references to video memory resources and delete all stateblocks.
This method should be called whenever a device is lost, or before resetting a device.
</summary>
            <unmanaged>ID3DXFont::OnLostDevice</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.Flush">
            <summary>
Forces all batched sprites to be submitted to the device.
Device states remain as they were after the last call to <see cref="M:SlimDX.Direct3D9.Sprite.Begin(SlimDX.Direct3D9.SpriteFlags)" />.
The list of batched sprites is then cleared.
</summary>
            <unmanaged>ID3DXSprite::Flush</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.End">
            <summary>Calls <see cref="M:SlimDX.Direct3D9.Sprite.Flush" /> and restores the device state to how it was before <see cref="M:SlimDX.Direct3D9.Sprite.Begin(SlimDX.Direct3D9.SpriteFlags)" /> was called.</summary>
            <unmanaged>ID3DXSprite::End</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.Begin(SlimDX.Direct3D9.SpriteFlags)">
            <summary>Prepares the object and device for drawing sprites.</summary>
            <unmanaged>ID3DXSprite::Begin</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Sprite.#ctor(SlimDX.Direct3D9.Device)">
            <summary>Initializes a new instance of a sprite object.</summary>
            <param name="device">The device to use when creating the new sprite object.</param>
            <unmanaged>D3DXCreateSprite</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Sprite">
            <summary>Provides a set of methods that simplify the process of drawing sprites.</summary>
            <unmanaged>ID3DXSprite</unmanaged>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.WetDryMixMin">
            <summary>
Minimum ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.WetDryMixMax">
            <summary>
Maximum ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.WetDryMixDefault">
            <summary>
Default ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.WaveformSin">
            <summary>
Sine waveform shape of the LFO. By default, the waveform is a sine.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.WaveformTriangle">
            <summary>
Triangular waveform shape of the LFO. By default, the waveform is a sine.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.WaveformDefault">
            <summary>
Default waveform shape of the LFO. By default, the waveform is a sine.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.Phase90">
            <summary>
Positive 90 phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.Phase180">
            <summary>
Positive 180 phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.PhaseZero">
            <summary>
Zero phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.PhaseNegative90">
            <summary>
Negative 90 phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.PhaseNegative180">
            <summary>
Negative 180 phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.PhaseMin">
            <summary>
Minimum phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.PhaseMax">
            <summary>
Maximum phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.PhaseDefault">
            <summary>
Default phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.FrequencyMin">
            <summary>
Minimum frequency of the LFO(low-frequency oscillator).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.FrequencyMax">
            <summary>
Maximum frequency of the LFO(low-frequency oscillator).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.FrequencyDefault">
            <summary>
Default frequency of the LFO(low-frequency oscillator).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.FeedbackMin">
            <summary>
Minimum percentage of output signal to feed back into the effect's input.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.FeedbackMax">
            <summary>
Maximum percentage of output signal to feed back into the effect's input.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.FeedbackDefault">
            <summary>
Default percentage of output signal to feed back into the effect's input.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.DepthMin">
            <summary>
Minimum percentage by which the delay time is modulated by the low-frequency oscillator (LFO), in hundredths of a percentage point.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.DepthMax">
            <summary>
Maximum percentage by which the delay time is modulated by the low-frequency oscillator (LFO), in hundredths of a percentage point.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.DepthDefault">
            <summary>
Default percentage by which the delay time is modulated by the low-frequency oscillator (LFO), in hundredths of a percentage point.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.DelayMin">
            <summary>
Minimum number of milliseconds the input is delayed before it is played back.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.DelayMax">
            <summary>
Maximum number of milliseconds the input is delayed before it is played back.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.FlangerEffect.DelayDefault">
            <summary>
Default number of milliseconds the input is delayed before it is played back.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.FlangerEffect.WetDryMix">
            <summary>
Ratio of wet (processed) signal to dry (unprocessed) signal. The default value is 50.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.FlangerEffect.Waveform">
            <summary>
Waveform shape of the LFO. By default, the waveform is a sine.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.FlangerEffect.Phase">
            <summary>
Phase differential between left and right LFOs.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.FlangerEffect.Frequency">
            <summary>
Frequency of the LFO. The default value is 0.25.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.FlangerEffect.Feedback">
            <summary>
Percentage of output signal to feed back into the effect's input. The default value is -50.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.FlangerEffect.Depth">
            <summary>
Percentage by which the delay time is modulated by the low-frequency oscillator (LFO), in hundredths of a percentage point. The default value is 100.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.FlangerEffect.Delay">
            <summary>
Number of milliseconds the input is delayed before it is played back. The default value is 2 ms.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.FlangerEffect">
            <summary>
The SoundEffectFlanger object is used to set and retrieve effect parameters on a buffer that supports flange.
</summary>
            <unmanaged>IDirectSoundFXFlanger</unmanaged>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickObjects.PointOfView(System.Int32)">
            <summary>
Provides scan codes for the specified Point-Of-View controller.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickObjects.Slider(System.Int32)">
            <summary>
Provides scan codes for the specified slider.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickObjects.Button(System.Int32)">
            <summary>
Provides scan codes for the specified button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.JoystickObjects.ZAxis">
            <summary>
The rotational X axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.JoystickObjects.YAxis">
            <summary>
The rotational X axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.JoystickObjects.XAxis">
            <summary>
The rotational X axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.JoystickObjects.ZAxisRotation">
            <summary>
The rotational X axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.JoystickObjects.YAxisRotation">
            <summary>
The rotational X axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.JoystickObjects.XAxisRotation">
            <summary>
The rotational X axis.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.JoystickObjects">
            <summary>
Defines possible joystick object codes.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.AnyControl.Button(System.Int32)">
            <summary>
Refers to any button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.PointOfView4">
            <summary>
Refers to any point-of-view controller.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.PointOfView3">
            <summary>
Refers to any point-of-view controller.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.PointOfView2">
            <summary>
Refers to any point-of-view controller.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.PointOfView1">
            <summary>
Refers to any point-of-view controller.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.ZAxis2">
            <summary>
Refers to any z-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.ZAxis1">
            <summary>
Refers to any z-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.YAxis2">
            <summary>
Refers to any y-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.YAxis1">
            <summary>
Refers to any y-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.XAxis2">
            <summary>
Refers to any x-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.XAxis1">
            <summary>
Refers to any x-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.VAxis2">
            <summary>
Refers to any v-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.VAxis1">
            <summary>
Refers to any v-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.UAxis2">
            <summary>
Refers to any u-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.UAxis1">
            <summary>
Refers to any u-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.SAxis2">
            <summary>
Refers to any s-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.SAxis1">
            <summary>
Refers to any s-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.RAxis2">
            <summary>
Refers to any r-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.RAxis1">
            <summary>
Refers to any r-axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Clutch2">
            <summary>
Refers to any clutch.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Clutch1">
            <summary>
Refers to any clutch.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Brake2">
            <summary>
Refers to any brake.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Brake1">
            <summary>
Refers to any brake.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Accelerator2">
            <summary>
Refers to any accelerator.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Accelerator1">
            <summary>
Refers to any accelerator.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Axis3">
            <summary>
Refers to any axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Axis2">
            <summary>
Refers to any axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AnyControl.Axis1">
            <summary>
Refers to any axis.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.AnyControl">
            <summary>
Defines object codes that refer to any control type on a device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.TimestampQueryData.Equals(SlimDX.Direct3D11.TimestampQueryData@,SlimDX.Direct3D11.TimestampQueryData@)">
            <summary>
Returns a value indicating whether the two BufferDescriptions are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.TimestampQueryData.Equals(SlimDX.Direct3D11.TimestampQueryData)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.TimestampQueryData" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.TimestampQueryData.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.TimestampQueryData.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.TimestampQueryData.op_Inequality(SlimDX.Direct3D11.TimestampQueryData,SlimDX.Direct3D11.TimestampQueryData)">
            <summary>
Tests for inequality between two TimestampQueryDatas.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.TimestampQueryData.op_Equality(SlimDX.Direct3D11.TimestampQueryData,SlimDX.Direct3D11.TimestampQueryData)">
            <summary>
Tests for equality between two TimestampQueryDatas.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.TimestampQueryData.IsDisjointed">
            <summary>
If this is <c>true</c>, something occurred in between the query's Begin and End calls that caused the 
timestamp counter to become discontinuous or disjoint, such as unplugging the AC chord on a laptop, overheating, or throttling up/down due to laptop savings events. 
The timestamp returned by GetData for a timestamp query is only reliable if IsDisjointed is <c>false</c>.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TimestampQueryData.Frequency">
            <summary>
How frequently the GPU counter increments in Hz.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.TimestampQueryData">
            <summary>
Contains query information about the reliability of a timestamp query.
</summary>
            <unmanaged>D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</unmanaged>
        </member>
        <member name="M:SlimDX.DirectInput.Mouse.GetObjectPropertiesByName(System.String)">
            <summary>
Gets properties about a single object on an input device.
</summary>
            <param name="name">The name of the object whose properties are to be retrieved.</param>
            <returns>The properties of the desired object.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Mouse.GetBufferedData">
            <summary>
Retrieves buffered data from the device.
</summary>
            <returns>A collection of buffered input events.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Mouse.GetCurrentState(SlimDX.DirectInput.MouseState@)">
            <summary>
Retrieves the current device state.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Mouse.GetCurrentState">
            <summary>
Retrieves the current device state.
</summary>
            <returns>The current device state.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.MouseState.GetButtons">
            <summary>
Gets the state of the mouse buttons.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.MouseState.Z">
            <summary>
Gets the Z axis of the mouse.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.MouseState.Y">
            <summary>
Gets the Y axis of the mouse.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.MouseState.X">
            <summary>
Gets the X axis of the mouse.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.MouseState">
            <summary>
Describes the state of a mouse device.
</summary>
            <unmanaged>DIMOUSESTATE2</unmanaged>
        </member>
        <member name="M:SlimDX.X3DAudio.CurvePoint.Equals(SlimDX.X3DAudio.CurvePoint@,SlimDX.X3DAudio.CurvePoint@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.CurvePoint.Equals(SlimDX.X3DAudio.CurvePoint)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.CurvePoint.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.CurvePoint.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.CurvePoint.op_Inequality(SlimDX.X3DAudio.CurvePoint,SlimDX.X3DAudio.CurvePoint)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.CurvePoint.op_Equality(SlimDX.X3DAudio.CurvePoint,SlimDX.X3DAudio.CurvePoint)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.BatteryInformation.Equals(SlimDX.XInput.BatteryInformation@,SlimDX.XInput.BatteryInformation@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.BatteryInformation.Equals(SlimDX.XInput.BatteryInformation)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.BatteryInformation.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.BatteryInformation.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XInput.BatteryInformation.op_Inequality(SlimDX.XInput.BatteryInformation,SlimDX.XInput.BatteryInformation)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.BatteryInformation.op_Equality(SlimDX.XInput.BatteryInformation,SlimDX.XInput.BatteryInformation)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.XInput.BatteryInformation.Level">
            <summary>
Gets the relative charge level of the battery.
</summary>
        </member>
        <member name="P:SlimDX.XInput.BatteryInformation.Type">
            <summary>
Gets the type of the battery.
</summary>
        </member>
        <member name="T:SlimDX.XInput.BatteryInformation">
            <summary>
Contains information about the battery of an XInput device.
</summary>
            <unmanaged>XINPUT_BATTERY_INFORMATION</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderDescription.Equals(SlimDX.Direct3D11.EffectShaderDescription@,SlimDX.Direct3D11.EffectShaderDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderDescription.Equals(SlimDX.Direct3D11.EffectShaderDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderDescription.op_Inequality(SlimDX.Direct3D11.EffectShaderDescription,SlimDX.Direct3D11.EffectShaderDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderDescription.op_Equality(SlimDX.Direct3D11.EffectShaderDescription,SlimDX.Direct3D11.EffectShaderDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectShaderDescription.PatchConstantCount">
            <summary>
Number of entries in the patch constant signature.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectShaderDescription.OutputParameterCount">
            <summary>
Number of entries in the output signature.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectShaderDescription.InputParameterCount">
            <summary>
Number of entries in the input signature.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectShaderDescription.RasterizedStream">
            <summary>
Indicates which stream is rasterized. D3D11 geometry shaders can output up to four streams of data, one of which can be rasterized.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectShaderDescription.StreamOutputDeclaration">
            <summary>
Stream out declarations.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectShaderDescription.Bytecode">
            <summary>
The compiled shader bytecode.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectShaderDescription.IsInline">
            <summary>
Indicates whether the shader is defined inline.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectShaderDescription.Signature">
            <summary>
The shader input signature. Only valid on a vertex shader or geometry shader.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectShaderDescription">
            <summary>
Provides a description for an effect shader variable.
</summary>
            <unmanaged />
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.FeedbackMin">
            <summary>
Minimum percentage of output fed back into input.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.FeedbackMax">
            <summary>
Maximum percentage of output fed back into input.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.FeedbackDefault">
            <summary>
Default percentage of output fed back into input.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.PanDelayMin">
            <summary>
Minimum value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.PanDelayMax">
            <summary>
Maximum value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.PanDelayDefault">
            <summary>
Default value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.RightDelayMin">
            <summary>
Minimum delay for right channel, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.RightDelayMax">
            <summary>
Maximum delay for right channel, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.RightDelayDefault">
            <summary>
Default delay for right channel, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.LeftDelayMin">
            <summary>
Minimum delay for left channel, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.LeftDelayMax">
            <summary>
Maximum delay for left channel, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.LeftDelayDefault">
            <summary>
Default delay for left channel, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.WetDryMixMin">
            <summary>
Minimum ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.WetDryMixMax">
            <summary>
Maximum ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.EchoEffect.WetDryMixDefault">
            <summary>
Default ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.EchoEffect.WetDryMix">
            <summary>
Ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.EchoEffect.Feedback">
            <summary>
Percentage of output fed back into input. The default value is 50.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.EchoEffect.PanDelay">
            <summary>
Value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.EchoEffect.LeftDelay">
            <summary>
Delay for left channel, in milliseconds. The default value is 500 ms.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.EchoEffect.RightDelay">
            <summary>
Delay for right channel, in milliseconds. The default value is 500 ms.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.EchoEffect">
            <summary>
The SoundEffectEcho object is used to set and retrieve effect parameters on a buffer that supports echo.
</summary>
            <unmanaged>IDirectSoundFXEcho</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.EffectCompiler">
            <summary>Compiles an effect from a function or a vertex shader.</summary>
            <unmanaged>ID3DXEffectCompiler</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.GammaControlCapabilities.Equals(SlimDX.DXGI.GammaControlCapabilities@,SlimDX.DXGI.GammaControlCapabilities@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.GammaControlCapabilities.Equals(SlimDX.DXGI.GammaControlCapabilities)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.GammaControlCapabilities.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.GammaControlCapabilities.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DXGI.GammaControlCapabilities.op_Inequality(SlimDX.DXGI.GammaControlCapabilities,SlimDX.DXGI.GammaControlCapabilities)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.GammaControlCapabilities.op_Equality(SlimDX.DXGI.GammaControlCapabilities,SlimDX.DXGI.GammaControlCapabilities)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DXGI.GammaControlCapabilities.ControlPoints">
            <summary>
Gets the list of curve control point positions.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.GammaControlCapabilities.MinimumConvertedValue">
            <summary>
Gets a value indicating the minimum range of the curve control point positions.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.GammaControlCapabilities.MaximumConvertedValue">
            <summary>
Gets a value indicating the maximum range of the curve control point positions.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.GammaControlCapabilities.IsScaleAndOffsetSupported">
            <summary>
Gets a value indicating whether gamma scale and offset transformation are supported.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.GammaControlCapabilities">
            <summary>
Describes gamma control capabilities.
</summary>
            <unmanaged>DXGI_GAMMA_CONTROL_CAPABILITIES</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.InverseTransform(SlimDX.Direct3D11.UnorderedAccessView)">
            <summary>
Performs an inverse FFT.
</summary>
            <param name="input">The input buffer.</param>
            <returns>The last temporary buffer written to during the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.InverseTransform(SlimDX.Direct3D11.UnorderedAccessView,SlimDX.Direct3D11.UnorderedAccessView)">
            <summary>
Performs an inverse FFT.
</summary>
            <param name="input">The input buffer.</param>
            <param name="output">The output buffer.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.ForwardTransform(SlimDX.Direct3D11.UnorderedAccessView)">
            <summary>
Performs a forward FFT.
</summary>
            <param name="input">The input buffer.</param>
            <returns>The last temporary buffer written to during the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.ForwardTransform(SlimDX.Direct3D11.UnorderedAccessView,SlimDX.Direct3D11.UnorderedAccessView)">
            <summary>
Performs a forward FFT.
</summary>
            <param name="input">The input buffer.</param>
            <param name="output">The output buffer.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.AttachBuffersAndPrecompute(SlimDX.Direct3D11.UnorderedAccessView[],SlimDX.Direct3D11.UnorderedAccessView[])">
            <summary>
Attaches buffers to an FFT context and performs any required precomputations.
</summary>
            <param name="temporaryBuffers">Temporary buffers to attach.</param>
            <param name="precomputeBuffers">Buffers to hold precomputed data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransform.InverseScale">
            <summary>
Gets or sets the inverse scale of the FFT.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransform.ForwardScale">
            <summary>
Gets or sets the forward scale of the FFT.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransform.BufferRequirements">
            <summary>
Gets the buffer requirements for the FFT.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create3DReal(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D11.FastFourierTransformCreationFlags)">
            <summary>
Creates a new three-dimensional real FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="y">Length of the second dimension of the FFT.</param>
            <param name="z">Length of the third dimension of the FFT.</param>
            <param name="flags">Flag affecting the behavior of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create3DReal(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32,System.Int32)">
            <summary>
Creates a new three-dimensional real FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="y">Length of the second dimension of the FFT.</param>
            <param name="z">Length of the third dimension of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create3DComplex(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D11.FastFourierTransformCreationFlags)">
            <summary>
Creates a new three-dimensional complex FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="y">Length of the second dimension of the FFT.</param>
            <param name="z">Length of the third dimension of the FFT.</param>
            <param name="flags">Flag affecting the behavior of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create3DComplex(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32,System.Int32)">
            <summary>
Creates a new three-dimensional complex FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="y">Length of the second dimension of the FFT.</param>
            <param name="z">Length of the third dimension of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create2DReal(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32,SlimDX.Direct3D11.FastFourierTransformCreationFlags)">
            <summary>
Creates a new two-dimensional real FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="y">Length of the second dimension of the FFT.</param>
            <param name="flags">Flag affecting the behavior of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create2DReal(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32)">
            <summary>
Creates a new two-dimensional real FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="y">Length of the second dimension of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create2DComplex(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32,SlimDX.Direct3D11.FastFourierTransformCreationFlags)">
            <summary>
Creates a new two-dimensional complex FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="y">Length of the second dimension of the FFT.</param>
            <param name="flags">Flag affecting the behavior of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create2DComplex(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32)">
            <summary>
Creates a new two-dimensional complex FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="y">Length of the second dimension of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create1DReal(SlimDX.Direct3D11.DeviceContext,System.Int32,SlimDX.Direct3D11.FastFourierTransformCreationFlags)">
            <summary>
Creates a new one-dimensional real FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="flags">Flag affecting the behavior of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create1DReal(SlimDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
Creates a new one-dimensional real FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create1DComplex(SlimDX.Direct3D11.DeviceContext,System.Int32,SlimDX.Direct3D11.FastFourierTransformCreationFlags)">
            <summary>
Creates a new one-dimensional complex FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <param name="flags">Flag affecting the behavior of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.Create1DComplex(SlimDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
Creates a new one-dimensional complex FFT.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="x">Length of the first dimension of the FFT.</param>
            <returns>The newly created FFT object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.#ctor(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.FastFourierTransformDescription,SlimDX.Direct3D11.FastFourierTransformCreationFlags)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.FastFourierTransform" /> class.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="description">Information that describes the shape of the FFT data as well as the scaling factors that should be used for forward and inverse transforms.</param>
            <param name="flags">Flag affecting the behavior of the FFT.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.FastFourierTransform.#ctor(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.FastFourierTransformDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.FastFourierTransform" /> class.
</summary>
            <param name="context">The device context used to create the FFT.</param>
            <param name="description">Information that describes the shape of the FFT data as well as the scaling factors that should be used for forward and inverse transforms.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.FastFourierTransform">
            <summary>
An object that encapsulates forward and inverse FFTs.
</summary>
            <unmanaged>ID3DX11FFT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransformDescription.DataType">
            <summary>
Flag indicating the type of data being transformed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransformDescription.Dimensions">
            <summary>
Combination of flags indicating the the dimensions to transform.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransformDescription.ElementLengths">
            <summary>
Length of each dimension in the FFT.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransformDescription.DimensionCount">
            <summary>
Number of dimension in the FFT.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.FastFourierTransformDescription">
            <summary>
Contains a description for an FFT.
</summary>
            <unmanaged>D3DX11_FFT_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Half2.Equals(SlimDX.Half2@,SlimDX.Half2@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half2.Equals(SlimDX.Half2)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Half2.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Half2.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Half2.op_Inequality(SlimDX.Half2,SlimDX.Half2)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half2.op_Equality(SlimDX.Half2,SlimDX.Half2)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half2.#ctor(SlimDX.Half,SlimDX.Half)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Half2" /> structure.
</summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="M:SlimDX.Half2.#ctor(SlimDX.Half)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Half2" /> structure.
</summary>
            <param name="value">The value to set for both the X and Y components.</param>
        </member>
        <member name="F:SlimDX.Half2.Y">
            <summary>
Gets or sets the Y component of the vector.
</summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="F:SlimDX.Half2.X">
            <summary>
Gets or sets the X component of the vector.
</summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="T:SlimDX.Half2">
            <summary>
Defines a two component vector, using half precision floating point coordinates.
</summary>
            <unmanaged>D3DXVECTOR2_16F</unmanaged>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half2Converter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.Half2Converter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.Half2Converter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Half2" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransformBufferRequirements.PrecomputeBufferSizes">
            <summary>
Minimum sizes (in floats) for precompute buffers.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransformBufferRequirements.PrecomputeBufferCount">
            <summary>
Number of precompute buffers required.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransformBufferRequirements.TemporaryBufferSizes">
            <summary>
Minimum sizes (in floats) of temporary buffers.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.FastFourierTransformBufferRequirements.TemporaryBufferCount">
            <summary>
Number of temporary buffers needed.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.FastFourierTransformBufferRequirements">
            <summary>
Contains buffer requirements for an FFT.
</summary>
            <unmanaged>D3DX11_FFT_BUFFER_INFO</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.Device1.MaximumFrameLatency">
            <summary>
Gets or sets the number of frames that the system is allowed to queue for rendering. This value defaults to 3, but can range from 1 to 16.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.Device1.#ctor(SlimDX.IComObject)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.Device1" /> class.
</summary>
            <param name="device">The COM object implementing the IDXGIDevice1 interface.</param>
        </member>
        <member name="T:SlimDX.DXGI.Device1">
            <summary>
Represents a base for objects that produces image data.
</summary>
            <unmanaged>IDXGIDevice1</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBufferDescription.Equals(SlimDX.D3DCompiler.ConstantBufferDescription@,SlimDX.D3DCompiler.ConstantBufferDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBufferDescription.Equals(SlimDX.D3DCompiler.ConstantBufferDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBufferDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBufferDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBufferDescription.op_Inequality(SlimDX.D3DCompiler.ConstantBufferDescription,SlimDX.D3DCompiler.ConstantBufferDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBufferDescription.op_Equality(SlimDX.D3DCompiler.ConstantBufferDescription,SlimDX.D3DCompiler.ConstantBufferDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ConstantBufferDescription.Flags">
            <summary>
Shader buffer properties.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ConstantBufferDescription.Size">
            <summary>
Buffer size (in bytes).
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ConstantBufferDescription.Variables">
            <summary>
The number of unique variables.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ConstantBufferDescription.Type">
            <summary>
The intended use of the constant data.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ConstantBufferDescription.Name">
            <summary>
The name of the buffer.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ConstantBufferDescription">
            <summary>
Describes a shader constant-buffer.
</summary>
            <unmanaged>D3D11_SHADER_BUFFER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBuffer.GetVariable(System.String)">
            <summary>
Gets the shader reflection variable with the given name.
</summary>
            <param name="name">The name of the shader variable to retrieve.</param>
            <returns>The shader reflection variable with the given name.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBuffer.GetVariable(System.Int32)">
            <summary>
Gets the shader reflection variable at the given index.
</summary>
            <param name="index">The zero-based index of the shader variable to retrieve.</param>
            <returns>The shader reflection variable at the given index.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ConstantBuffer.Description">
            <summary>
Gets the constant buffer's description.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ConstantBuffer.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.D3DCompiler.ConstantBuffer" /> class.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ConstantBuffer">
            <summary>
Defines an interface that provides access to a shader constant buffer.
</summary>
            <unmanaged>ID3D11ShaderReflectionConstantBuffer</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.WaveBank.WaveCount">
            <summary>
Get the number of wave entries in the wave bank.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveBank.State">
            <summary>
Get a <see cref="T:SlimDX.XACT3.WaveBankState" /> value representing the current state of the wave bank.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.WaveBank.Stop(System.Int32,SlimDX.XACT3.StopFlags)">
            <summary>
Stop playback of a wave.
</summary>
            <param name="waveIndex">The index of the wave to stop.</param>
            <param name="flags">
                <see cref="T:SlimDX.XACT3.StopFlags" /> that specify how the wave is stopped.</param>
        </member>
        <member name="M:SlimDX.XACT3.WaveBank.Prepare(System.Int32,SlimDX.XACT3.ContentPreparationFlags,System.Int32,System.Int32)">
            <summary>
Prepare a wave for playback.
</summary>
            <param name="waveIndex">The index of the wave to prepare.</param>
            <param name="flags">
                <see cref="T:SlimDX.XACT3.ContentPreparationFlags" /> to indicate how the wave is to be prepared.</param>
            <param name="playOffset">Play offset to use as the start of the wave. The offset can be described in milliseconds or in samples. The <paramref name="flags" /> argument determines the offset units.</param>
            <param name="loopCount">The number of loops for playback.</param>
            <returns>A <see cref="T:SlimDX.XACT3.Wave" /> object containing the newly prepared wave.</returns>
        </member>
        <member name="M:SlimDX.XACT3.WaveBank.Play(System.Int32,SlimDX.XACT3.ContentPreparationFlags,System.Int32,System.Int32)">
            <summary>
Play a wave.
</summary>
            <param name="waveIndex">The index of the wave to play.</param>
            <param name="flags">
                <see cref="T:SlimDX.XACT3.ContentPreparationFlags" /> to indicate how the wave is to be play.</param>
            <param name="playOffset">Play offset to use as the start of the wave. The offset can be described in milliseconds or in samples. The <paramref name="flags" /> argument determines the offset units.</param>
            <param name="loopCount">The number of loops for playback.</param>
            <returns>A <see cref="T:SlimDX.XACT3.Wave" /> object containing the newly playing wave.</returns>
        </member>
        <member name="M:SlimDX.XACT3.WaveBank.GetWaveProperties(System.Int32)">
            <summary>
Get the properties of a wave.
</summary>
            <param name="waveIndex">The index of the wave to get the properties of.</param>
            <returns>A <see cref="T:SlimDX.XACT3.WaveProperties" /> object containing the properties of the wave.</returns>
        </member>
        <member name="M:SlimDX.XACT3.WaveBank.GetWaveIndex(System.String)">
            <summary>
Get a wave index based on a string that represents the friendly name of the wave.
</summary>
            <param name="friendlyName">A string that contains the friendly name of the wave.</param>
            <returns>The index for the wave if it exists, otherwise -1.</returns>
        </member>
        <member name="T:SlimDX.XACT3.WaveBank">
            <summary>
Instantiate and manipulate XACT wave bank objects.
</summary>
            <unmanaged>IXACT3WaveBank</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.LineCount">
            <summary>
Total number of lines.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.MaximumBidiReorderingDepth">
            <summary>
The maximum reordering count of any line of text, used to
calculate the most number of hit-testing boxes needed. If the
layout has no bidirectional text, or no text at all, the
minimum level is 1.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.LayoutHeight">
            <summary>
Initial height given to the layout. Depending on the length of
the text, it may be larger or smaller than the text content
height.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.LayoutWidth">
            <summary>
The initial width given to the layout. It can be either larger
or smaller than the text content width, depending on whether
the text was wrapped.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.Height">
            <summary>
The height of the formatted text. The height of an empty string
is set to the same value as that of the default font.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.WidthIncludingTrailingWhitespace">
            <summary>
The width of the formatted text, taking into account the
trailing whitespace at the end of each line.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.Width">
            <summary>
A value that indicates the width of the formatted text, while
ignoring trailing whitespace at the end of each line.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.Top">
            <summary>
A value that indicates the top-most point of formatted text
relative to the layout box, while excluding any glyph overhang.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.TextMetrics.Left">
            <summary>
A value that indicates the left-most point of formatted text
relative to the layout box, while excluding any glyph overhang.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.TextMetrics">
            <summary>
Contains the metrics associated with text after layout. All coordinates are in device independent pixels (DIPs).
</summary>
        </member>
        <member name="P:SlimDX.DXGI.Resource.SharedHandle">
            <summary>
Get the handle to a shared resource. The returned handle can be used to open the resource using different Direct3D devices.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.Resource.Usage">
            <summary>
Gets the resource usage.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.Resource.EvictionPriority">
            <summary>
Gets or sets the eviction priority for the resource.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.Resource.#ctor(SlimDX.IComObject)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.Resource" /> class.
</summary>
            <param name="resource">The COM object implementing the IDXGIResource interface.</param>
        </member>
        <member name="T:SlimDX.DXGI.Resource">
            <summary>
Implements a base interface that allows resource sharing and identifies the memory that a resource resides in.
</summary>
            <unmanaged />
        </member>
        <member name="P:SlimDX.Direct3D11.BlendStateDescription.RenderTargets">
            <summary>
Gets the set of render-target-blend descriptors describing independent blending operations for up to eight simultaneous render targets.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.BlendStateDescription.IndependentBlendEnable">
            <summary>
Gets or sets a value determining whether independent blending is enabled for simultaneous render targets.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.BlendStateDescription.AlphaToCoverageEnable">
            <summary>
Gets or sets a value specifying whether alpha-to-coverage is used as a multisampling technique when setting a pixel to a rendertarget.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.BlendStateDescription">
            <summary>
Provides a description for blending state objects.
</summary>
            <unmanaged>D3D11_BLEND_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.DirectInput.ObjectGuid">
            <summary>
Contains system-defined identifiers for device objects.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetBlendDescription.Equals(SlimDX.Direct3D11.RenderTargetBlendDescription@,SlimDX.Direct3D11.RenderTargetBlendDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetBlendDescription.Equals(SlimDX.Direct3D11.RenderTargetBlendDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetBlendDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetBlendDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetBlendDescription.op_Inequality(SlimDX.Direct3D11.RenderTargetBlendDescription,SlimDX.Direct3D11.RenderTargetBlendDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetBlendDescription.op_Equality(SlimDX.Direct3D11.RenderTargetBlendDescription,SlimDX.Direct3D11.RenderTargetBlendDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetBlendDescription.RenderTargetWriteMask">
            <summary>
A write mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetBlendDescription.BlendOperationAlpha">
            <summary>
This <see cref="T:SlimDX.Direct3D11.BlendOperation" /> defines how to combine the alpha data sources.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetBlendDescription.DestinationBlendAlpha">
            <summary>
This <see cref="T:SlimDX.Direct3D11.BlendOption" /> specifies the second alpha data source and includes an optional pre-blend operation. Blend options that end in "Color" are not allowed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetBlendDescription.SourceBlendAlpha">
            <summary>
This <see cref="T:SlimDX.Direct3D11.BlendOption" /> specifies the first alpha data source and includes an optional pre-blend operation. Blend options that end in "Color" are not allowed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetBlendDescription.BlendOperation">
            <summary>
This <see cref="T:SlimDX.Direct3D11.BlendOperation" /> defines how to combine the RGB data sources.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetBlendDescription.DestinationBlend">
            <summary>
This <see cref="T:SlimDX.Direct3D11.BlendOption" /> specifies the second RGB data source and includes an optional pre-blend operation. 
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetBlendDescription.SourceBlend">
            <summary>
This <see cref="T:SlimDX.Direct3D11.BlendOption" /> specifies the first RGB data source and includes an optional pre-blend operation. 
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetBlendDescription.BlendEnable">
            <summary>
Enables or disables blending on this render target.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.RenderTargetBlendDescription">
            <summary>
Provides a description for render target blending.
</summary>
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroupDescription.Equals(SlimDX.Direct3D11.EffectGroupDescription@,SlimDX.Direct3D11.EffectGroupDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroupDescription.Equals(SlimDX.Direct3D11.EffectGroupDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroupDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroupDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroupDescription.op_Inequality(SlimDX.Direct3D11.EffectGroupDescription,SlimDX.Direct3D11.EffectGroupDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroupDescription.op_Equality(SlimDX.Direct3D11.EffectGroupDescription,SlimDX.Direct3D11.EffectGroupDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectGroupDescription.AnnotationCount">
            <summary>
Number of annotations in the group.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectGroupDescription.TechniqueCount">
            <summary>
Number of techniques in the group.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectGroupDescription.Name">
            <summary>
Name of the group.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectGroupDescription">
            <summary>
Defines a description for effect groups.
</summary>
            <unmanaged>D3DX11_GROUP_DESC</unmanaged>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.HighFrequencyRTRatioMin">
            <summary>
Minimum high-frequency reverb time ratio.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.HighFrequencyRTRatioMax">
            <summary>
Maximum high-frequency reverb time ratio.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.HighFrequencyRTRatioDefault">
            <summary>
Default high-frequency reverb time ratio.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.ReverbTimeMin">
            <summary>
Minimum reverb time, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.ReverbTimeMax">
            <summary>
Maximum reverb time, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.ReverbTimeDefault">
            <summary>
Default reverb time, in milliseconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.ReverbMixMin">
            <summary>
Minimum reverb mix, in dB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.ReverbMixMax">
            <summary>
Maximum reverb mix, in dB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.ReverbMixDefault">
            <summary>
Default reverb mix, in dB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.InGainMin">
            <summary>
Minimum input gain of signal, in decibels (dB).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.InGainMax">
            <summary>
Maximum input gain of signal, in decibels (dB).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.WavesReverb.InGainDefault">
            <summary>
Default input gain of signal, in decibels (dB).
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.WavesReverb.HighFrequencyRTRatio">
            <summary>
High-frequency reverb time ratio.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.WavesReverb.ReverbTime">
            <summary>
Reverb time, in milliseconds.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.WavesReverb.ReverbMix">
            <summary>
Reverb mix, in dB.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.WavesReverb.InGain">
            <summary>
Input gain of signal, in decibels (dB), the default value is 0 dB.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.WavesReverb">
            <summary>
The SoundEffectWavesReverb object is used to set and retrieve effect parameters on a buffer that supports waves reverberation.
</summary>
            <unmanaged>IDirectSoundFXWavesReverb</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.FontDescription">
            <summary>Defines the attributes of a font.</summary>
            <unmanaged>D3DXFONT_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceViewDescription.Equals(SlimDX.Direct3D11.ShaderResourceViewDescription@,SlimDX.Direct3D11.ShaderResourceViewDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceViewDescription.Equals(SlimDX.Direct3D11.ShaderResourceViewDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceViewDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceViewDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceViewDescription.op_Inequality(SlimDX.Direct3D11.ShaderResourceViewDescription,SlimDX.Direct3D11.ShaderResourceViewDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceViewDescription.op_Equality(SlimDX.Direct3D11.ShaderResourceViewDescription,SlimDX.Direct3D11.ShaderResourceViewDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.Flags">
            <summary>
Options for binding a raw buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.ElementCount">
            <summary>
The number of elements in the resource.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.FirstElement">
            <summary>
The index of the first element to be accessed by the view.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.CubeCount">
            <summary>
Number of cube textures in the array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.First2DArrayFace">
            <summary>
Index of the first 2D texture to use.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.ArraySize">
            <summary>
Number of textures in the array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.FirstArraySlice">
            <summary>
The index of the first texture to use in an array of textures.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.MipLevels">
            <summary>
The maximum number of mipmap levels in the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.MostDetailedMip">
            <summary>
Index of the most detailed mipmap level to use; this number is between 0 and MipLevels - 1.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.ElementWidth">
            <summary>
The total number of elements in the view.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.ElementOffset">
            <summary>
The offset of the first element in the view to access, relative to element 0.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.Dimension">
            <summary>
The resource type of the view. This should be the same as the resource type of the underlying resource. This parameter also determines which other properties are valid.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceViewDescription.Format">
            <summary>
The format of the data in the shader resource.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ShaderResourceViewDescription">
            <summary>
Provides a description for a shader resource view.
</summary>
            <unmanaged>D3D11_SHADER_RESOURCE_VIEW_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.DirectInput.KeyboardState">
            <summary>
Describes the state of a keyboard device.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.Condition.Equals(SlimDX.DirectInput.Condition@,SlimDX.DirectInput.Condition@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Condition.Equals(SlimDX.DirectInput.Condition)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Condition.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Condition.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Condition.op_Inequality(SlimDX.DirectInput.Condition,SlimDX.DirectInput.Condition)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Condition.op_Equality(SlimDX.DirectInput.Condition,SlimDX.DirectInput.Condition)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilViewDescription.Equals(SlimDX.Direct3D11.DepthStencilViewDescription@,SlimDX.Direct3D11.DepthStencilViewDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilViewDescription.Equals(SlimDX.Direct3D11.DepthStencilViewDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilViewDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilViewDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilViewDescription.op_Inequality(SlimDX.Direct3D11.DepthStencilViewDescription,SlimDX.Direct3D11.DepthStencilViewDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilViewDescription.op_Equality(SlimDX.Direct3D11.DepthStencilViewDescription,SlimDX.Direct3D11.DepthStencilViewDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilViewDescription.ArraySize">
            <summary>
Number of textures to use.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilViewDescription.FirstArraySlice">
            <summary>
The index of the first texture to use in an array of textures.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilViewDescription.MipSlice">
            <summary>
The index of the first mipmap level to use.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilViewDescription.Flags">
            <summary>
A value that describes whether the texture is read only.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilViewDescription.Dimension">
            <summary>
Type of resource. Specifies how a depth-stencil resource will be accessed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilViewDescription.Format">
            <summary>
Resource data format.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DepthStencilViewDescription">
            <summary>
Specifies the subresources of a texture that are accessible from a depth-stencil view.
</summary>
            <unmanaged>D3D11_DEPTH_STENCIL_VIEW_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.Mesh.Optimize(SlimDX.Direct3D10.MeshOptimizeFlags,System.Int32[]@,System.Int32[]@)">
            <summary>
Optimizes the mesh data.
</summary>
            <param name="flags">Flags indicating which optimizations to perform.</param>
            <param name="faceRemap">An array of integers, one per face, that map the original mesh faces to the optimized mesh faces.</param>
            <param name="vertexRemap">An array of integers, one per vertex, that map the original mesh vertices to the optimized mesh vertices.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Mesh.Optimize(SlimDX.Direct3D10.MeshOptimizeFlags)">
            <summary>
Optimizes the mesh data.
</summary>
            <param name="flags">Flags indicating which optimizations to perform.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Mesh.Discard(SlimDX.Direct3D10.MeshDiscardFlags)">
            <summary>
Discards data that has been committed to the device.
</summary>
            <param name="flags">Flags indicating which pieces of data to discard.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Mesh.Commit">
            <summary>
Commits changes to the mesh back to the device.
</summary>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetViewDescription.Equals(SlimDX.Direct3D11.RenderTargetViewDescription@,SlimDX.Direct3D11.RenderTargetViewDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetViewDescription.Equals(SlimDX.Direct3D11.RenderTargetViewDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetViewDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetViewDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetViewDescription.op_Inequality(SlimDX.Direct3D11.RenderTargetViewDescription,SlimDX.Direct3D11.RenderTargetViewDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetViewDescription.op_Equality(SlimDX.Direct3D11.RenderTargetViewDescription,SlimDX.Direct3D11.RenderTargetViewDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.DepthSliceCount">
            <summary>
Number of depth levels to use in the render-target view, starting from FirstDepthSlice. A value of -1 indicates all of the slices along the w axis, starting from FirstDepthSlice.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.FirstDepthSlice">
            <summary>
First depth level to use.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.ArraySize">
            <summary>
Number of textures to use.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.FirstArraySlice">
            <summary>
The index of the first texture to use in an array of textures.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.MipSlice">
            <summary>
The index of the mipmap level to use mip slice.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.ElementWidth">
            <summary>
The width of each element (in bytes). This can be determined from the format stored in the render-target-view description.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.ElementOffset">
            <summary>
Number of bytes between the beginning of the buffer and the first element to access.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.Dimension">
            <summary>
The resource type, which specifies how the render-target resource will be accessed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetViewDescription.Format">
            <summary>
The data format of the render target.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.RenderTargetViewDescription">
            <summary>
Specifies the subresources from a resource that are accessible using a render-target view.
</summary>
            <unmanaged>D3D11_RENDER_TARGET_VIEW_DESC</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.Unsupported">
            <summary>
The function called is not supported at this time.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_UNSUPPORTED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.Uninitialized">
            <summary>
This object has not been initialized.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_UNINITIALIZED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.SendLoop">
            <summary>
A circular loop of send effects was detected.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_SENDLOOP</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.PriorityLevelNeeded">
            <summary>
The caller does not have the priority level required for the function to succeed
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_PRIOLEVELNEEDED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.OtherApplicationHasPriority">
            <summary>
Another app has a higher priority level, preventing this call from succeeding.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_OTHERAPPHASPRIO</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.ObjectNotFound">
            <summary>
The object requested was not found.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_OBJECTNOTFOUND</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.NoInterface">
            <summary>
The requested COM interface is not available.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_NOINTERFACE</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.NoDriver">
            <summary>
No sound driver is available for use.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_NODRIVER</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.NoAggregation">
            <summary>
This object does not support aggregation.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_NOAGGREGATION</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.InvalidParameter">
            <summary>
An invalid parameter was passed to the returning function.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_INVALIDPARAM</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.InvalidCall">
            <summary>
This call is not valid for the current state of this object.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_INVALIDCALL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.Generic">
            <summary>
An undetermined error occurred inside the DirectSound subsystem.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_GENERIC</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.EffectsUnavailable">
            <summary>
The effects requested could not be found on the system, or they were found
but in the wrong order, or in the wrong hardware/software locations.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706" />
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.DirectSound8Required">
            <summary>
Attempt to use DirectSound 8 functionality on an older DirectSound object.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_DS8_REQUIRED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.ControlUnavailable">
            <summary>
The control (vol, pan, etc.) requested by the caller is not available.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_CONTROLUNAVAIL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.BufferTooSmall">
            <summary>
Tried to create a <see cref="T:SlimDX.DirectSound.BufferFlags">ControlEffects</see> buffer shorter than DSBSIZE_FX_MIN milliseconds.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_BUFFERTOOSMALL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.BufferLost">
            <summary>
The buffer memory has been lost, and must be restored.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_BUFFERLOST</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.BadSendBufferGuid">
            <summary>
The GUID specified in an audiopath file does not match a valid MIXIN buffer.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_BADSENDBUFFERGUID</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.BadFormat">
            <summary>
The specified WAVE format is not supported.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_BADFORMAT</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.AlreadyInitialized">
            <summary>
This object is already initialized.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_ALREADYINITIALIZED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.Allocated">
            <summary>
The call failed because resources (such as a priority level) were already being used by another caller.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_ALLOCATED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.AccessDenied">
            <summary>
Access is denied.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">DSERR_ACCESSDENIED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.NoVirtualization">
            <summary>
The 3D algorithm was substituted.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219706">DS_NO_VIRTUALIZATION</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219706">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.ResultCode.Success">
            <summary>
The function completed successfully.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219706">DS_OK</unmanaged>
        </member>
        <member name="T:SlimDX.DirectSound.ResultCode">
            <summary>Defines result codes that are returned by DirectSound 8 functions.</summary>
            <unmanaged href="bb219706">HRESULT</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.OutputDescription.Equals(SlimDX.DXGI.OutputDescription@,SlimDX.DXGI.OutputDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.OutputDescription.Equals(SlimDX.DXGI.OutputDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.OutputDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.OutputDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DXGI.OutputDescription.op_Inequality(SlimDX.DXGI.OutputDescription,SlimDX.DXGI.OutputDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.OutputDescription.op_Equality(SlimDX.DXGI.OutputDescription,SlimDX.DXGI.OutputDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DXGI.OutputDescription.MonitorHandle">
            <summary>
Gets the unmanaged HMONITOR handle for the output.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.OutputDescription.Rotation">
            <summary>
Gets rotation performed by the output on a presented image.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.OutputDescription.IsAttachedToDesktop">
            <summary>
Gets a value indicating whether the output is attached to the desktop.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.OutputDescription.DesktopBounds">
            <summary>
Gets output's bounds in desktop coordinates.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.OutputDescription.Name">
            <summary>
Gets the output's name.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.OutputDescription">
            <summary>
Describes various properties of an Output.
</summary>
            <unmanaged>DXGI_OUTPUT_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.DirectInput.DirectInputNotFoundException">
            <summary>
An exception indicating that the appropriate DirectInput runtime could not be found or initialized.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.ClassLinkage)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.PixelShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
            <param name="linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.PixelShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.PixelShader">
            <summary>
Represents a pixel shader.
</summary>
            <unmanaged>ID3D11PixelShader</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderParameterDescription.Equals(SlimDX.D3DCompiler.ShaderParameterDescription@,SlimDX.D3DCompiler.ShaderParameterDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderParameterDescription.Equals(SlimDX.D3DCompiler.ShaderParameterDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderParameterDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderParameterDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderParameterDescription.op_Inequality(SlimDX.D3DCompiler.ShaderParameterDescription,SlimDX.D3DCompiler.ShaderParameterDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderParameterDescription.op_Equality(SlimDX.D3DCompiler.ShaderParameterDescription,SlimDX.D3DCompiler.ShaderParameterDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderParameterDescription.Stream">
            <summary>
Indicates which stream the geometry shader is using for the signature parameter.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderParameterDescription.ReadWriteMask">
            <summary>
Mask which indicates whether a given component is never written (if the signature is an output signature) or always read (if the signature is an input signature).
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderParameterDescription.UsageMask">
            <summary>
Mask which indicates which components of a register are used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderParameterDescription.ComponentType">
            <summary>
The per-component-data type that is stored in a register. Each register can store up to four-components of data. 
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderParameterDescription.SystemType">
            <summary>
A predefined string that determines the functionality of certain pipeline stages.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderParameterDescription.Register">
            <summary>
The register that will contain this variable's data.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderParameterDescription.SemanticIndex">
            <summary>
Semantic index that modifies the semantic. Used to differentiate different parameters that use the same semantic.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderParameterDescription.SemanticName">
            <summary>
A per-parameter string that identifies how the data will be used.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderParameterDescription">
            <summary>
Describes a parameter in a shader signature.
</summary>
            <unmanaged>D3D11_SIGNATURE_PARAMETER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.DirectWrite.IFontFileLoader.CreateStreamFromKey(System.IntPtr,System.Int32)">
            <summary>
Creates a font file stream object that encapsulates an open file resource.
The resource is closed when the last reference to fontFileStream is released.
</summary>
            <param name="fontFileReferenceKey">Font file reference key that uniquely identifies the font file resource
within the scope of the font loader being used.</param>
            <param name="fontFileReferenceKeySize">Size of font file reference key in bytes.</param>
            <returns>
Reference to the newly created font file stream.
</returns>
        </member>
        <member name="T:SlimDX.DirectWrite.IFontFileLoader">
            <summary>
Font file loader interface handles loading font file resources of a particular type from a key.
The font file loader interface is recommended to be implemented by a singleton object.
IMPORTANT: font file loader implementations must not register themselves with DirectWrite factory
inside their constructors and must not unregister themselves in their destructors, because
registration and underregistration operations increment and decrement the object reference count respectively.
Instead, registration and underregistration of font file loaders with DirectWrite factory should be performed
outside of the font file loader implementation as a separate step.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.Output.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Output.WaitForVerticalBlank">
            <summary>
Halts the current thread until a vertical blank occurs.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Output.ReleaseOwnership">
            <summary>
Releases ownership of an output.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.Output.TakeOwnership(SlimDX.ComObject,System.Boolean)">
            <summary>
Takes ownership of an output.
</summary>
            <param name="device">The device interface.</param>
            <param name="exclusive">If true, ownership is exclusive.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Output.CopyDisplaySurfaceTo(SlimDX.DXGI.Surface)">
            <summary>
Copies the display surface content to the specified destination surface.
</summary>
            <param name="surface">The destination surface.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Output.SetDisplaySurface(SlimDX.DXGI.Surface)">
            <summary>
Changes the current display surface to the specified surface.
</summary>
            <param name="surface">The new display surface.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Output.SetGammaControl(SlimDX.DXGI.GammaControl)">
            <summary>
Sets gamma control information.
</summary>
            <param name="control">The gamma control information.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Output.GetClosestMatchingMode(SlimDX.ComObject,SlimDX.DXGI.ModeDescription,SlimDX.DXGI.ModeDescription@)">
            <summary>
Gets the display mode that best matches the requested mode.
</summary>
            <param name="device">The device interface. If this parameter is null, only
modes whose format matches the specified mode will be returned; otherwise, only those
formats that are supported for scan-out by the device are returned.</param>
            <param name="modeToMatch">The description of the display mode to match.</param>
            <param name="result">Receives the best-matching display mode.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Output.GetDisplayModeList(SlimDX.DXGI.Format,SlimDX.DXGI.DisplayModeEnumerationFlags)">
            <summary>
Gets a list of display modes matching certain specifications.
</summary>
            <param name="format">The display mode color format.</param>
            <param name="flags">Flags indicating how the display mode scanline order and scaling.</param>
            <returns>A list of matching display mode descriptions. The list is null if an error occured.</returns>
        </member>
        <member name="P:SlimDX.DXGI.Output.GammaControlCapabilities">
            <summary>
Gets a description of the output's gamma-control capabilities.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.Output.FrameStatistics">
            <summary>
Gets statistics about recently rendered frames.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.Output.Description">
            <summary>
Gets the output's description.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.Output">
            <summary>
Represents the output of an adapter (such as a monitor).
</summary>
            <unmanaged>IDXGIOutput</unmanaged>
        </member>
        <member name="P:SlimDX.DirectWrite.OverhangMetrics.Bottom">
            <summary>
The distance from the bottom-most visible DIP to its lower
alignment edge.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.OverhangMetrics.Right">
            <summary>
The distance from the right-most visible DIP to its right
alignment edge.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.OverhangMetrics.Top">
            <summary>
The distance from the top-most visible DIP to its top
alignment edge.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.OverhangMetrics.Left">
            <summary>
The distance from the left-most visible DIP to its left
alignment edge.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.OverhangMetrics">
            <summary>
Indicates how much any visible DIPs (device independent pixels)
overshoot each side of the layout or inline objects.

Positive overhangs indicate that the visible area extends outside
the layout box or inline object, while negative values mean there
is whitespace inside. The returned values are unaffected by
rendering transforms or pixel snapping. Additionally, they may not
exactly match the final target's pixel bounds after applying grid 
fitting and hinting.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.InlineObjectMetrics.SupportsSideways">
            <summary>
Flag indicating whether the object is to be placed upright or alongside the text baseline
for vertical text.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.InlineObjectMetrics.Baseline">
            <summary>
Distance from the top of the object to the baseline where it is lined up with the adjacent text.
If the baseline is at the bottom, baseline simply equals height.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.InlineObjectMetrics.Height">
            <summary>
Height of the inline object as measured from top to bottom.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.InlineObjectMetrics.Width">
            <summary>
Width of the inline object.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.InlineObjectMetrics">
            <summary>
Properties describing the geometric measurement of an
application-defined inline object.
</summary>
        </member>
        <member name="P:SlimDX.Multimedia.XWMAStream.Position">
            <summary>
Gets or sets the position within the current stream.
</summary>
            <value>The current position within the stream.</value>
            <seealso cref="T:System.IO.Stream">Stream Class</seealso>
        </member>
        <member name="P:SlimDX.Multimedia.XWMAStream.Length">
            <summary>
Gets the length in bytes of the stream.
</summary>
            <value>A long value representing the length of the stream in bytes.</value>
        </member>
        <member name="P:SlimDX.Multimedia.XWMAStream.CanWrite">
            <summary>
Gets a value indicating whether the current stream supports writing.
</summary>
            <value>Always <c>false</c>.</value>
        </member>
        <member name="P:SlimDX.Multimedia.XWMAStream.CanSeek">
            <summary>
Gets a value indicating whether the current stream supports seeking.
</summary>
            <value>Always <c>true</c>.</value>
        </member>
        <member name="P:SlimDX.Multimedia.XWMAStream.CanRead">
            <summary>
Gets a value indicating whether the current stream supports reading.
</summary>
            <value>Always <c>true</c>.</value>
        </member>
        <member name="M:SlimDX.Multimedia.XWMAStream.SetLength(System.Int64)">
            <summary>
Not supported.
</summary>
            <param name="value">Always ignored.</param>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:SlimDX.Multimedia.XWMAStream.Flush">
            <summary>
Not supported.
</summary>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:SlimDX.Multimedia.XWMAStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
Reads a sequence of bytes from the current stream and advances the position
within the stream by the number of bytes read.
</summary>
            <param name="buffer">An array of values to be read from the stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing
the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The number of bytes read from the stream.</returns>
            <exception cref="T:System.NotSupportedException">This stream does not support reading.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="buffer" /> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</exception>
        </member>
        <member name="M:SlimDX.Multimedia.XWMAStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
Not supported.
</summary>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:SlimDX.Multimedia.XWMAStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
Sets the position within the current stream.
</summary>
            <exception cref="T:System.InvalidOperationException">Attempted to seek outside of the bounds of the stream.</exception>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture2D.Unmap(System.Int32)">
            <summary>
Unmaps the texture.
</summary>
            <param name="subresource">The subresource to unmap.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture2D.Map(System.Int32,System.Int32,SlimDX.Direct3D10.MapMode,SlimDX.Direct3D10.MapFlags)">
            <summary>
Maps the texture, providing CPU access to its contents.
</summary>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="arraySlice">The zero-based index of the first texture to use (in an array of textures).</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A data rectangle containing the mapped data. This data stream is invalidated
when the buffer is unmapped.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture2D.Map(System.Int32,SlimDX.Direct3D10.MapMode,SlimDX.Direct3D10.MapFlags)">
            <summary>
Maps the texture, providing CPU access to its contents.
</summary>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A data rectangle containing the mapped data. This data stream is invalidated
when the buffer is unmapped.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture2D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture2DDescription,SlimDX.DataRectangle[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture2D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture2D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture2DDescription,SlimDX.DataRectangle)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture2D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">The initial texture data.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture2D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture2DDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture2D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.Texture2D.Description">
            <summary>
Gets the texture description.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassInstanceDescription.Equals(SlimDX.Direct3D11.ClassInstanceDescription@,SlimDX.Direct3D11.ClassInstanceDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassInstanceDescription.Equals(SlimDX.Direct3D11.ClassInstanceDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassInstanceDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassInstanceDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassInstanceDescription.op_Inequality(SlimDX.Direct3D11.ClassInstanceDescription,SlimDX.Direct3D11.ClassInstanceDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassInstanceDescription.op_Equality(SlimDX.Direct3D11.ClassInstanceDescription,SlimDX.Direct3D11.ClassInstanceDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstanceDescription.IsCreated">
            <summary>
Specifies whether the class was created.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstanceDescription.BaseSampler">
            <summary>
The base sampler associated with an HLSL class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstanceDescription.BaseTexture">
            <summary>
The base texture associated with an HLSL class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstanceDescription.BaseConstantBufferOffset">
            <summary>
The base constant buffer offset associated with an HLSL class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstanceDescription.ConstantBuffer">
            <summary>
Describes the constant buffer associated with an HLSL class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstanceDescription.TypeId">
            <summary>
The type ID of an HLSL class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstanceDescription.InstanceIndex">
            <summary>
The instance index of an HLSL class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstanceDescription.InstanceId">
            <summary>
The instance ID of an HLSL class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ClassInstanceDescription">
            <summary>
Provides a description for an HLSL class instance.
</summary>
            <unmanaged>D3D11_CLASS_INSTANCE_DESC</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.InvalidPointer">
            <summary>
An invalid pointer, usually null, was passed as a parameter. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">E_POINTER</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.Pending">
            <summary>
Data is not yet available.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">E_PENDING</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.InvalidHandle">
            <summary>
The HWND parameter is not a valid top-level window that belongs to the process.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">E_HANDLE</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.WriteProtect">
            <summary>
A SUCCESS code indicating that settings cannot be modified.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_WRITEPROTECT</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.Unsupported">
            <summary>
The function called is not supported at this time.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_UNSUPPORTED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.Unplugged">
            <summary>
The operation could not be completed because the device is not plugged in.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_UNPLUGGED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.TruncatedAndRestarted">
            <summary>
Equal to <see cref="P:SlimDX.DirectInput.ResultCode.Truncated" /> | <see cref="P:SlimDX.DirectInput.ResultCode.EffectRestarted" />.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_TRUNCATEDANDRESTARTED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.Truncated">
            <summary>
The parameters of the effect were successfully updated by
<see cref="M:SlimDX.DirectInput.Effect.SetParameters(SlimDX.DirectInput.EffectParameters,SlimDX.DirectInput.EffectParameterFlags)" />, but some of them were
beyond the capabilities of the device and were truncated.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_TRUNCATED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.Success">
            <summary>
The operation completed successfully.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_OK</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.SettingsNotSaved">
            <summary>
The settings have been successfully applied but could not be persisted. 
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_SETTINGSNOTSAVED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.ReportFull">
            <summary>
                <see cref="M:SlimDX.DirectInput.Device.SendData(SlimDX.DirectInput.ObjectData[],System.Boolean)" /> failed because more information was requested
to be sent than can be sent to the device.  Some devices have
restrictions on how much data can be sent to them.  (For example,
there might be a limit on the number of buttons that can be
pressed at once.)
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_REPORTFULL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.ReadOnly">
            <summary>
The specified property cannot be changed.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_READONLY</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.PropertyHasNoEffect">
            <summary>
The change in device properties had no effect.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_PROPNOEFFECT</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.PolledDevice">
            <summary>
The device is a polled device.  As a result, device buffering
will not collect any data and event notifications will not be
signalled until GetCurrentState is called.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_POLLEDDEVICE</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.OutOfMemory">
            <summary>
The DInput subsystem couldn't allocate sufficient memory to complete the caller's request.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_OUTOFMEMORY</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.OtherApplicationHasPriority">
            <summary>
Another app has a higher priority level, preventing this call from succeeding.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_OTHERAPPHASPRIO</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.OldDirectInputVersion">
            <summary>
The application requires a newer version of DirectInput.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_OLDDIRECTINPUTVERSION</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.ObjectNotFound">
            <summary>
The requested object does not exist.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_OBJECTNOTFOUND</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NotInitialized">
            <summary>
This object has not been initialized.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_NOTINITIALIZED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NotFound">
            <summary>
The requested object does not exist.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_NOTFOUND</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NotExclusivelyAcquired">
            <summary>
The operation cannot be performed unless the device is acquired in exclusive mode.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_NOTEXCLUSIVEACQUIRED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NotDownloaded">
            <summary>
The effect is not downloaded.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_NOTDOWNLOADED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NotBuffered">
            <summary>
Attempted to read buffered device data from a device that is not buffered.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_NOTBUFFERED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NotAttached">
            <summary>
The device exists but is not currently attached.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_NOTATTACHED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NotAcquired">
            <summary>
The operation cannot be performed unless the device is acquired.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_NOTACQUIRED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NoInterface">
            <summary>
The specified interface is not supported by the object.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_NOINTERFACE</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NoEffect">
            <summary>
The operation had no effect.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_NOEFFECT</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.NoAggregation">
            <summary>
This object does not support aggregation.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_NOAGGREGATION</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.MoreData">
            <summary>
Not all the requested information fit into the buffer.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_MOREDATA</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.MapFileFail">
            <summary>
A mapper file function failed because reading or writing the user or IHV settings file failed.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_MAPFILEFAIL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.InvalidParameter">
            <summary>
An invalid parameter was passed to the returning function,
or the object was not in a state that allowed the function
to be called.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_INVALIDPARAM</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.InputLost">
            <summary>
Access to the device has been lost.  It must be re-acquired.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_INPUTLOST</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.IncompleteEffect">
            <summary>
The effect could not be downloaded because essential information
is missing.  For example, no axes have been associated with the
effect, or no type-specific information has been created.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_INCOMPLETEEFFECT</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.HasEffects">
            <summary>
The device cannot be reinitialized because there are still effects attached to it.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_HASEFFECTS</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.HandleExists">
            <summary>
The device already has an event notification associated with it.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_HANDLEEXISTS</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.Generic">
            <summary>
An undetermined error occured inside the DInput subsystem.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_GENERIC</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.EffectRestarted">
            <summary>
The parameters of the effect were successfully updated by
<see cref="M:SlimDX.DirectInput.Effect.SetParameters(SlimDX.DirectInput.EffectParameters,SlimDX.DirectInput.EffectParameterFlags)" />, but in order to change
the parameters, the effect needed to be restarted.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_EFFECTRESTARTED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.EffectPlaying">
            <summary>
An attempt was made to modify parameters of an effect while it is
playing.  Not all hardware devices support altering the parameters
of an effect while it is playing.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_EFFECTPLAYING</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.DownloadSkipped">
            <summary>
The parameters of the effect were successfully updated by
<see cref="M:SlimDX.DirectInput.Effect.SetParameters(SlimDX.DirectInput.EffectParameters,SlimDX.DirectInput.EffectParameterFlags)" />, but the effect was not
downloaded because the device is not exclusively acquired
or because the <see cref="T:SlimDX.DirectInput.EffectParameterFlags">NoDownload</see> flag was passed.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_DOWNLOADSKIPPED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.DeviceNotRegistered">
            <summary>
The device or device instance or effect is not registered with DirectInput.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_DEVICENOTREG</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.DeviceFull">
            <summary>
The device is full.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_DEVICEFULL</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.BufferOverflow">
            <summary>
The device buffer overflowed.  Some input was lost.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219815">DI_BUFFEROVERFLOW</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.BetaDirectInputVersion">
            <summary>
The application was written for an unsupported prerelease version of DirectInput.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_BETADIRECTINPUTVERSION</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.BadDriverVersion">
            <summary>
The object could not be created due to an incompatible driver version
or mismatched or incomplete driver components.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_BADDRIVERVER</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.AlreadyInitialized">
            <summary>
This object is already initialized.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_ALREADYINITIALIZED</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.ResultCode.Acquired">
            <summary>
The operation cannot be performed while the device is acquired.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb219815">DIERR_ACQUIRED</unmanaged>
        </member>
        <member name="T:SlimDX.DirectInput.ResultCode">
            <summary>Defines result codes that are returned by DirectInput 8 functions.</summary>
            <unmanaged href="bb219815">HRESULT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.False">
            <summary>
Alternate success value, indicating a successful but nonstandard completion (the precise meaning depends on context).
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb205278">S_FALSE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.OutOfMemory">
            <summary>
Direct3D could not allocate sufficient memory to complete the call.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb205278">E_OUTOFMEMORY</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.InvalidArgument">
            <summary>
An invalid parameter was passed to the returning function.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb205278">E_INVALIDARG</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.Success">
            <summary>
Represents the result of a successful operation.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="aa378137">S_OK</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.CannotRemoveLastItem">
            <summary>
The last item cannot be deleted. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_CANNOT_REMOVE_LAST_ITEM</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.DuplicateNamedFragment">
            <summary>
A fragment with that name already exists. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_DUPLICATE_NAMED_FRAGMENT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.LoadedMeshHasNoData">
            <summary>
The mesh has no data. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_LOADED_MESH_HAS_NO_DATA</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.InvalidData">
            <summary>
The data is invalid.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_INVALID_DATA</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.TooManyInfluences">
            <summary>
Too many influences specified. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_TOO_MANY_INFLUENCES</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.SkinningNotSupported">
            <summary>
Skinning is not supported. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_SKINNING_NOT_SUPPORTED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.CannotSortByAttribute">
            <summary>
Attribute sort is not supported as an optimization technique. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_CANNOT_ATTR_SORT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.InvalidMesh">
            <summary>
The mesh is invalid.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_INVALID_MESH</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.CannotModifyIndexBuffer">
            <summary>
The index buffer cannot be modified. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DX11_ERR_CANNOT_MODIFY_INDEX_BUFFER</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.TooManyUniqueStateObjects">
            <summary>
There are too many unique instances of a particular type of state object.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.FileNotFound">
            <summary>
The file was not found.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3D11_ERROR_FILE_NOT_FOUND</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.WasStillDrawing">
            <summary>
The previous blit operation that is transferring information to or from this surface is incomplete.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_WASSTILLDRAWING</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResultCode.InvalidCall">
            <summary>
The method call is invalid. For example, a method's parameter may not be a valid pointer.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_INVALIDCALL</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D11.ResultCode">
            <summary>Defines result codes that are returned by Direct3D 11 functions.</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.Wave.State">
            <summary>
Get a <see cref="T:SlimDX.XACT3.WaveState" /> value representing the current state of the wave.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.Wave.Properties">
            <summary>
Gets a <see cref="T:SlimDX.XACT3.WaveInstanceProperties" /> object that contains the properties of the wave instance.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.Wave.Stop(SlimDX.XACT3.StopFlags)">
            <summary>
Stop the wave.
</summary>
            <param name="flags">
                <see cref="T:SlimDX.XACT3.StopFlags" /> that specify how the wave is stopped.</param>
        </member>
        <member name="M:SlimDX.XACT3.Wave.SetVolume(System.Single)">
            <summary>
Set the volume of the wave.
</summary>
            <param name="volume">The volume level to set.</param>
        </member>
        <member name="M:SlimDX.XACT3.Wave.SetPitch(System.Int32)">
            <summary>
Set the pitch of the wave.
</summary>
            <param name="pitch">The value that is used to set the pitch for playback of this wave. This value may be between -1200 and 1200, which is approximately one semitone.</param>
        </member>
        <member name="M:SlimDX.XACT3.Wave.Play">
            <summary>
Play the wave.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.Wave.Pause(System.Boolean)">
            <summary>
Pause playback of the wave.
</summary>
            <param name="pause">The action to take. If true, playback is paused, if false, playback is resumed.</param>
        </member>
        <member name="P:SlimDX.XACT3.WaveInstanceProperties.IsBackgroundMusic">
            <summary>
Gets a value that is true if the wave is tagged as background music, otherwise false.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveInstanceProperties.WaveProperties">
            <summary>
Gets the properties that are common to all wave instances.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.WaveInstanceProperties">
            <summary>
The properties of a specific wave instance.
</summary>
            <unmanaged>XACT_WAVE_INSTANCE_PROPERTIES</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.WaveProperties.IsStreaming">
            <summary>
Gets a value that is true if the wave is streaming, otherwise false.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveProperties.LoopRegion">
            <summary>
Gets the loop region of the wave.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveProperties.DurationInSamples">
            <summary>
Gets the duration of the wave in samples.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveProperties.Format">
            <summary>
Gets the format of the wave.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveProperties.FriendlyName">
            <summary>
Gets the friendly name of the wave.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.WaveProperties">
            <summary>
The properties that are common to all waves.
</summary>
            <unmanaged>XACT_WAVE_PROPERTIES</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.WaveBankSampleRegion.TotalSamples">
            <summary>
Get the sample count of the region.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveBankSampleRegion.StartSample">
            <summary>
Get the start sample of the region.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.WaveBankSampleRegion">
            <summary>
The sample region information for an XACT wave bank.
</summary>
            <unmanaged>WAVEBANKSAMPLEREGION</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.WaveBankMiniWaveFormat.BytesPerSecond">
            <summary>
Gets the bytes per second index of the xWMA file.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveBankMiniWaveFormat.BitsPerSample">
            <summary>
Gets the bit depth of the wave file.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveBankMiniWaveFormat.BlockAlignment">
            <summary>
Gets the block alignment index.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveBankMiniWaveFormat.SamplesPerSecond">
            <summary>
Gets the sample rate of the wave file or of the decoded audio for compressed formats.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveBankMiniWaveFormat.Channels">
            <summary>
Gets the number of channels in the wave file
</summary>
        </member>
        <member name="P:SlimDX.XACT3.WaveBankMiniWaveFormat.FormatTag">
            <summary>
Gets the format of the wave file.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.WaveBankMiniWaveFormat">
            <summary>
The mini-wave format for an XACT wave bank.
</summary>
            <unmanaged>WAVEBANKMINIWAVEFORMAT</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture1D.Unmap(System.Int32)">
            <summary>
Unmaps the texture.
</summary>
            <param name="subresource">The subresource to unmap.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture1D.Map(System.Int32,System.Int32,SlimDX.Direct3D10.MapMode,SlimDX.Direct3D10.MapFlags)">
            <summary>
Maps the texture, providing CPU access to its contents.
</summary>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="arraySlice">The zero-based index of the first texture to use (in an array of textures).</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A data stream containing the mapped data. This data stream is invalidated
when the buffer is unmapped.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture1D.Map(System.Int32,SlimDX.Direct3D10.MapMode,SlimDX.Direct3D10.MapFlags)">
            <summary>
Maps the texture, providing CPU access to its contents.
</summary>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A data stream containing the mapped data. This data stream is invalidated
when the buffer is unmapped.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture1D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture1DDescription,SlimDX.DataStream[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture1D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture1D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture1DDescription,SlimDX.DataStream)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture1D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">The initial texture data.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture1D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture1DDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture1D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.Texture1D.Description">
            <summary>
Gets the texture description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.StateBlock">
            <summary>Applications use the methods of the StateBlock class to encapsulate render states.</summary>
            <unmanaged>IDirect3DStateBlock9</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.Surface1.ReleaseDC">
            <summary>
Releases the GDI device context (DC) associated with the current surface and allows rendering using Direct3D.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Surface1.ReleaseDC(System.Drawing.Rectangle)">
            <summary>
Releases the GDI device context (DC) associated with the current surface and allows rendering using Direct3D.
</summary>
            <param name="dirtyRegion">A pointer to a rectangle that identifies the dirty region of the surface. A dirty region is
any part of the surface that you have used for GDI rendering and that you want to preserve. This is used as a 
performance hint to graphics subsystem in certain scenarios. Do not use this parameter to restrict rendering to 
the specified rectangular region. The area specified by the rectangle will be used as a performance hint to indicate 
what areas have been manipulated by GDI rendering.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Surface1.GetDC(System.Boolean)">
            <summary>
Returns a device context (DC) that allows you to render to a DXGI surface using GDI.
</summary>
            <param name="discard">If <c>true</c> the application will not preserve any rendering with GDI; otherwise, <c>false</c>. 
If <c>false</c>, any previous rendering to the device context will be preserved. 
This flag is ideal for simply reading the device context and not doing any rendering to the surface.</param>
            <returns>A pointer to an HDC handle that represents the current device context for GDI rendering.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Surface1.#ctor(SlimDX.IComObject)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.Surface1" /> class.
</summary>
            <param name="surface">The COM object implementing the IDXGISurface1 interface.</param>
        </member>
        <member name="T:SlimDX.DXGI.Surface1">
            <summary>
Extends the standard surface interface to provide GDI interop support.
</summary>
            <unmanaged>IDXGISurface1</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D9NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3D9NotFoundException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D9NotFoundException.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3D9NotFoundException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D9NotFoundException.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3D9NotFoundException" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Direct3D9NotFoundException">
            <summary>
An exception indicating that the appropriate Direct3D 9 runtime could not be found or initialized.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PreLowPassCutoffMin">
            <summary>
Minimum filter cutoff for high-frequency harmonics attenuation.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PreLowPassCutoffMax">
            <summary>
Maximum filter cutoff for high-frequency harmonics attenuation.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PreLowPassCutoffDefault">
            <summary>
Default filter cutoff for high-frequency harmonics attenuation.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PostEQBandwidthMin">
            <summary>
Minimum width of frequency band that determines range of harmonic content addition.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PostEQBandwidthMax">
            <summary>
Maximum width of frequency band that determines range of harmonic content addition.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PostEQBandwidthDefault">
            <summary>
Default width of frequency band that determines range of harmonic content addition.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PostEQCenterFrequencyMin">
            <summary>
Minimum center frequency of harmonic content addition.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PostEQCenterFrequencyMax">
            <summary>
Maximum center frequency of harmonic content addition.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.PostEQCenterFrequencyDefault">
            <summary>
Default center frequency of harmonic content addition.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.EdgeMin">
            <summary>
Minimum percentage of distortion intensity.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.EdgeMax">
            <summary>
Maximum percentage of distortion intensity.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.EdgeDefault">
            <summary>
 Default percentage of distortion intensity.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.GainMin">
            <summary>
Minimum amount of signal change after distortion.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.GainMax">
            <summary>
Maximum amount of signal change after distortion.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.DistortionEffect.GainDefault">
            <summary>
Default amount of signal change after distortion.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DistortionEffect.PreLowPassCutoff">
            <summary>
Filter cutoff for high-frequency harmonics attenuation. The default value is 8000 Hz.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DistortionEffect.PostEQBandwidth">
            <summary>
Width of frequency band that determines range of harmonic content addition. The default value is 2400 Hz.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DistortionEffect.PostEQCenterFrequency">
            <summary>
Center frequency of harmonic content addition. The default value is 2400 Hz.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DistortionEffect.Edge">
            <summary>
Percentage of distortion intensity. The default value is 15 percent.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DistortionEffect.Gain">
            <summary>
Amount of signal change after distortion. The default value is -18 dB.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.DistortionEffect">
            <summary>
The SoundEffectDistortion object is used to set and retrieve effect parameters on a buffer that supports distortion.
</summary>
            <unmanaged>IDirectSoundFXDistortion</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlockMask.Equals(SlimDX.Direct3D10.StateBlockMask,SlimDX.Direct3D10.StateBlockMask)">
            <summary>
Returns a value indicating whether the two StateBlockMask are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlockMask.Equals(SlimDX.Direct3D10.StateBlockMask)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D10.StateBlockMask" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlockMask.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlockMask.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlockMask.op_Inequality(SlimDX.Direct3D10.StateBlockMask,SlimDX.Direct3D10.StateBlockMask)">
            <summary>
Tests for inequality between two StateBlockMasks.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlockMask.op_Equality(SlimDX.Direct3D10.StateBlockMask,SlimDX.Direct3D10.StateBlockMask)">
            <summary>
Tests for equality between two StateBlockMasks.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlockMask.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.Direct3D10.StateBlockMask" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.Predication">
            <summary>
Gets or sets a value indicating whether predication state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.StreamOutputBuffers">
            <summary>
Gets or sets a value indicating whether stream output buffer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.RasterizerState">
            <summary>
Gets or sets a value indicating whether rasterizer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.ScissorRectangles">
            <summary>
Gets or sets a value indicating whether scissor rectangle state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.Viewports">
            <summary>
Gets or sets a value indicating whether viewport state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.BlendState">
            <summary>
Gets or sets a value indicating whether blend state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.DepthStencilState">
            <summary>
Gets or sets a value indicating whether depth and stencil state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.RenderTargets">
            <summary>
Gets or sets a value indicating whether render target state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.PrimitiveTopology">
            <summary>
Gets or sets a value indicating whether primitive topology state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.InputLayout">
            <summary>
Gets or sets a value indicating whether input layout state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.IndexBuffer">
            <summary>
Gets or sets a value indicating whether index bufer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.VertexBuffers">
            <summary>
Gets a collection of values indicating which vertex buffer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.PixelShaderConstantBuffers">
            <summary>
Gets a collection of values indicating which pixel shader constant buffer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.PixelShaderResources">
            <summary>
Gets a collection of values indicating which pixel shader resource state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.PixelShaderSamplers">
            <summary>
Gets a collection of values indicating which pixel shader sampler state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.PixelShader">
            <summary>
Gets or sets a value indicating whether pixel shader state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.GeometryShaderConstantBuffers">
            <summary>
Gets a collection of values indicating which geometry shader constant buffer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.GeometryShaderResources">
            <summary>
Gets a collection of values indicating which geometry shader resource state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.GeometryShaderSamplers">
            <summary>
Gets a collection of values indicating which geometry shader sampler state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.GeometryShader">
            <summary>
Gets or sets a value indicating whether geometry shader state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.VertexShaderConstantBuffers">
            <summary>
Gets a collection of values indicating which vertex shader sampler state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.VertexShaderResources">
            <summary>
Gets a collection of values indicating which vertex shader resource state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.VertexShaderSamplers">
            <summary>
Gets a collection of values indicating which vertex shader sampler state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.StateBlockMask.VertexShader">
            <summary>
Gets or sets a value indicating whether vertex shader state is enabled by the mask.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.StateBlockMask.#ctor(SlimDX.Direct3D10.StateBlockMask)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.StateBlockMask" /> class.
</summary>
            <param name="other">The <see cref="T:SlimDX.Direct3D10.StateBlockMask" /> to copy initial values from.</param>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.MaxRolloffFactor">
            <summary>
Maximum rolloff factor. The default value is (1.0).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.MaxDopplerFactor">
            <summary>
Maximum Doppler factor. The default value is (1.0).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.MaxDistanceFactor">
            <summary>
Maximum distance factor. The default value is (1.0).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.MinRolloffFactor">
            <summary>
Minimum rolloff factor. The default value is (1.0).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.MinDopplerFactor">
            <summary>
Minimum Doppler factor. The default value is (1.0).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.MinDistanceFactor">
            <summary>
Minimum distance factor. The default value is (1.0).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.DefaultRolloffFactor">
            <summary>
Default rolloff factor. The default value is (1.0).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.DefaultDopplerFactor">
            <summary>
Default Doppler factor. The default value is (1.0).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundListener3D.DefaultDistanceFactor">
            <summary>
Default distance factor. The default value is (1.0).
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundListener3D.Velocity">
            <summary>
Gets or sets the listener's velocity.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundListener3D.Position">
            <summary>
Gets or sets the listener's position.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundListener3D.RolloffFactor">
            <summary>
Gets or sets the rolloff factor, which determines the rate of attenuation over distance.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundListener3D.DopplerFactor">
            <summary>
Gets or sets the multiplier for the Doppler effect.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundListener3D.DistanceFactor">
            <summary>
Gets or sets the distance factor, which is the number of meters in a vector unit.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundListener3D.Deferred">
            <summary>
Determines if settings are set immediately or deferred.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundListener3D.TopOrientation">
            <summary>
Describes the listener's top orientation.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundListener3D.FrontOrientation">
            <summary>
Describes the listener's front orientation.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.SoundListener3D.CommitDeferredSettings">
            <summary>
Commits any deferred settings made since the last call to this method.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.SoundListener3D.#ctor(SlimDX.DirectSound.SoundBuffer)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.SoundListener3D" /> class
with a previously created sound buffer.
</summary>
            <param name="soundBuffer">The SlimDX::DirectSound::SoundBuffer object.</param>
        </member>
        <member name="T:SlimDX.DirectSound.SoundListener3D">
            <summary>
The Listener3D object is used to retrieve and set parameters that describe a listener's position, orientation, and listening environment in 3-D space.
</summary>
            <unmanaged>IDirectSound3DListener</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageInformation.Equals(SlimDX.Direct3D10.ImageInformation@,SlimDX.Direct3D10.ImageInformation@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageInformation.Equals(SlimDX.Direct3D10.ImageInformation)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageInformation.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageInformation.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageInformation.op_Inequality(SlimDX.Direct3D10.ImageInformation,SlimDX.Direct3D10.ImageInformation)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageInformation.op_Equality(SlimDX.Direct3D10.ImageInformation,SlimDX.Direct3D10.ImageInformation)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageInformation.FileFormat">
            <summary>
The format of the image file.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageInformation.Dimension">
            <summary>
The type of the texture stored in the file.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageInformation.Format">
            <summary>
The original format of the image.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageInformation.MipLevels">
            <summary>
Number of mipmap levels in the original image.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageInformation.ArraySize">
            <summary>
Size of the image, in bytes.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageInformation.Depth">
            <summary>
Depth of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageInformation.Height">
            <summary>
Height of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageInformation.Width">
            <summary>
Width of the original image, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.ImageInformation">
            <summary>
Contains the description of the contents of an image file.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.KeyframedAnimationSet">
            <summary>
An application uses the methods of this interface to implement a key frame animation set.
</summary>
            <unmanaged>ID3DXKeyframedAnimationSet</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.RenderToSurfaceDescription">
            <summary>Describes an off-screen render target used by <see cref="T:SlimDX.Direct3D9.RenderToSurface" /></summary>.
<unmanaged>D3DXRTS_DESC</unmanaged></member>
        <member name="T:SlimDX.Direct3D9.FragmentDescription">
            <summary>Describes an annotation used by an effect object.</summary>
            <unmanaged>D3DXFRAGMENT_DESC</unmanaged>
        </member>
        <member name="P:SlimDX.Multimedia.WaveStream.Position">
            <summary>
Gets or sets the position within the current stream.
</summary>
            <value>The current position within the stream.</value>
            <seealso cref="T:System.IO.Stream">Stream Class</seealso>
        </member>
        <member name="P:SlimDX.Multimedia.WaveStream.Length">
            <summary>
Gets the length in bytes of the stream.
</summary>
            <value>A long value representing the length of the stream in bytes.</value>
        </member>
        <member name="P:SlimDX.Multimedia.WaveStream.CanWrite">
            <summary>
Gets a value indicating whether the current stream supports writing.
</summary>
            <value>Always <c>false</c>.</value>
        </member>
        <member name="P:SlimDX.Multimedia.WaveStream.CanSeek">
            <summary>
Gets a value indicating whether the current stream supports seeking.
</summary>
            <value>Always <c>true</c>.</value>
        </member>
        <member name="P:SlimDX.Multimedia.WaveStream.CanRead">
            <summary>
Gets a value indicating whether the current stream supports reading.
</summary>
            <value>Always <c>true</c>.</value>
        </member>
        <member name="M:SlimDX.Multimedia.WaveStream.SetLength(System.Int64)">
            <summary>
Not supported.
</summary>
            <param name="value">Always ignored.</param>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:SlimDX.Multimedia.WaveStream.Flush">
            <summary>
Not supported.
</summary>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:SlimDX.Multimedia.WaveStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
Reads a sequence of bytes from the current stream and advances the position
within the stream by the number of bytes read.
</summary>
            <param name="buffer">An array of values to be read from the stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing
the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The number of bytes read from the stream.</returns>
            <exception cref="T:System.NotSupportedException">This stream does not support reading.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="buffer" /> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</exception>
        </member>
        <member name="M:SlimDX.Multimedia.WaveStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
Not supported.
</summary>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:SlimDX.Multimedia.WaveStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
Sets the position within the current stream.
</summary>
            <exception cref="T:System.InvalidOperationException">Attempted to seek outside of the bounds of the stream.</exception>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionType.IsTypeEqual(SlimDX.D3DCompiler.ShaderReflectionType)">
            <summary>
Determines whether the underlying variable type is equivalent to that of the specified type.
</summary>
            <param name="type">The type to test for equivalence.</param>
            <returns>
                <c>true</c> if the underlying class type is equivalent to that of the specified type; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionType.IsOfType(SlimDX.D3DCompiler.ShaderReflectionType)">
            <summary>
Determines whether the variable type is equivalent to or inherits from the given type.
</summary>
            <param name="type">The potential parent type.</param>
            <returns>
                <c>true</c> if the class type is equivalent to or inherits from the given type; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionType.ImplementsInterface(SlimDX.D3DCompiler.ShaderReflectionType)">
            <summary>
Determines whether the class type implements the given interface.
</summary>
            <param name="base">The potential parent type.</param>
            <returns>
                <c>true</c> if the class type implements the given interface; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionType.GetMemberTypeName(System.Int32)">
            <summary>
Gets the name of a member variable type.
</summary>
            <param name="index">The zero-based index of the member variable to retrieve.</param>
            <returns>The name of the given member variable type.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionType.GetMemberType(System.String)">
            <summary>
Gets a member variable type by name.
</summary>
            <param name="name">The name of the member variable to retrieve.</param>
            <returns>The member variable type with the given name.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionType.GetMemberType(System.Int32)">
            <summary>
Gets a member variable type by index.
</summary>
            <param name="index">The zero-based index of the member variable to retrieve.</param>
            <returns>The member variable type at the given index.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionType.GetInterface(System.Int32)">
            <summary>
Gets an interface by index.
</summary>
            <param name="index">The zero-based index of the interface to retrieve.</param>
            <returns>The interface at the given index.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflectionType.Subtype">
            <summary>
Gets the variable's sub type.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflectionType.BaseClass">
            <summary>
Gets the type of this variable's base class.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflectionType.Description">
            <summary>
Gets the variable's description.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionType.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.D3DCompiler.ShaderReflectionType" /> class.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderReflectionType">
            <summary>
Defines an interface that provides access to types of shader variables.
</summary>
            <unmanaged>ID3D11ShaderReflectionType</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionVariable.GetVariableType">
            <summary>
Gets the reflected type of the shader variable.
</summary>
            <returns>The reflected type of the shader variable.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionVariable.GetInterfaceSlot(System.Int32)">
            <summary>
Gets the corresponding interface slot for a variable that represents an interface pointer.
</summary>
            <param name="arrayIndex">Index of the array element to get the slot number for. For a non-array variable this value will be zero.</param>
            <returns>The index of the interface in the interface array.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderReflectionVariable.Description">
            <summary>
Gets the shader variable's description.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderReflectionVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.D3DCompiler.ShaderReflectionVariable" /> class.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderReflectionVariable">
            <summary>
Defines an interface that provides access to the reflection data for a shader variable.
</summary>
            <unmanaged>ID3D11ShaderReflectionVariable</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.D3DCompilerException.#ctor(SlimDX.Result)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.D3DCompiler.D3DCompilerException.#ctor(System.String,System.Exception)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.D3DCompiler.D3DCompilerException.#ctor(System.String)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.D3DCompiler.D3DCompilerException.#ctor">
            <summary>
Constructs a new exception object.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.D3DCompilerException">
            <summary>
Represents errors that occur in the D3DCompiler subsystem.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.ClassLinkage)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.HullShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
            <param name="linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.HullShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.HullShader">
            <summary>
Represents a hull shader.
</summary>
            <unmanaged>ID3D11HullShader</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.MatrixStack">
            <summary>Applications use the methods of the MatrixStack class to manipulate a matrix stack.</summary>
            <unmanaged>ID3DXMatrixStack</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.False">
            <summary>
Alternate success value, indicating a successful but nonstandard completion (the precise meaning depends on context).
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb205278">S_FALSE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.OutOfMemory">
            <summary>
Direct3D could not allocate sufficient memory to complete the call.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb205278">E_OUTOFMEMORY</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.InvalidArgument">
            <summary>
An invalid parameter was passed to the returning function.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb205278">E_INVALIDARG</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.Success">
            <summary>
Represents the result of a successful operation.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="aa378137">S_OK</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.CannotRemoveLastItem">
            <summary>
The last item cannot be deleted. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_CANNOT_REMOVE_LAST_ITEM</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.DuplicateNamedFragment">
            <summary>
A fragment with that name already exists. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_DUPLICATE_NAMED_FRAGMENT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.LoadedMeshHasNoData">
            <summary>
The mesh has no data. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_LOADED_MESH_HAS_NO_DATA</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.InvalidData">
            <summary>
The data is invalid.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_INVALID_DATA</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.TooManyInfluences">
            <summary>
Too many influences specified. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_TOO_MANY_INFLUENCES</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.SkinningNotSupported">
            <summary>
Skinning is not supported. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_SKINNING_NOT_SUPPORTED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.CannotSortByAttribute">
            <summary>
Attribute sort is not supported as an optimization technique. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_CANNOT_ATTR_SORT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.InvalidMesh">
            <summary>
The mesh is invalid.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_INVALID_MESH</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.CannotModifyIndexBuffer">
            <summary>
The index buffer cannot be modified. 
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172691">D3DX10_ERR_CANNOT_MODIFY_INDEX_BUFFER</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.WasStillDrawing">
            <summary>
The previous blit operation that is transferring information to or from this surface is incomplete.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb205278">D3DERR_WASSTILLDRAWING</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.TooManyUniqueStateObjects">
            <summary>
There are too many unique instances of a particular type of state object.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb205278">D3D10_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.FileNotFound">
            <summary>
The file was not found.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb205278">D3D10_ERROR_FILE_NOT_FOUND</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.ResultCode.InvalidCall">
            <summary>
The method call is invalid. For example, a method's parameter may not be a valid pointer.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb205278">D3DERR_INVALIDCALL</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.ResultCode">
            <summary>Defines result codes that are returned by Direct3D 10 functions.</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderVariableDescription.Equals(SlimDX.D3DCompiler.ShaderVariableDescription@,SlimDX.D3DCompiler.ShaderVariableDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderVariableDescription.Equals(SlimDX.D3DCompiler.ShaderVariableDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderVariableDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderVariableDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderVariableDescription.op_Inequality(SlimDX.D3DCompiler.ShaderVariableDescription,SlimDX.D3DCompiler.ShaderVariableDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderVariableDescription.op_Equality(SlimDX.D3DCompiler.ShaderVariableDescription,SlimDX.D3DCompiler.ShaderVariableDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderVariableDescription.DefaultValue">
            <summary>
The default value for initializing the variable.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderVariableDescription.Flags">
            <summary>
Flags, which identify shader-variable properties.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderVariableDescription.Size">
            <summary>
Size of the variable (in bytes).
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderVariableDescription.StartOffset">
            <summary>
Offset from the start of the parent structure, to the beginning of the variable.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderVariableDescription.Name">
            <summary>
The variable name.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderVariableDescription">
            <summary>
Describes a shader variable.
</summary>
            <unmanaged>D3D11_SHADER_VARIABLE_DESC</unmanaged>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.GainMin">
            <summary>
Minimum gain.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.GainMax">
            <summary>
Maximum gain.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.GainDefault">
            <summary>
Default gain.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.BandwidthMin">
            <summary>
Minimum bandwidth, in semitones.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.BandwidthMax">
            <summary>
Maximum bandwidth, in semitones.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.BandwidthDefault">
            <summary>
Default bandwidth, in semitones.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.CenterMin">
            <summary>
Minimum center frequency, in hertz.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.CenterMax">
            <summary>
Maximum center frequency, in hertz.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ParametricEqualizer.CenterDefault">
            <summary>
Default center frequency, in hertz.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ParametricEqualizer.Gain">
            <summary>
Gain, The default value is 0.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ParametricEqualizer.Bandwidth">
            <summary>
Bandwidth, in semitones. The default value is 12.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ParametricEqualizer.Center">
            <summary>
Center frequency, in hertz. This value cannot exceed one-third of the frequency of the buffer. The default value is 8000.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.ParametricEqualizer">
            <summary>
The SoundEffectParametricEqualizer object is used to set and retrieve effect parameters on a buffer that supports parametric equalizer effects.
</summary>
            <unmanaged>IDirectSoundFXParamEq</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription.Equals(SlimDX.DXGI.AdapterDescription@,SlimDX.DXGI.AdapterDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription.Equals(SlimDX.DXGI.AdapterDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription.op_Inequality(SlimDX.DXGI.AdapterDescription,SlimDX.DXGI.AdapterDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription.op_Equality(SlimDX.DXGI.AdapterDescription,SlimDX.DXGI.AdapterDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.Luid">
            <summary>
Gets the adapter's unique identifier.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.SharedSystemMemory">
            <summary>
Gets the number of bytes of system memory shared with the CPU.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.DedicatedSystemMemory">
            <summary>
Gets the number of bytes of system memory not shared with the CPU.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.DedicatedVideoMemory">
            <summary>
Gets the number of bytes of video memory not shared with the CPU.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.Revision">
            <summary>
Gets the adapter's revision number.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.SubsystemId">
            <summary>
Gets the adapter's subsystem ID.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.DeviceId">
            <summary>
Gets the adapter's device ID.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.VendorId">
            <summary>
Gets the adapter's vendor ID.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription.Description">
            <summary>
Gets the adapter's description.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.AdapterDescription">
            <summary>
Describes various properties of an Adapter.
</summary>
            <unmanaged>DXGI_ADAPTER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10_1.BlendState1.FromDescription(SlimDX.Direct3D10_1.Device1,SlimDX.Direct3D10_1.BlendStateDescription1)">
            <summary>
Constructs a new BlendState1 based on the specified description. If the description
is identical to that of an existing BlendState object, the existing BlendState object
is returned instead of a new instance.
</summary>
            <param name="device">The device to associate the state object with</param>
            <param name="description">The state description.</param>
            <returns>The BlendState object.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10_1.BlendState1.Description">
            <summary>
Gets the state's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10_1.BlendState1">
            <summary>
A state object defining the behavior of the pixel-blending stage of the output merger. 
</summary>
            <unmanaged>ID3D10BlendState1</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.WaitForVBlank(System.Int32)">
            <summary>
Suspend execution of the calling thread until the next vertical blank signal.
</summary>
            <param name="swapChain">Zero based swap chain index to specify the target chain on a multihead card.</param>
            <unmanaged>IDirect3DDevice9Ex::WaitForVBlank</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.ResetEx(SlimDX.Direct3D9.DisplayModeEx,SlimDX.Direct3D9.PresentParameters[])">
            <summary>
Resets the device.
</summary>
            <param name="presentParameters">A set of new presentation parameters to apply to the device.</param>
            <param name="fullScreenDisplayMode">The properties of the desired display mode, when running fullscreen.</param>
            <returns>A <see cref="T:SlimDX.Result" />Object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9Ex::ResetEx</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.ResetEx(SlimDX.Direct3D9.PresentParameters,SlimDX.Direct3D9.DisplayModeEx)">
            <summary>
Resets the device.
</summary>
            <param name="presentParameters">A set of new presentation parameters to apply to the device.</param>
            <param name="fullScreenDisplayMode">The properties of the desired display mode, when running fullscreen.</param>
            <returns>A <see cref="T:SlimDX.Result" />Object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9Ex::ResetEx</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.ResetEx(SlimDX.Direct3D9.PresentParameters[])">
            <summary>
Resets the device.
</summary>
            <param name="presentParameters">A set of new presentation parameters to apply to the device.</param>
            <returns>A <see cref="T:SlimDX.Result" />Object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9Ex::ResetEx</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.GetDisplayModeEx(System.Int32,SlimDX.Direct3D9.DisplayRotation@)">
            <summary>
Retrieves the display mode's spatial resolution, color resolution, refresh frequency, and rotation settings.
</summary>
            <param name="swapChain">The swap chain to retrieve display mode data about.</param>
            <param name="rotation">Receives the rotation setting of the adapter.</param>
            <returns>Extended display mode information about the adapter.</returns>
            <unmanaged>IDirect3DDevice9Ex::GetDisplayModeEx</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.GetDisplayModeEx(System.Int32)">
            <summary>
Retrieves the display mode's spatial resolution, color resolution, and refresh frequency.
</summary>
            <param name="swapChain">The swap chain to retrieve display mode data about.</param>
            <returns>Extended display mode information about the adapter.</returns>
            <unmanaged>IDirect3DDevice9Ex::GetDisplayModeEx</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.CheckResourceResidency(SlimDX.Direct3D9.Resource[])">
            <summary>
Checks an array of resources to determine if it is likely that they will cause a large stall at
Draw time because the system must make the resources GPU-accessible.
</summary>
            <param name="resources">An array of resources to check the residency status of.</param>
            <returns>See the DirectX documentation.</returns>
            <remarks>See the DirectX documentation.</remarks>
            <unmanaged>IDirect3DDevice9Ex::CheckResourceResidency</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.CheckResourceResidency(SlimDX.Direct3D9.Resource)">
            <summary>
Checks a resource to determine if it is likely that it will cause a large stall at
Draw time because the system must make the resource GPU-accessible.
</summary>
            <param name="resource">An resource to check the residency status of.</param>
            <returns>See the DirectX documentation.</returns>
            <remarks>See the DirectX documentation.</remarks>
            <unmanaged>IDirect3DDevice9Ex::CheckResourceResidency</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.CheckDeviceState(System.IntPtr)">
            <summary>
Reports the current cooperative-level status of the Direct3D device for a windowed or full-screen application.
</summary>
            <param name="windowHandle">The destination window handle to check for occlusion. This parameter may be IntPtr.Zero</param>
            <returns>The current status of this device.</returns>
            <remarks>This method replaces the <see cref="T:SlimDX.Direct3D9.Device" />.TestCooperativeLevel function,
which always returns <see cref="T:SlimDX.Direct3D9.ResultCode" />.Success in Direct3D 9Ex applications.</remarks>
            <unmanaged>IDirect3DDevice9Ex::CheckDeviceState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.#ctor(SlimDX.Direct3D9.Direct3DEx,System.Int32,SlimDX.Direct3D9.DeviceType,System.IntPtr,SlimDX.Direct3D9.CreateFlags,SlimDX.Direct3D9.PresentParameters[],SlimDX.Direct3D9.DisplayModeEx[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.DeviceEx" /> class.
</summary>
            <param name="direct3D">The Direct3D instance to create the device from.</param>
            <param name="adapter">Ordinal number that denotes the display adapter.</param>
            <param name="deviceType">Denotes the desired device type. If the desired device type is not available, device creation will fail.</param>
            <param name="controlHandle">Specifies the target window for Direct3D rendering.</param>
            <param name="createFlags">Combination of one or more options that control device creation.</param>
            <param name="presentParameters">Describes the presentation parameters for the device being created.</param>
            <param name="fullScreenDisplayMode">The display mode for when the device is set to fullscreen.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.#ctor(SlimDX.Direct3D9.Direct3DEx,System.Int32,SlimDX.Direct3D9.DeviceType,System.IntPtr,SlimDX.Direct3D9.CreateFlags,SlimDX.Direct3D9.PresentParameters[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.DeviceEx" /> class.
</summary>
            <param name="direct3D">The Direct3DEx instance to create the device from.</param>
            <param name="adapter">Ordinal number that denotes the display adapter.</param>
            <param name="deviceType">Denotes the desired device type. If the desired device type is not available, device creation will fail.</param>
            <param name="controlHandle">Specifies the target window for Direct3D rendering.</param>
            <param name="createFlags">Combination of one or more options that control device creation.</param>
            <param name="presentParameters">Describes the presentation parameters for the device being created.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.#ctor(SlimDX.Direct3D9.Direct3DEx,System.Int32,SlimDX.Direct3D9.DeviceType,System.IntPtr,SlimDX.Direct3D9.CreateFlags,SlimDX.Direct3D9.PresentParameters,SlimDX.Direct3D9.DisplayModeEx)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.DeviceEx" /> class.
</summary>
            <param name="direct3D">The Direct3D instance to create the device from.</param>
            <param name="adapter">Ordinal number that denotes the display adapter.</param>
            <param name="deviceType">Denotes the desired device type. If the desired device type is not available, device creation will fail.</param>
            <param name="controlHandle">Specifies the target window for Direct3D rendering.</param>
            <param name="createFlags">Combination of one or more options that control device creation.</param>
            <param name="presentParameters">Describes the presentation parameters for the device being created.</param>
            <param name="fullScreenDisplayMode">The display mode for when the device is set to fullscreen.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.DeviceEx.#ctor(SlimDX.Direct3D9.Direct3DEx,System.Int32,SlimDX.Direct3D9.DeviceType,System.IntPtr,SlimDX.Direct3D9.CreateFlags,SlimDX.Direct3D9.PresentParameters)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.DeviceEx" /> class.
</summary>
            <param name="direct3D">The Direct3DEx instance to create the device from.</param>
            <param name="adapter">Ordinal number that denotes the display adapter.</param>
            <param name="deviceType">Denotes the desired device type. If the desired device type is not available, device creation will fail.</param>
            <param name="controlHandle">Specifies the target window for Direct3D rendering.</param>
            <param name="createFlags">Combination of one or more options that control device creation.</param>
            <param name="presentParameters">Describes the presentation parameters for the device being created.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.DeviceEx">
            <summary>
Applications use the methods of DeviceEx to render primitives, create resources, work with
system-level variables, adjust gamma ramp levels, work with palettes, and create shaders.
</summary>
            <unmanaged>IDirect3DDevice9Ex</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectType.GetMemberTypeBySemantic(System.String)">
            <summary>
Get a structure member type by semantic.
</summary>
            <param name="name">The semantic of the structure member type to retrieve.</param>
            <returns>The structure member type with the given semantic.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectType.GetMemberTypeByName(System.String)">
            <summary>
Get a structure member type by name.
</summary>
            <param name="name">The name of the structure member type to retrieve.</param>
            <returns>The structure member type with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectType.GetMemberTypeByIndex(System.Int32)">
            <summary>
Get a structure member type by index.
</summary>
            <param name="index">The zero-based index of the structure member type to retrieve.</param>
            <returns>The structure member type at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectType.GetMemberSemantic(System.Int32)">
            <summary>
Get the semantic of a type member.
</summary>
            <param name="index">The zero-based index of the structure member type to retrieve.</param>
            <returns>The semantic of the specified member.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectType.GetMemberName(System.Int32)">
            <summary>
Get the name of a type member.
</summary>
            <param name="index">The zero-based index of the structure member type to retrieve.</param>
            <returns>The name of the specified member.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectType.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectType" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectType.IsValid">
            <summary>
Indicates whether the type represents a valid interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectType.Description">
            <summary>
Gets the effect type's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectType">
            <summary>
Represents the type of an effect variable.
</summary>
            <unmanaged>ID3DX11EffectType</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRasterizerVariable.UndoSetRasterizerState(System.Int32)">
            <summary>
Reverts a previously set rasterizer state.
</summary>
            <param name="index">Index into an array of rasterizer-state interfaces. If there is only one rasterizer-state interface, use 0.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRasterizerVariable.GetBackingStore(System.Int32)">
            <summary>
Gets the saved backing store description.
</summary>
            <param name="index">Index into an array of rasterizer-state interfaces. If there is only one rasterizer-state interface, use 0.</param>
            <returns>The saved backing store description.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRasterizerVariable.SetRasterizerState(System.Int32,SlimDX.Direct3D11.RasterizerState)">
            <summary>
Sets the rasterizer state for the variable.
</summary>
            <param name="index">Index into an array of rasterizer-state interfaces. If there is only one rasterizer-state interface, use 0.</param>
            <param name="rasterizerState">The rasterizer state to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRasterizerVariable.GetRasterizerState(System.Int32)">
            <summary>
Gets the rasterizer state from the variable.
</summary>
            <param name="index">Index into an array of rasterizer-state interfaces. If there is only one rasterizer-state interface, use 0.</param>
            <returns>The retrieved rasterizer state.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRasterizerVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectRasterizerVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectRasterizerVariable">
            <summary>
Represents a rasterizer state effect variable.
</summary>
            <unmanaged>ID3DX11EffectRasterizerVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerState.FromDescription(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.RasterizerStateDescription)">
            <summary>
Constructs a new rasterizer state based on the specified description. If the description
is identical to that of an existing RasterizerState object, the existing RasterizerState object
is returned instead of a new instance.
</summary>
            <param name="device">The device used to create the state.</param>
            <param name="description">The state description.</param>
            <returns>The RasterizerState object.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerState.Description">
            <summary>
Gets the state's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.RasterizerState">
            <summary>
A state object defining the behavior of the rasterizer stage. 
</summary>
            <unmanaged>ID3D11RasterizerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariableDescription.Equals(SlimDX.Direct3D11.EffectVariableDescription@,SlimDX.Direct3D11.EffectVariableDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariableDescription.Equals(SlimDX.Direct3D11.EffectVariableDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariableDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariableDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariableDescription.op_Inequality(SlimDX.Direct3D11.EffectVariableDescription,SlimDX.Direct3D11.EffectVariableDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariableDescription.op_Equality(SlimDX.Direct3D11.EffectVariableDescription,SlimDX.Direct3D11.EffectVariableDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariableDescription.ExplicitBindPoint">
            <summary>
Used if the variable has been explicitly bound using the register keyword.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariableDescription.ConstantBufferOffset">
            <summary>
Offset into containing cbuffer or tbuffer (always 0 for annotations or variables not in constant buffers).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariableDescription.AnnotationCount">
            <summary>
Number of annotations on this variable.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariableDescription.Flags">
            <summary>
Optional flags for effect variables.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariableDescription.Semantic">
            <summary>
Semantic string of this variable or structure member.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariableDescription.Name">
            <summary>
Name of this variable, annotation, or structure member.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectVariableDescription">
            <summary>
Provides a description for effect variables.
</summary>
            <unmanaged>D3DX11_EFFECT_VARIABLE_DESC</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectInterfaceVariable.ClassInstance">
            <summary>
Gets or sets the class instance for the variable.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectInterfaceVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectInterfaceVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectInterfaceVariable">
            <summary>
Represents a class instance effect variable.
</summary>
            <unmanaged>ID3DX11EffectInterfaceVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilViewVariable.SetViewArray(SlimDX.Direct3D11.DepthStencilView[],System.Int32,System.Int32)">
            <summary>
Sets the value of the variable.
</summary>
            <param name="views">An array of views to set.</param>
            <param name="offset">The offset into the array to begin setting values.</param>
            <param name="count">The number of values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilViewVariable.SetViewArray(SlimDX.Direct3D11.DepthStencilView[])">
            <summary>
Sets the value of the variable.
</summary>
            <param name="views">An array of views to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilViewVariable.SetView(SlimDX.Direct3D11.DepthStencilView)">
            <summary>
Sets the value of the variable.
</summary>
            <param name="view">The view of the depth-stencil surface to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilViewVariable.GetViewArray(SlimDX.Direct3D11.DepthStencilView[],System.Int32,System.Int32)">
            <summary>
Gets an array of views of depth-stencil surfaces from the variable.
</summary>
            <param name="views">An array of views to hold the retrieved values.</param>
            <param name="offset">The offset into the array to begin storing values.</param>
            <param name="count">The number of values to get.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilViewVariable.GetViewArray(SlimDX.Direct3D11.DepthStencilView[])">
            <summary>
Gets an array of views of depth-stencil surfaces from the variable.
</summary>
            <param name="views">An array of views to hold the retrieved values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilViewVariable.GetView">
            <summary>
Gets the value of the variable.
</summary>
            <returns>The view of the depth-stencil variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilViewVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectDepthStencilViewVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectDepthStencilViewVariable">
            <summary>
Represents a depth-stencil view effect variable.
</summary>
            <unmanaged>ID3DX11EffectDepthStencilViewVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilVariable.UndoSetDepthStencilState(System.Int32)">
            <summary>
Reverts a previously set depth-stencil state.
</summary>
            <param name="index">Index into an array of depth-stencil interfaces. If there is only one depth-stencil interface, use 0.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilVariable.GetBackingStore(System.Int32)">
            <summary>
Gets the saved backing store description.
</summary>
            <param name="index">Index into an array of depth-stencil interfaces. If there is only one depth-stencil interface, use 0.</param>
            <returns>The saved backing store description.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilVariable.SetDepthStencilState(System.Int32,SlimDX.Direct3D11.DepthStencilState)">
            <summary>
Sets the depth-stencil state for the variable.
</summary>
            <param name="index">Index into an array of depth-stencil interfaces. If there is only one depth-stencil interface, use 0.</param>
            <param name="depthStencilState">The depth-stencil state to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilVariable.GetDepthStencilState(System.Int32)">
            <summary>
Gets the depth-stencil state from the variable.
</summary>
            <param name="index">Index into an array of depth-stencil interfaces. If there is only one depth-stencil interface, use 0.</param>
            <returns>The retrieved depth-stencil state.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDepthStencilVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectDepthStencilVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectDepthStencilVariable">
            <summary>
Represents a depth-stencil state effect variable.
</summary>
            <unmanaged>ID3DX11EffectDepthStencilVariable</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectClassInstanceVariable.ClassInstance">
            <summary>
Gets the class instance from the variable.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectClassInstanceVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectClassInstanceVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectClassInstanceVariable">
            <summary>
Represents a class instance effect variable.
</summary>
            <unmanaged>ID3DX11EffectClassInstanceVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectBlendVariable.UndoSetBlendState(System.Int32)">
            <summary>
Reverts a previously set blend state.
</summary>
            <param name="index">Index into an array of blend-state interfaces. If there is only one blend-state interface, use 0.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectBlendVariable.GetBackingStore(System.Int32)">
            <summary>
Gets the saved backing store description.
</summary>
            <param name="index">Index into an array of blend-state interfaces. If there is only one blend-state interface, use 0.</param>
            <returns>The saved backing store description.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectBlendVariable.SetBlendState(System.Int32,SlimDX.Direct3D11.BlendState)">
            <summary>
Sets the blend state for the variable.
</summary>
            <param name="index">Index into an array of blend-state interfaces. If there is only one blend-state interface, use 0.</param>
            <param name="blendState">The blend state to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectBlendVariable.GetBlendState(System.Int32)">
            <summary>
Gets the blend state from the variable.
</summary>
            <param name="index">Index into an array of blend-state interfaces. If there is only one blend-state interface, use 0.</param>
            <returns>The retrieved blend state.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectBlendVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectBlendVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectBlendVariable">
            <summary>
Represents a blend state effect variable.
</summary>
            <unmanaged>ID3DX11EffectBlendVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.BlendState.FromDescription(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.BlendStateDescription)">
            <summary>
Constructs a new BlendState based on the specified description. If the description
is identical to that of an existing BlendState object, the existing BlendState object
is returned instead of a new instance.
</summary>
            <param name="device">The device with which to associate the state object.</param>
            <param name="description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.BlendState.Description">
            <summary>
Gets the state's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.BlendState">
            <summary>
A state object defining the behavior of the pixel-blending stage of the output merger. 
</summary>
            <unmanaged>ID3D11BlendState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectStringVariable.GetStringArray(System.String[],System.Int32,System.Int32)">
            <summary>
Gets an array of string values from the variable.
</summary>
            <param name="values">An array of strings to hold the retrieved values.</param>
            <param name="offset">The offset into the array to begin storing values.</param>
            <param name="count">The number of values to get.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectStringVariable.GetStringArray(System.String[])">
            <summary>
Gets an array of string values from the variable.
</summary>
            <param name="values">An array of strings to hold the retrieved values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectStringVariable.GetString">
            <summary>
Gets the value of the variable.
</summary>
            <returns>A string representing the value of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectStringVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectStringVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectStringVariable">
            <summary>
Represents a string effect variable.
</summary>
            <unmanaged>ID3DX11EffectStringVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.GetFloatArray(System.Int32)">
            <summary>
Gets the value of the variable as an array of floating points.
</summary>
            <param name="count">The number of values to get.</param>
            <returns>The array of floating point values of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.GetIntArray(System.Int32)">
            <summary>
Gets the value of the variable as an array of integers.
</summary>
            <param name="count">The number of values to get.</param>
            <returns>The array of integer values of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.GetBoolArray(System.Int32)">
            <summary>
Gets the value of the variable as an array of booleans.
</summary>
            <param name="count">The number of values to get.</param>
            <returns>The array of boolean values of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.GetFloat">
            <summary>
Gets the value of the variable as a floating point.
</summary>
            <returns>The floating point value of the scalar.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.GetInt">
            <summary>
Gets the value of the variable as an integer.
</summary>
            <returns>The integer value of the scalar.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.GetBool">
            <summary>
Gets the value of the variable as a boolean.
</summary>
            <returns>The boolean value of the scalar.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.Set(System.Single[])">
            <summary>
Sets the value of the scalar variable.
</summary>
            <param name="values">The array of floating point values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.Set(System.Int32[])">
            <summary>
Sets the value of the scalar variable.
</summary>
            <param name="values">The array of integer values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.Set(System.Boolean[])">
            <summary>
Sets the value of the scalar variable.
</summary>
            <param name="values">The array of boolean values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.Set(System.Single)">
            <summary>
Sets the value of the scalar variable.
</summary>
            <param name="value">The floating point value to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.Set(System.Int32)">
            <summary>
Sets the value of the scalar variable.
</summary>
            <param name="value">The integer value to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.Set(System.Boolean)">
            <summary>
Sets the value of the scalar variable.
</summary>
            <param name="value">The boolean value to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectScalarVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectScalarVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectScalarVariable">
            <summary>
Represents a scalar effect variable.
</summary>
            <unmanaged>ID3DX11EffectScalarVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.SetMatrixTransposeArray(SlimDX.Matrix[],System.Int32,System.Int32)">
            <summary>
Transposes and sets the matrix value of the variable.
</summary>
            <param name="matrices">An array of matrices to transpose and set.</param>
            <param name="offset">The offset into the array to begin setting values.</param>
            <param name="count">The number of values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.SetMatrixTransposeArray(SlimDX.Matrix[])">
            <summary>
Transposes and sets the matrix value of the variable.
</summary>
            <param name="matrices">An array of matrices to transpose and set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.SetMatrixTranspose(SlimDX.Matrix)">
            <summary>
Transposes and sets the matrix value of the variable.
</summary>
            <param name="matrix">The matrix value to transpose and set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.SetMatrixArray(SlimDX.Matrix[],System.Int32,System.Int32)">
            <summary>
Sets the value of the variable.
</summary>
            <param name="matrices">An array of matrices to set.</param>
            <param name="offset">The offset into the array to begin setting values.</param>
            <param name="count">The number of values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.SetMatrixArray(SlimDX.Matrix[])">
            <summary>
Sets the value of the variable.
</summary>
            <param name="matrices">An array of matrices to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.SetMatrix(SlimDX.Matrix)">
            <summary>
Sets the value of the variable.
</summary>
            <param name="matrix">The matrix value to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.GetMatrixTransposeArray(SlimDX.Matrix[],System.Int32,System.Int32)">
            <summary>
Gets an array of transposed matrix values from the variable.
</summary>
            <param name="matrices">An array of matrices to hold the retrieved transposed values.</param>
            <param name="offset">The offset into the array to begin storing values.</param>
            <param name="count">The number of values to get.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.GetMatrixTransposeArray(SlimDX.Matrix[])">
            <summary>
Gets an array of transposed matrix values from the variable.
</summary>
            <param name="matrices">An array of matrices to hold the retrieved transposed values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.GetMatrixTranspose(SlimDX.Matrix@)">
            <summary>
Gets the transposed value of the variable.
</summary>
            <param name="result">When the method completes, contains the transposed value of the variable.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.GetMatrixTranspose">
            <summary>
Gets the transposed value of the variable.
</summary>
            <returns>The transposed matrix value of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.GetMatrixArray(SlimDX.Matrix[],System.Int32,System.Int32)">
            <summary>
Gets an array of matrix values from the variable.
</summary>
            <param name="matrices">An array of matrices to hold the retrieved values.</param>
            <param name="offset">The offset into the array to begin storing values.</param>
            <param name="count">The number of values to get.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.GetMatrixArray(SlimDX.Matrix[])">
            <summary>
Gets an array of matrix values from the variable.
</summary>
            <param name="matrices">An array of matrices to hold the retrieved values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.GetMatrix(SlimDX.Matrix@)">
            <summary>
Gets the value of the variable.
</summary>
            <param name="result">When the method completes, contains the value of the variable.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.GetMatrix">
            <summary>
Gets the value of the variable.
</summary>
            <returns>The matrix value of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectMatrixVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectMatrixVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectMatrixVariable">
            <summary>
Represents a matrix effect variable.
</summary>
            <unmanaged>ID3DX11EffectMatrixVariable</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.PrimarySoundBuffer.#ctor(SlimDX.DirectSound.DirectSound,SlimDX.DirectSound.SoundBufferDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.SoundBuffer" /> class.
</summary>
            <param name="device" />
            <param name="description" />
            <returns />
        </member>
        <member name="P:SlimDX.DirectSound.DirectSound3DAlgorithmGuid.NoVirtualization3DAlgorithm">
            <summary>
3-D output is mapped into normal left and right stereo panning. At 90 degrees to the left, the sound is coming out of only the left speaker; at 90 degrees to the right, sound is coming out of only the right speaker. The vertical axis is ignored except for scaling of volume due to distance. Doppler shift and volume scaling are still applied, but the 3-D filtering is not performed on this buffer. This is the most efficient software implementation, but provides no virtual 3-D audio effect.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSound3DAlgorithmGuid.LightHrt3DAlgorithm">
            <summary>
The 3-D API is processed with the efficient 3-D audio algorithm. This algorithm gives a good 3-D audio effect, but uses fewer CPU cycles than Guid3DAlgorithmHrtfFull
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSound3DAlgorithmGuid.FullHrt3DAlgorithm">
            <summary>
The 3-D API is processed with the high quality 3-D audio algorithm. This algorithm gives the highest quality 3-D audio effect, but uses more CPU cycles.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSound3DAlgorithmGuid.Default3DAlgorithm">
            <summary>
Default 3-D algorithm
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.DirectSound3DAlgorithmGuid">
            <summary>
Contains system-defined identifiers for DirectSound 3-D Algorithms.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.WavesReverb">
            <summary>
Waves reverberation effect 
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.StandardParametricEqualizer">
            <summary>
Standard Parametric equalizer effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.StandardInteractive3DLevel2Reverb">
            <summary>
Standard Environmental reverberation effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.StandardGargle">
            <summary>
Standard Gargle effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.StandardFlanger">
            <summary>
Standard Flanger effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.StandardEcho">
            <summary>
Standard Echo effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.StandardDistortion">
            <summary>
Standard Distortion effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.StandardCompressor">
            <summary>
Standard Compressor effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundEffectGuid.StandardChorus">
            <summary>
Standard Chorus effect
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.SoundEffectGuid">
            <summary>
Contains system-defined identifiers for DirectSound sound effects.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectGuid.SystemNoiseSuppressionCaptureEffect">
            <summary>
System default noise suppression capture effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectGuid.SystemAcousticEchoCancellationCaptureEffect">
            <summary>
System default acoustic echo cancellation capture effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectGuid.MicrosoftNoiseSuppressionCaptureEffect">
            <summary>
Microsoft noise suppression capture effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectGuid.MicrosoftAcousticEchoCancellationCaptureEffect">
            <summary>
Microsoft acoustic echo cancellation capture effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectGuid.NoiseSuppressionCaptureEffect">
            <summary>
Noise suppression capture effect
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectGuid.AcousticEchoCancellationCaptureEffect">
            <summary>
Acoustic echo cancellation capture effect.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.CaptureEffectGuid">
            <summary>
Contains system-defined identifiers for DirectSound capture effects.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSoundGuid.DefaultVoicePlaybackDevice">
            <summary>
Voice playback device.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSoundGuid.DefaultVoiceCaptureDevice">
            <summary>
Voice capture device.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSoundGuid.DefaultPlaybackDevice">
            <summary>
Default audio playback device.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSoundGuid.DefaultCaptureDevice">
            <summary>
Default audio capture device.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSoundGuid.AllObjects">
            <summary>
All objects.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.DirectSoundGuid">
            <summary>
Contains system-defined identifiers for DirectSound default playback and capture devices.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.Multimedia.AdpcmWaveFormat.Equals(SlimDX.Multimedia.AdpcmWaveFormat,SlimDX.Multimedia.AdpcmWaveFormat)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.AdpcmWaveFormat.Equals(SlimDX.Multimedia.AdpcmWaveFormat)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.AdpcmWaveFormat.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.AdpcmWaveFormat.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.AdpcmWaveFormat.op_Inequality(SlimDX.Multimedia.AdpcmWaveFormat,SlimDX.Multimedia.AdpcmWaveFormat)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.AdpcmWaveFormat.op_Equality(SlimDX.Multimedia.AdpcmWaveFormat,SlimDX.Multimedia.AdpcmWaveFormat)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.AdpcmWaveFormat.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.Multimedia.AdpcmWaveFormat" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.WrongTextureFormat">
            <summary>
Occurs when the pixel format for a texture is invalid.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_WRONGTEXTUREFORMAT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.WasStillDrawing">
            <summary>
Occurs when a previous draw operation has not yet completed at the time of a new draw call.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_WASSTILLDRAWING</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.UnsupportedTextureFilter">
            <summary>
Occurs when the device does not support the requested texture filter.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_UNSUPPORTEDTEXTUREFILTER</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.UnsupportedFactorValue">
            <summary>
Occurs when the device does not support the requested texture factor value.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_UNSUPPORTEDFACTORVALUE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.UnsupportedColorOperation">
            <summary>
Occurs when the device does not support the requested color blending operation.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_UNSUPPORTEDCOLOROPERATION</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.UnsupportedColorArgument">
            <summary>
Occurs when the device not support the requested color blending argument.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_UNSUPPORTEDCOLORARG</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.UnsupportedAlphaOperation">
            <summary>
Occurs when the device does not support the requested alpha blending operation.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_UNSUPPORTEDALPHAOPERATION</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.UnsupportedAlphaArgument">
            <summary>
Occurs when the device does not support the requested alpha blending argument.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_UNSUPPORTEDALPHAARG</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.TooManyOperations">
            <summary>
Occurs when more texture-filtering operations are requested than the device can support.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_TOOMANYOPERATIONS</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.TooManyInfluences">
            <summary>
Occurs when too many vertex influences are specified.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_TOOMANYINFLUENCES</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.Success">
            <summary>
Represents a generic success result.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb172554">D3D_OK</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.SkinningNotSupported">
            <summary>
Occurs when skinning is not supported.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_SKINNINGNOTSUPPORTED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.ResidentInSharedMemory">
            <summary>
Occurs when the resource is resident in shared memory.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb174339">S_RESIDENT_IN_SHARED_MEMORY</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.PresentOccluded">
            <summary>
Occurs when the presentation area is occluded.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb219624">S_PRESENT_OCCLUDED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.PresentModeChanged">
            <summary>
Occurs when the desktop display mode changes.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged>S_PRESENT_MODE_CHANGED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.OutOfVideoMemory">
            <summary>
Occurs when the driver runs out of video memory.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_OUTOFVIDEOMEMORY</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.NotResident">
            <summary>
Occurs when the resource is not resident in memory.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="bb174339">S_NOT_RESIDENT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.NotFound">
            <summary>
Occurs when the requested item cannot be found.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_NOTFOUND</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.NotAvailable">
            <summary>
Occurs when the device does not support the queried technique.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172554">D3DERR_NOTAVAILABLE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.NoAutomaticGeneration">
            <summary>
Occurs when a method succeeds but mipmaps could not be automatically generated.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged>D3DOK_NOAUTOGEN</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.MoreData">
            <summary>
Occurs when there is more data available than the specified buffer can hold.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_MOREDATA</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.LoadedMeshHasNoData">
            <summary>
Occurs when a loaded mesh has no data.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_LOADEDMESHASNODATA</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.InvalidMesh">
            <summary>
Occurs when an invalid mesh is passed.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_INVALIDMESH</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.InvalidDevice">
            <summary>
Occurs when a requested device type is invalid.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_INVALIDDEVICE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.InvalidData">
            <summary>
Occurs when passed data is invalid.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_INVALIDDATA</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.InvalidCall">
            <summary>
Occurs when an invalid method call is made. This is usually do to an invalid parameter.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172554">D3DERR_INVALIDCALL</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.DuplicateNamedFragment">
            <summary>
Occurs when a fragment with the specified name already exists.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_DUPLICATENAMEDFRAGMENT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.DriverInternalError">
            <summary>
Occurs when a driver internal error is thrown.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_DRIVERINTERNALERROR</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.DeviceRemoved">
            <summary>
Occurs when a device is removed from the system.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_DEVICEREMOVED</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.DeviceNotReset">
            <summary>
Occurs when a lost yet resettable device has not yet been reset.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172554">D3DERR_DEVICENOTRESET</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.DeviceLost">
            <summary>
Occurs when a device is lost.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="bb172554">D3DERR_DEVICELOST</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.DeviceHung">
            <summary>
Occurs when a device is hung.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_DEVICEHUNG</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.ConflictingTexturePalette">
            <summary>
Occurs when two texture palettes conflict with each other.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_CONFLICTINGTEXTUREPALETTE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.ConflictingTextureFilter">
            <summary>
Occurs when two set texture filters conflict with each other.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_CONFLICTINGTEXTUREFILTER</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.ConflictingRenderState">
            <summary>
Occurs when two set render states conflict with each other.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DERR_CONFLICTINGRENDERSTATE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.CannotRemoveLastItem">
            <summary>
Occurs when a user tries to remove the last item in a collection.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_CANNOTREMOVELASTITEM</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.CannotModifyIndexBuffer">
            <summary>
Occurs when a user tries to modify an immutable index buffer.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_CANNOTMODIFYINDEXBUFFER</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ResultCode.CannotAttributeSort">
            <summary>
Occurs when attribute sorting is not supported as an optimization technique.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged>D3DXERR_CANNOTATTRSORT</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.ResultCode">
            <summary>Defines result codes that are returned by Direct3D 9 functions.</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectSamplerVariable.UndoSetSamplerState(System.Int32)">
            <summary>
Reverts a previously set sampler state.
</summary>
            <param name="index">Index into an array of sampler-state interfaces. If there is only one sampler-state interface, use 0.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectSamplerVariable.GetBackingStore(System.Int32)">
            <summary>
Gets the saved backing store description.
</summary>
            <param name="index">Index into an array of sampler-state interfaces. If there is only one sampler-state interface, use 0.</param>
            <returns>The saved backing store description.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectSamplerVariable.SetSamplerState(System.Int32,SlimDX.Direct3D11.SamplerState)">
            <summary>
Sets the sampler state for the variable.
</summary>
            <param name="index">Index into an array of sampler-state interfaces. If there is only one sampler-state interface, use 0.</param>
            <param name="samplerState">The sampler state to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectSamplerVariable.GetSamplerState(System.Int32)">
            <summary>
Gets the sampler state from the variable.
</summary>
            <param name="index">Index into an array of sampler-state interfaces. If there is only one sampler-state interface, use 0.</param>
            <returns>The retrieved sampler state.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectSamplerVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectSamplerVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectSamplerVariable">
            <summary>
Represents a sampler state effect variable.
</summary>
            <unmanaged>ID3DX11EffectSamplerVariable</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.EventDescription">
            <summary>
Describes an animation event.
</summary>
            <unmanaged>D3DXEVENT_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.TrackDescription">
            <summary>
Describes an animation track and specifies blending weight, speed, and position for the track at a given time.
</summary>
            <unmanaged>D3DXTRACK_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.XInput.Capabilities.Equals(SlimDX.XInput.Capabilities@,SlimDX.XInput.Capabilities@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.Capabilities.Equals(SlimDX.XInput.Capabilities)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.Capabilities.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.Capabilities.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XInput.Capabilities.op_Inequality(SlimDX.XInput.Capabilities,SlimDX.XInput.Capabilities)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.Capabilities.op_Equality(SlimDX.XInput.Capabilities,SlimDX.XInput.Capabilities)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.XInput.Capabilities.Vibration">
            <summary>
Gets a <see cref="T:SlimDX.XInput.Vibration" /> structure describing available vibration features.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Capabilities.Gamepad">
            <summary>
Gets a <see cref="T:SlimDX.XInput.Gamepad" /> structure describing available gamepad features.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Capabilities.Flags">
            <summary>
Gets the features of the controller. 
</summary>
        </member>
        <member name="P:SlimDX.XInput.Capabilities.Subtype">
            <summary>
Gets the controller subtype.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Capabilities.Type">
            <summary>
Gets the controller type.
</summary>
        </member>
        <member name="T:SlimDX.XInput.Capabilities">
            <summary>
Describes the capabilities of a controller.
</summary>
            <unmanaged>XINPUT_CAPABILITIES</unmanaged>
        </member>
        <member name="M:SlimDX.XInput.Vibration.Equals(SlimDX.XInput.Vibration@,SlimDX.XInput.Vibration@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.Vibration.Equals(SlimDX.XInput.Vibration)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.Vibration.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.Vibration.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XInput.Vibration.op_Inequality(SlimDX.XInput.Vibration,SlimDX.XInput.Vibration)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.Vibration.op_Equality(SlimDX.XInput.Vibration,SlimDX.XInput.Vibration)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.XInput.Vibration.RightMotorSpeed">
            <summary>
Gets or sets the right motor speed. 
</summary>
            <remarks>
Valid values are in the range 0 to 65,535. Zero signifies no motor use; 65,535 signifies 100% motor use.
</remarks>
        </member>
        <member name="P:SlimDX.XInput.Vibration.LeftMotorSpeed">
            <summary>
Gets or sets the left motor speed. 
</summary>
            <remarks>
Valid values are in the range 0 to 65,535. Zero signifies no motor use; 65,535 signifies 100% motor use.
</remarks>
        </member>
        <member name="T:SlimDX.XInput.Vibration">
            <summary>
Specifies motor speed levels for the vibration function of a controller.
</summary>
            <remarks>
The left motor is the low-frequency rumble motor. The right motor is the high-frequency rumble motor. 
The two motors are not the same, and they create different vibration effects.
</remarks>
            <unmanaged>XINPUT_VIBRATION</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3DDescription.Equals(SlimDX.Direct3D11.Texture3DDescription@,SlimDX.Direct3D11.Texture3DDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3DDescription.Equals(SlimDX.Direct3D11.Texture3DDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3DDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3DDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3DDescription.op_Inequality(SlimDX.Direct3D11.Texture3DDescription,SlimDX.Direct3D11.Texture3DDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3DDescription.op_Equality(SlimDX.Direct3D11.Texture3DDescription,SlimDX.Direct3D11.Texture3DDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.OptionFlags">
            <summary>
Flags that identifies other, less common resource options.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.CpuAccessFlags">
            <summary>
Flags that specify how the CPU may access the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.BindFlags">
            <summary>
Flags that describe how the texture can be bound to the pipeline.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.Usage">
            <summary>
Value that identifies how the texture is to be read from and written to.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.Format">
            <summary>
Format of the data in the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.MipLevels">
            <summary>
The maximum number of mipmap levels in the texture. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.Depth">
            <summary>
Texture depth (in texels).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.Height">
            <summary>
Texture height (in texels).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3DDescription.Width">
            <summary>
Texture width (in texels).
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Texture3DDescription">
            <summary>
Describes a three-dimensional texture.
</summary>
            <unmanaged>D3D11_TEXTURE3D_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.ToStream(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Texture3D,SlimDX.Direct3D11.ImageFileFormat,System.IO.Stream)">
            <summary>
Saves a texture to a stream.
</summary>
            <param name="context">The device used to save the texture.</param>
            <param name="texture">The texture to save.</param>
            <param name="format">The format the texture will be saved as.</param>
            <param name="stream">Destination memory stream where the image will be saved.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.ToFile(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Texture3D,SlimDX.Direct3D11.ImageFileFormat,System.String)">
            <summary>
Saves a texture to file.
</summary>
            <param name="context">The device used to save the texture.</param>
            <param name="texture">The texture to save.</param>
            <param name="format">The format the texture will be saved as.</param>
            <param name="fileName">Name of the destination output file where the texture will be saved.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.FromStream(SlimDX.Direct3D11.Device,System.IO.Stream,System.Int32,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from a stream of data.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="stream">A stream containing the image data to load.</param>
            <param name="sizeInBytes">Size of the image to load.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.FromStream(SlimDX.Direct3D11.Device,System.IO.Stream,System.Int32)">
            <summary>
Loads a texture from a stream of data.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="stream">A stream containing the image data to load.</param>
            <param name="sizeInBytes">Size of the image to load.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.FromMemory(SlimDX.Direct3D11.Device,System.Byte[],SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from an image in memory.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="memory">Array of memory containing the image data to load.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.FromMemory(SlimDX.Direct3D11.Device,System.Byte[])">
            <summary>
Loads a texture from an image in memory.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="memory">Array of memory containing the image data to load.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.FromFile(SlimDX.Direct3D11.Device,System.String,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from an image file.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="fileName">Path to the file on disk.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.FromFile(SlimDX.Direct3D11.Device,System.String)">
            <summary>
Loads a texture from an image file.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="fileName">Path to the file on disk.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture3DDescription,SlimDX.DataBox[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture3D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture3DDescription,SlimDX.DataBox)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture3D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">The initial texture data.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture3D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture3DDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture3D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture3D.Description">
            <summary>
Gets the texture description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Texture3D">
            <summary>
Represents a three-dimensional texture.
</summary>
            <unmanaged>ID3D11Texture3D</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.ComputeNormalMap(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Texture2D,SlimDX.Direct3D11.Texture2D,SlimDX.Direct3D11.NormalMapFlags,SlimDX.Direct3D11.Channel,System.Single)">
            <summary>
Converts a height map into a normal map. The (x,y,z) components of each normal are mapped to the (r,g,b) channels of the output texture.
</summary>
            <param name="context">The device used to create the normal map.</param>
            <param name="source">The source height map texture.</param>
            <param name="destination">The destination texture.</param>
            <param name="flags">One or more flags that control generation of normal maps.</param>
            <param name="channel">One or more flag specifying the source of height information.</param>
            <param name="amplitude">Constant value multiplier that increases (or decreases) the values in the normal map. Higher values usually make bumps more visible, lower values usually make bumps less visible.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.ToStream(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Texture2D,SlimDX.Direct3D11.ImageFileFormat,System.IO.Stream)">
            <summary>
Saves a texture to a stream.
</summary>
            <param name="context">The device used to save the texture.</param>
            <param name="texture">The texture to save.</param>
            <param name="format">The format the texture will be saved as.</param>
            <param name="stream">Destination memory stream where the image will be saved.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.ToFile(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Texture2D,SlimDX.Direct3D11.ImageFileFormat,System.String)">
            <summary>
Saves a texture to file.
</summary>
            <param name="context">The device used to save the texture.</param>
            <param name="texture">The texture to save.</param>
            <param name="format">The format the texture will be saved as.</param>
            <param name="fileName">Name of the destination output file where the texture will be saved.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.FromStream(SlimDX.Direct3D11.Device,System.IO.Stream,System.Int32,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from a stream of data.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="stream">A stream containing the image data to load.</param>
            <param name="sizeInBytes">Size of the image to load.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.FromStream(SlimDX.Direct3D11.Device,System.IO.Stream,System.Int32)">
            <summary>
Loads a texture from a stream of data.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="stream">A stream containing the image data to load.</param>
            <param name="sizeInBytes">Size of the image to load.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.FromMemory(SlimDX.Direct3D11.Device,System.Byte[],SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from an image in memory.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="memory">Array of memory containing the image data to load.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.FromMemory(SlimDX.Direct3D11.Device,System.Byte[])">
            <summary>
Loads a texture from an image in memory.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="memory">Array of memory containing the image data to load.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.FromFile(SlimDX.Direct3D11.Device,System.String,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from an image file.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="fileName">Path to the file on disk.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.FromFile(SlimDX.Direct3D11.Device,System.String)">
            <summary>
Loads a texture from an image file.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="fileName">Path to the file on disk.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture2DDescription,SlimDX.DataRectangle[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture2D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture2DDescription,SlimDX.DataRectangle)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture2D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">The initial texture data.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture2DDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture2D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2D.Description">
            <summary>
Gets the texture description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Texture2D">
            <summary>
Represents a two-dimensional texture.
</summary>
            <unmanaged>ID3D11Texture2D</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1DDescription.Equals(SlimDX.Direct3D11.Texture1DDescription@,SlimDX.Direct3D11.Texture1DDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1DDescription.Equals(SlimDX.Direct3D11.Texture1DDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1DDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1DDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1DDescription.op_Inequality(SlimDX.Direct3D11.Texture1DDescription,SlimDX.Direct3D11.Texture1DDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1DDescription.op_Equality(SlimDX.Direct3D11.Texture1DDescription,SlimDX.Direct3D11.Texture1DDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1DDescription.OptionFlags">
            <summary>
Flags that identifies other, less common resource options.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1DDescription.CpuAccessFlags">
            <summary>
Flags that specify how the CPU may access the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1DDescription.BindFlags">
            <summary>
Flags that describe how the texture can be bound to the pipeline.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1DDescription.Usage">
            <summary>
Value that identifies how the texture is to be read from and written to.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1DDescription.Format">
            <summary>
Format of the data in the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1DDescription.ArraySize">
            <summary>
Number of textures in the array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1DDescription.MipLevels">
            <summary>
The maximum number of mipmap levels in the texture. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1DDescription.Width">
            <summary>
Texture width (in texels).
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Texture1DDescription">
            <summary>
Describes a one-dimensional texture.
</summary>
            <unmanaged>D3D11_TEXTURE1D_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.ToStream(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Texture1D,SlimDX.Direct3D11.ImageFileFormat,System.IO.Stream)">
            <summary>
Saves a texture to a stream.
</summary>
            <param name="context">The device used to save the texture.</param>
            <param name="texture">The texture to save.</param>
            <param name="format">The format the texture will be saved as.</param>
            <param name="stream">Destination memory stream where the image will be saved.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.ToFile(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Texture1D,SlimDX.Direct3D11.ImageFileFormat,System.String)">
            <summary>
Saves a texture to file.
</summary>
            <param name="context">The device used to save the texture.</param>
            <param name="texture">The texture to save.</param>
            <param name="format">The format the texture will be saved as.</param>
            <param name="fileName">Name of the destination output file where the texture will be saved.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.FromStream(SlimDX.Direct3D11.Device,System.IO.Stream,System.Int32,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from a stream of data.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="stream">A stream containing the image data to load.</param>
            <param name="sizeInBytes">Size of the image to load.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.FromStream(SlimDX.Direct3D11.Device,System.IO.Stream,System.Int32)">
            <summary>
Loads a texture from a stream of data.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="stream">A stream containing the image data to load.</param>
            <param name="sizeInBytes">Size of the image to load.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.FromMemory(SlimDX.Direct3D11.Device,System.Byte[],SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from an image in memory.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="memory">Array of memory containing the image data to load.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.FromMemory(SlimDX.Direct3D11.Device,System.Byte[])">
            <summary>
Loads a texture from an image in memory.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="memory">Array of memory containing the image data to load.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.FromFile(SlimDX.Direct3D11.Device,System.String,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Loads a texture from an image file.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="fileName">Path to the file on disk.</param>
            <param name="loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.FromFile(SlimDX.Direct3D11.Device,System.String)">
            <summary>
Loads a texture from an image file.
</summary>
            <param name="device">The device used to load the texture.</param>
            <param name="fileName">Path to the file on disk.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture1DDescription,SlimDX.DataStream[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture1D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture1DDescription,SlimDX.DataStream)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture1D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">The initial texture data.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture1D.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Texture1DDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Texture1D" /> class.
</summary>
            <param name="device">The device with which to associate the texture.</param>
            <param name="description">The description of the texture.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture1D.Description">
            <summary>
Gets the texture description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Texture1D">
            <summary>
Represents a one-dimensional texture.
</summary>
            <unmanaged>ID3D11Texture1D</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Predicate.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.QueryDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Predicate" /> class.
</summary>
            <param name="device">The device used to create the predicate object.</param>
            <param name="description">The query description.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.Predicate">
            <summary>
Used to determine whether geometry should be processed depending on the results of a previous draw call.
</summary>
            <unmanaged>ID3D11Predicate</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Query.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.QueryDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Query" /> class.
</summary>
            <param name="device">The device used to create the query.</param>
            <param name="description">The query description.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.Query.Description">
            <summary>
Gets the query's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Query">
            <summary>
Defines an interface for querying information from the GPU.
</summary>
            <unmanaged>ID3D11Query</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilView.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Resource,SlimDX.Direct3D11.DepthStencilViewDescription)">
            <summary>Creates a <see cref="T:SlimDX.Direct3D11.DepthStencilView" /> for accessing resource data.</summary>
            <param name="device">The device to use when creating this <see cref="T:SlimDX.Direct3D11.DepthStencilView" />.</param>
            <param name="resource">The resource that will serve as the depth-stencil surface. This surface must have been created with the <see cref="T:SlimDX.Direct3D11.BindFlags">DepthStencil</see> flag.</param>
            <param name="description">A structure describing the <see cref="T:SlimDX.Direct3D11.DepthStencilView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateDepthStencilView</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilView.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Resource)">
            <summary>Creates a <see cref="T:SlimDX.Direct3D11.DepthStencilView" /> for accessing resource data.</summary>
            <param name="device">The device to use when creating this <see cref="T:SlimDX.Direct3D11.DepthStencilView" />.</param>
            <param name="resource">The resource that will serve as the depth-stencil surface. This surface must have been created with the <see cref="T:SlimDX.Direct3D11.BindFlags">DepthStencil</see> flag.</param>
            <unmanaged>ID3D11Device::CreateDepthStencilView</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilView.Description">
            <summary>Gets a structure describing this <see cref="T:SlimDX.Direct3D11.DepthStencilView" />.</summary>
            <unmanaged>ID3D11DepthStencilView::GetDesc</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D11.DepthStencilView">
            <summary>Accesses a texture resource during depth/stencil testing.</summary>
            <unmanaged>ID3D11DepthStencilView</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetUnorderedAccessViews(SlimDX.Direct3D11.UnorderedAccessView[],System.Int32,System.Int32,System.Int32[])">
            <summary>
Sets the unordered resource views used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting views.</param>
            <param name="count">Number of views from the source array to set.</param>
            <param name="initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetUnorderedAccessView(SlimDX.Direct3D11.UnorderedAccessView,System.Int32,System.Int32)">
            <summary>
Sets a single unordered access view to be used by the compute shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the view.</param>
            <param name="initialLength">Initial append/consume buffer offset. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for the UAV.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetUnorderedAccessViews(SlimDX.Direct3D11.UnorderedAccessView[],System.Int32,System.Int32)">
            <summary>
Sets the unordered resource views used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting views.</param>
            <param name="count">Number of views from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetUnorderedAccessView(SlimDX.Direct3D11.UnorderedAccessView,System.Int32)">
            <summary>
Sets a single unordered access view to be used by the compute shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the view.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetShaderResources(SlimDX.Direct3D11.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Sets the shader resources used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting shader resources.</param>
            <param name="count">Number of resources from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetShaderResource(SlimDX.Direct3D11.ShaderResourceView,System.Int32)">
            <summary>
Sets a single shader resource to be used by the compute shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetSamplers(SlimDX.Direct3D11.SamplerState[],System.Int32,System.Int32)">
            <summary>
Sets the sampler states used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting samplers.</param>
            <param name="count">Number of samplers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetSampler(SlimDX.Direct3D11.SamplerState,System.Int32)">
            <summary>
Sets a single sampler to be used by the compute shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the sampler.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetConstantBuffers(SlimDX.Direct3D11.Buffer[],System.Int32,System.Int32)">
            <summary>
Sets the constant buffers used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting constant buffers.</param>
            <param name="count">Number of buffers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.SetConstantBuffer(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Sets a single constant buffer to be used by the compute shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the constant buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.GetUnorderedAccessViews(System.Int32,System.Int32)">
            <summary>
Gets the unordered resource views used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving views.</param>
            <param name="count">Number of views to retrieve.</param>
            <returns>An array of unordered access views.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.GetShaderResources(System.Int32,System.Int32)">
            <summary>
Gets the shader resources used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name="count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.GetSamplers(System.Int32,System.Int32)">
            <summary>
Gets the sampler states used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name="count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
Gets the constant buffers used by the compute shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name="count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.Get(SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Gets the compute shader currently assigned to the device.
</summary>
            <param name="classInstances">An array that will be used to contain any class instances currently active.</param>
            <returns>The compute shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.Get">
            <summary>
Gets the compute shader currently assigned to the device.
</summary>
            <returns>The compute shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.Set(SlimDX.Direct3D11.ComputeShader,SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Assigns a compute shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the compute shader.</param>
            <param name="classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShaderWrapper.Set(SlimDX.Direct3D11.ComputeShader)">
            <summary>
Assigns a compute shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the compute shader.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.ComputeShaderWrapper">
            <summary>
Defines a wrapper for compute shader related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.SetShaderResources(SlimDX.Direct3D11.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Sets the shader resources used by the hull shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting shader resources.</param>
            <param name="count">Number of resources from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.SetShaderResource(SlimDX.Direct3D11.ShaderResourceView,System.Int32)">
            <summary>
Sets a single shader resource to be used by the hull shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.SetSamplers(SlimDX.Direct3D11.SamplerState[],System.Int32,System.Int32)">
            <summary>
Sets the sampler states used by the hull shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting samplers.</param>
            <param name="count">Number of samplers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.SetSampler(SlimDX.Direct3D11.SamplerState,System.Int32)">
            <summary>
Sets a single sampler to be used by the hull shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the sampler.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.SetConstantBuffers(SlimDX.Direct3D11.Buffer[],System.Int32,System.Int32)">
            <summary>
Sets the constant buffers used by the hull shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting constant buffers.</param>
            <param name="count">Number of buffers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.SetConstantBuffer(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Sets a single constant buffer to be used by the hull shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the constant buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.GetShaderResources(System.Int32,System.Int32)">
            <summary>
Gets the shader resources used by the hull shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name="count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.GetSamplers(System.Int32,System.Int32)">
            <summary>
Gets the sampler states used by the hull shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name="count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
Gets the constant buffers used by the hull shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name="count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.Get(SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Gets the hull shader currently assigned to the device.
</summary>
            <param name="classInstances">An array that will be used to contain any class instances currently active.</param>
            <returns>The hull shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.Get">
            <summary>
Gets the hull shader currently assigned to the device.
</summary>
            <returns>The hull shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.Set(SlimDX.Direct3D11.HullShader,SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Assigns a hull shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the hull shader.</param>
            <param name="classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.HullShaderWrapper.Set(SlimDX.Direct3D11.HullShader)">
            <summary>
Assigns a hull shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the hull shader.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.HullShaderWrapper">
            <summary>
Defines a wrapper for hull shader related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.SetShaderResources(SlimDX.Direct3D11.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Sets the shader resources used by the geometry shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting shader resources.</param>
            <param name="count">Number of resources from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.SetShaderResource(SlimDX.Direct3D11.ShaderResourceView,System.Int32)">
            <summary>
Sets a single shader resource to be used by the geometry shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.SetSamplers(SlimDX.Direct3D11.SamplerState[],System.Int32,System.Int32)">
            <summary>
Sets the sampler states used by the geometry shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting samplers.</param>
            <param name="count">Number of samplers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.SetSampler(SlimDX.Direct3D11.SamplerState,System.Int32)">
            <summary>
Sets a single sampler to be used by the geometry shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the sampler.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.SetConstantBuffers(SlimDX.Direct3D11.Buffer[],System.Int32,System.Int32)">
            <summary>
Sets the constant buffers used by the geometry shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting constant buffers.</param>
            <param name="count">Number of buffers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.SetConstantBuffer(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Sets a single constant buffer to be used by the geometry shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the constant buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.GetShaderResources(System.Int32,System.Int32)">
            <summary>
Gets the shader resources used by the geometry shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name="count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.GetSamplers(System.Int32,System.Int32)">
            <summary>
Gets the sampler states used by the geometry shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name="count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
Gets the constant buffers used by the geometry shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name="count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.Get(SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Gets the geometry shader currently assigned to the device.
</summary>
            <param name="classInstances">An array that will be used to contain any class instances currently active.</param>
            <returns>The geometry shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.Get">
            <summary>
Gets the geometry shader currently assigned to the device.
</summary>
            <returns>The geometry shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.Set(SlimDX.Direct3D11.GeometryShader,SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Assigns a geometry shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the geometry shader.</param>
            <param name="classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShaderWrapper.Set(SlimDX.Direct3D11.GeometryShader)">
            <summary>
Assigns a geometry shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign null to disable the geometry shader.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.GeometryShaderWrapper">
            <summary>
Defines a wrapper for geometry shader related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.SetShaderResources(SlimDX.Direct3D11.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Sets the shader resources used by the pixel shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting shader resources.</param>
            <param name="count">Number of resources from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.SetShaderResource(SlimDX.Direct3D11.ShaderResourceView,System.Int32)">
            <summary>
Sets a single shader resource to be used by the pixel shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.SetSamplers(SlimDX.Direct3D11.SamplerState[],System.Int32,System.Int32)">
            <summary>
Sets the sampler states used by the pixel shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting samplers.</param>
            <param name="count">Number of samplers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.SetSampler(SlimDX.Direct3D11.SamplerState,System.Int32)">
            <summary>
Sets a single sampler to be used by the pixel shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the sampler.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.SetConstantBuffers(SlimDX.Direct3D11.Buffer[],System.Int32,System.Int32)">
            <summary>
Sets the constant buffers used by the pixel shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting constant buffers.</param>
            <param name="count">Number of buffers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.SetConstantBuffer(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Sets a single constant buffer to be used by the pixel shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the constant buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.GetShaderResources(System.Int32,System.Int32)">
            <summary>
Gets the shader resources used by the pixel shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name="count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.GetSamplers(System.Int32,System.Int32)">
            <summary>
Gets the sampler states used by the pixel shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name="count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
Gets the constant buffers used by the pixel shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name="count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.Get(SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Gets the pixel shader currently assigned to the device.
</summary>
            <param name="classInstances">An array that will be used to contain any class instances currently active.</param>
            <returns>The pixel shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.Get">
            <summary>
Gets the pixel shader currently assigned to the device.
</summary>
            <returns>The pixel shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.Set(SlimDX.Direct3D11.PixelShader,SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Assigns a pixel shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the pixel shader.</param>
            <param name="classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.PixelShaderWrapper.Set(SlimDX.Direct3D11.PixelShader)">
            <summary>
Assigns a pixel shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign null to disable the pixel shader.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.PixelShaderWrapper">
            <summary>
Defines a wrapper for pixel shader related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.SetShaderResources(SlimDX.Direct3D11.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Sets the shader resources used by the vertex shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting shader resources.</param>
            <param name="count">Number of resources from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.SetShaderResource(SlimDX.Direct3D11.ShaderResourceView,System.Int32)">
            <summary>
Sets a single shader resource to be used by the vertex shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.SetSamplers(SlimDX.Direct3D11.SamplerState[],System.Int32,System.Int32)">
            <summary>
Sets the sampler states used by the vertex shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting samplers.</param>
            <param name="count">Number of samplers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.SetSampler(SlimDX.Direct3D11.SamplerState,System.Int32)">
            <summary>
Sets a single sampler to be used by the vertex shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the sampler.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.SetConstantBuffers(SlimDX.Direct3D11.Buffer[],System.Int32,System.Int32)">
            <summary>
Sets the constant buffers used by the vertex shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting constant buffers.</param>
            <param name="count">Number of buffers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.SetConstantBuffer(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Sets a single constant buffer to be used by the vertex shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the constant buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.GetShaderResources(System.Int32,System.Int32)">
            <summary>
Gets the shader resources used by the vertex shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name="count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.GetSamplers(System.Int32,System.Int32)">
            <summary>
Gets the sampler states used by the vertex shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name="count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
Gets the constant buffers used by the vertex shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name="count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.Get(SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Gets the vertex shader currently assigned to the device.
</summary>
            <param name="classInstances">An array that will be used to contain any class instances currently active.</param>
            <returns>The vertex shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.Get">
            <summary>
Gets the vertex shader currently assigned to the device.
</summary>
            <returns>The vertex shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.Set(SlimDX.Direct3D11.VertexShader,SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Assigns a vertex shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the vertex shader.</param>
            <param name="classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShaderWrapper.Set(SlimDX.Direct3D11.VertexShader)">
            <summary>
Assigns a vertex shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign null to disable the vertex shader.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.VertexShaderWrapper">
            <summary>
Defines a wrapper for vertex shader related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerWrapper.GetScissorRectangles">
            <summary>
Gets the set of scissor rectangles currently bound to the rasterizer stage.
</summary>
            <returns>An array of bound scissor rectangles.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerWrapper.GetScissorRectangles(System.Drawing.Rectangle[])">
            <summary>
Gets the set of scissor rectangles currently bound to the rasterizer stage.
</summary>
            <param name="scissorRectangles">The array to fill with the bound scissor rectangles.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerWrapper.SetScissorRectangles(System.Drawing.Rectangle[])">
            <summary>
Binds a set of scissor rectangles to the rasterizer stage.
</summary>
            <param name="scissorRectangles">The set of scissor rectangles to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerWrapper.SetScissorRectangles(System.Drawing.Rectangle)">
            <summary>
Binds a single scissor rectangle to the rasterizer stage.
</summary>
            <param name="scissorRectangle">The scissor rectangle to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerWrapper.GetViewports">
            <summary>
Gets the set of viewports currently bound to the rasterizer stage.
</summary>
            <returns>An array of bound viewports.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerWrapper.GetViewports(SlimDX.Direct3D11.Viewport[])">
            <summary>
Gets the set of viewports currently bound to the rasterizer stage.
</summary>
            <param name="viewports">The array to fill with the bound viewports.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerWrapper.SetViewports(SlimDX.Direct3D11.Viewport[])">
            <summary>
Binds a set of viewports to the rasterizer stage.
</summary>
            <param name="viewports">The set of viewports to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.RasterizerWrapper.SetViewports(SlimDX.Direct3D11.Viewport)">
            <summary>
Binds a single viewport to the rasterizer stage.
</summary>
            <param name="viewport">The viewport to bind.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.RasterizerWrapper.State">
            <summary>
Gets or sets the rasterizer state for the rasterizer stage of the pipeline.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.RasterizerWrapper">
            <summary>
Defines a wrapper for rasterizer related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputWrapper.GetTargets(System.Int32)">
            <summary>
Gets the target output buffers currently set for the stream-output stage.
</summary>
            <param name="count">The number of targets to retrieve.</param>
            <returns>An array of stream output target buffers.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputWrapper.SetTargets(SlimDX.Direct3D11.StreamOutputBufferBinding[])">
            <summary>
Sets the target output buffers for the stream-output stage of the pipeline.
</summary>
            <param name="bufferBindings">A set of stream output buffer bindings to set.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.StreamOutputWrapper">
            <summary>
Defines a wrapper for stream-output related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.GetUnorderedAccessViews(System.Int32,System.Int32)">
            <summary>
Gets the set of currently bound unordered access views.
</summary>
            <param name="startSlot">Zero-based index of the first unordered access view to retrieve.</param>
            <param name="count">The number of views to retrieve.</param>
            <returns>An array of bound unordered access views.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.GetRenderTargets(System.Int32)">
            <summary>
Gets the set of currently bound render target views.
</summary>
            <param name="count">The number of render target views to retrieve.</param>
            <returns>An array of bound render target views.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.GetDepthStencilView">
            <summary>
Gets the currently bound depth-stencil view.
</summary>
            <returns>The currently bound depth-stencil view.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.DepthStencilView,System.Int32,SlimDX.Direct3D11.UnorderedAccessView[],System.Int32[],SlimDX.Direct3D11.RenderTargetView[])">
            <summary>
Binds a depth-stencil buffer, a set of unordered access views, and a set of render targets to the output-merger stage.
</summary>
            <param name="depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name="startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name="unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name="renderTargetViews">A set of render target views to bind.</param>
            <param name="initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(System.Int32,SlimDX.Direct3D11.UnorderedAccessView[],System.Int32[],SlimDX.Direct3D11.RenderTargetView[])">
            <summary>
Binds a set of unordered access views and a set of render targets to the output-merger stage.
</summary>
            <param name="startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name="unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name="renderTargetViews">A set of render target views to bind.</param>
            <param name="initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.DepthStencilView,SlimDX.Direct3D11.RenderTargetView,System.Int32,SlimDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>
Binds a depth-stencil buffer, a set of unordered access views, and a single render target to the output-merger stage.
</summary>
            <param name="depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name="startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name="unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name="renderTargetView">A view of the render target to bind.</param>
            <param name="initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.RenderTargetView,System.Int32,SlimDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>
Binds a set of unordered access views and a single render target to the output-merger stage.
</summary>
            <param name="startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name="unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name="renderTargetView">A view of the render target to bind.</param>
            <param name="initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.DepthStencilView,System.Int32,SlimDX.Direct3D11.UnorderedAccessView[],SlimDX.Direct3D11.RenderTargetView[])">
            <summary>
Binds a depth-stencil buffer, a set of unordered access views, and a set of render targets to the output-merger stage.
</summary>
            <param name="depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name="startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name="unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name="renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(System.Int32,SlimDX.Direct3D11.UnorderedAccessView[],SlimDX.Direct3D11.RenderTargetView[])">
            <summary>
Binds a set of unordered access views and a set of render targets to the output-merger stage.
</summary>
            <param name="startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name="unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name="renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.DepthStencilView,SlimDX.Direct3D11.RenderTargetView,System.Int32,SlimDX.Direct3D11.UnorderedAccessView[])">
            <summary>
Binds a depth-stencil buffer, a set of unordered access views, and a single render target to the output-merger stage.
</summary>
            <param name="depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name="startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name="unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name="renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.RenderTargetView,System.Int32,SlimDX.Direct3D11.UnorderedAccessView[])">
            <summary>
Binds a set of unordered access views and a single render target to the output-merger stage.
</summary>
            <param name="startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name="unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name="renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.DepthStencilView,SlimDX.Direct3D11.RenderTargetView[])">
            <summary>
Binds a depth-stencil buffer and a set of render targets to the output-merger stage.
</summary>
            <param name="depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name="renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.RenderTargetView[])">
            <summary>
Binds a set of render targets to the output-merger stage.
</summary>
            <param name="renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.DepthStencilView,SlimDX.Direct3D11.RenderTargetView)">
            <summary>
Binds a depth-stencil buffer and a single render target to the output-merger stage.
</summary>
            <param name="depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name="renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.OutputMergerWrapper.SetTargets(SlimDX.Direct3D11.RenderTargetView)">
            <summary>
Binds a single render target to the output-merger stage.
</summary>
            <param name="renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.OutputMergerWrapper.BlendSampleMask">
            <summary>
Gets or sets the blending mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.OutputMergerWrapper.BlendFactor">
            <summary>
Gets or sets the blend factor color.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.OutputMergerWrapper.BlendState">
            <summary>
Gets or sets the blend state of the output-merger stage.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.OutputMergerWrapper.DepthStencilReference">
            <summary>
Gets or sets the depth-stencil reference value.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.OutputMergerWrapper.DepthStencilState">
            <summary>
Gets the depth-stencil state of the output-merger stage.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.OutputMergerWrapper">
            <summary>
Defines a wrapper for output-merger related commands on the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.CommandList.ContextFlags">
            <summary>
Gets the initialization flags used to create the associated device context.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.CommandList">
            <summary>
Encapsulates a list of graphics commands for future play back.
</summary>
            <unmanaged>ID3D11CommandList</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectResourceVariable.SetResourceArray(SlimDX.Direct3D11.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Sets an array of shader resource values.
</summary>
            <param name="views">An array of resource views to set.</param>
            <param name="offset">The offset into the array to begin setting values.</param>
            <param name="count">The number of values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectResourceVariable.SetResourceArray(SlimDX.Direct3D11.ShaderResourceView[])">
            <summary>
Sets an array of shader resource values.
</summary>
            <param name="views">An array of resource views to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectResourceVariable.SetResource(SlimDX.Direct3D11.ShaderResourceView)">
            <summary>
Sets the value of the shader resource.
</summary>
            <param name="view">A view of the resource to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectResourceVariable.GetResourceArray(SlimDX.Direct3D11.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Gets an array of resource views from the variable.
</summary>
            <param name="views">An array of resource views to hold the retrieved shader resources.</param>
            <param name="offset">The offset into the array to begin storing values.</param>
            <param name="count">The number of values to get.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectResourceVariable.GetResourceArray(SlimDX.Direct3D11.ShaderResourceView[])">
            <summary>
Gets an array of resource views from the variable.
</summary>
            <param name="views">An array of resource views to hold the retrieved shader resources.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectResourceVariable.GetResource">
            <summary>
Gets the value of the variable.
</summary>
            <returns>A view of the shader resource.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectResourceVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectResourceVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectResourceVariable">
            <summary>
Represents a shader resource effect variable.
</summary>
            <unmanaged>ID3DX11EffectShaderResourceVariable</unmanaged>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.ThresholdMin">
            <summary>
Minimum point at which compression begins, in decibels, in decibels (dB).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.ThresholdMax">
            <summary>
Maximum point at which compression begins, in decibels, in decibels (dB). 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.ThresholdDefault">
            <summary>
Default point at which compression begins, in decibels, in decibels (dB). The default value is -20 dB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.ReleaseMin">
            <summary>
Minimum speed at which compression is stopped after input drops below Threshold, in miliseconds. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.ReleaseMax">
            <summary>
Maximum speed at which compression is stopped after input drops below Threshold, in miliseconds. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.ReleaseDefault">
            <summary>
Default speed at which compression is stopped after input drops below Threshold, in miliseconds. The default value is 200 ms.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.RatioMin">
            <summary>
Minimum compression ratio. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.RatioMax">
            <summary>
Maximum compression ratio.  
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.RatioDefault">
            <summary>
Default compression ratio. The default value is 3, which means 3:1 compression. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.PreDelayMin">
            <summary>
Minimum time after threshold is reached before attack phase is started, in milliseconds. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.PreDelayMax">
            <summary>
Maximum time after threshold is reached before attack phase is started, in milliseconds. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.PreDelayDefault">
            <summary>
Default time after threshold is reached before attack phase is started, in milliseconds. The default value is 4 ms. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.GainMin">
            <summary>
Minimum output gain of signal after compression, in decibels (dB). 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.GainMax">
            <summary>
Maximum output gain of signal after compression, in decibels (dB). 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.GainDefault">
            <summary>
Default output gain of signal after compression, in decibels (dB). The default value is 0 dB. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.AttackMin">
            <summary>
Minimum time before compression reaches its full value, in decibels (dB).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.AttackMax">
            <summary>
Maximum time before compression reaches its full value, in decibels (dB).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CompressorEffect.AttackDefault">
            <summary>
Default time before compression reaches its full value, in decibels (dB). The default value is 10 ms.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CompressorEffect.Threshold">
            <summary>
Point at which compression begins, in decibels.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CompressorEffect.Ratio">
            <summary>
Compression ratio. The default value is 3, which means 3:1 compression.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CompressorEffect.PreDelay">
            <summary>
Time after Threshold is reached before attack phase is started, in milliseconds.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CompressorEffect.Release">
            <summary>
Speed at which compression is stopped after input drops below Threshold.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CompressorEffect.Gain">
            <summary>
Output gain of signal after compression.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CompressorEffect.Attack">
            <summary>
Time before compression reaches its full value.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.CompressorEffect">
            <summary>
The SoundEffectCompressor object is used to set and retrieve effect parameters on a buffer that supports compression.
</summary>
            <unmanaged>IDirectSoundFXCompressor</unmanaged>
        </member>
        <member name="M:SlimDX.Half3.Equals(SlimDX.Half3@,SlimDX.Half3@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half3.Equals(SlimDX.Half3)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Half3.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Half3.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Half3.op_Inequality(SlimDX.Half3,SlimDX.Half3)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half3.op_Equality(SlimDX.Half3,SlimDX.Half3)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half3.#ctor(SlimDX.Half,SlimDX.Half,SlimDX.Half)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Half3" /> structure.
</summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="M:SlimDX.Half3.#ctor(SlimDX.Half)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Half3" /> structure.
</summary>
            <param name="value">The value to set for the X, Y, and Z components.</param>
        </member>
        <member name="F:SlimDX.Half3.Z">
            <summary>
Gets or sets the Z component of the vector.
</summary>
            <value>The Z component of the vector.</value>
        </member>
        <member name="F:SlimDX.Half3.Y">
            <summary>
Gets or sets the Y component of the vector.
</summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="F:SlimDX.Half3.X">
            <summary>
Gets or sets the X component of the vector.
</summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="T:SlimDX.Half3">
            <summary>
Defines a three component vector, using half precision floating point coordinates.
</summary>
            <unmanaged>D3DXVECTOR3_16F</unmanaged>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System.ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System.Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half3Converter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.Half3Converter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.Half3Converter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Half3" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.SegmentedScan.PerformSegmentedScan(SlimDX.Direct3D11.ScanDataType,SlimDX.Direct3D11.ScanOpCode,System.Int32,SlimDX.Direct3D11.UnorderedAccessView,SlimDX.Direct3D11.UnorderedAccessView,SlimDX.Direct3D11.UnorderedAccessView)">
            <summary>
Performs a segmented scan of a sequence.
</summary>
            <param name="elementType">The type of element in the sequence.</param>
            <param name="operation">The binary operation to perform.</param>
            <param name="elementCount">Size of scan in elements.</param>
            <param name="source">Input sequence on the device. Set <paramref name="source" /> and <paramref name="destination" /> to the same value for in-place scans.</param>
            <param name="elementFlags">Compact array of bits with one bit per element of <paramref name="source" />. A set value indicates the start of a new segment.</param>
            <param name="destination">Output sequence on the device.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.SegmentedScan.SetScanDirection(SlimDX.Direct3D11.ScanDirection)">
            <summary>
Sets the scan direction.
</summary>
            <param name="direction">The direction in which to perform the scans.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.SegmentedScan.#ctor(SlimDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.SegmentedScan" /> class.
</summary>
            <param name="deviceContext">The device context with which to associate the scan object.</param>
            <param name="maxElementScanSize">Maximum single scan size, in elements.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.SegmentedScan">
            <summary>
Represents a segmented scan context.
</summary>
            <unmanaged>ID3DX11SegmentedScan</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.Equals(SlimDX.Direct3D11.Viewport@,SlimDX.Direct3D11.Viewport@)">
            <summary>
Returns a value indicating whether the two viewports are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.Equals(SlimDX.Direct3D11.Viewport)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.Viewport" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed floateger hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.ToString">
            <summary>
Converts the value of the viewport to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.op_Inequality(SlimDX.Direct3D11.Viewport,SlimDX.Direct3D11.Viewport)">
            <summary>
Tests for inequality between two viewports.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.op_Equality(SlimDX.Direct3D11.Viewport,SlimDX.Direct3D11.Viewport)">
            <summary>
Tests for equality between two viewports.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Viewport" /> structure.
</summary>
            <param name="x">The X coordinate of the viewport.</param>
            <param name="y">The Y coordinate of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
            <param name="minZ">The minimum Z distance of the viewport.</param>
            <param name="maxZ">The maximum Z distance of the viewport.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Viewport.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Viewport" /> structure.
</summary>
            <param name="x">The X coordinate of the viewport.</param>
            <param name="y">The Y coordinate of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.Viewport.MaxZ">
            <summary>
Gets or sets the viewport's maximum Z depth.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Viewport.MinZ">
            <summary>
Gets or sets the viewport's minimum Z depth.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Viewport.Height">
            <summary>
Gets or sets the viewport's height.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Viewport.Width">
            <summary>
Gets or sets the viewport's width.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Viewport.Y">
            <summary>
Gets or sets the viewport's Y position.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Viewport.X">
            <summary>
Gets or sets the viewport's X position.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Viewport">
            <summary>
Defines a rectangular region of a render-target surface onto which 3D rendering is projected.
</summary>
            <unmanaged>D3D11_VIEWPORT</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputStatistics.Equals(SlimDX.Direct3D11.StreamOutputStatistics@,SlimDX.Direct3D11.StreamOutputStatistics@)">
            <summary>
Returns a value indicating whether the two BufferDescriptions are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputStatistics.Equals(SlimDX.Direct3D11.StreamOutputStatistics)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.StreamOutputStatistics" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputStatistics.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputStatistics.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputStatistics.op_Inequality(SlimDX.Direct3D11.StreamOutputStatistics,SlimDX.Direct3D11.StreamOutputStatistics)">
            <summary>
Tests for inequality between two StreamOutputStatisticss.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputStatistics.op_Equality(SlimDX.Direct3D11.StreamOutputStatistics,SlimDX.Direct3D11.StreamOutputStatistics)">
            <summary>
Tests for equality between two StreamOutputStatisticss.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputStatistics.StorageNeeded">
            <summary>
Number of primitives that would have been written to the stream-output buffers if there had been enough space for them all.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputStatistics.PrimitivesWritten">
            <summary>
Number of primitives (that is, points, lines, and triangles) written to the stream-output buffers.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.StreamOutputStatistics">
            <summary>
Contains query information about the the amount of data streamed out to the stream-output buffers.
</summary>
            <unmanaged>D3D11_QUERY_DATA_SO_STATISTICS</unmanaged>
        </member>
        <member name="M:SlimDX.CompilationException.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.CompilationException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.CompilationException.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.CompilationException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.CompilationException.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.CompilationException" /> class.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TextureStoreInstructions">
            <summary>
Number of texture writes in a compute shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.InterlockedInstructions">
            <summary>
Number of interlocked instructions in a compute shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.BarrierInstructions">
            <summary>
Number of barrier instructions in a compute shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TessellatorDomain">
            <summary>
The tessellator domain.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.HullShaderPartitioning">
            <summary>
The tessellator partitioning mode.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.HullShaderOutputPrimitive">
            <summary>
The tessellator output-primitive type.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.ControlPoints">
            <summary>
Number of control points in the hull shader and domain shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.GeometryShaderInstanceCount">
            <summary>
Number of geometry shader instances.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.PatchConstantParameters">
            <summary>
Number of parameters in the patch-constant signature.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.InputPrimitive">
            <summary>
The geometry shader/hull shader input primitive.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.MaximumOutputVertexCount">
            <summary>
Geometry shader maximum output vertex count.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.GeometryShaderOutputTopology">
            <summary>
The output topology of the geometry shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.EmitInstructionCount">
            <summary>
Number of emit instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.CutInstructionCount">
            <summary>
Number of cut instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.ArrayInstructionCount">
            <summary>
Number of array instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.MacroInstructionCount">
            <summary>
Number of macro instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.DynamicFlowControlCount">
            <summary>
Number of dynamic flow control instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.StaticFlowControlCount">
            <summary>
Number of static flow control instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.UintInstructionCount">
            <summary>
Number of unsigned integer arithmetic instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.IntInstructionCount">
            <summary>
Number of signed integer arithmetic instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.FloatInstructionCount">
            <summary>
Number of floating point arithmetic instructions used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TextureGradientInstructions">
            <summary>
Number of texture gradient instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TextureBiasInstructions">
            <summary>
Number of texture bias instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TextureCompareInstructions">
            <summary>
Number of texture comparison instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TextureLoadInstructions">
            <summary>
Number of texture load instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TextureNormalInstructions">
            <summary>
Number of non-categorized texture instructions.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.DeclarationCount">
            <summary>
Number of declarations (input + output).
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.DefineCount">
            <summary>
Number of constant defines.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TempArrayCount">
            <summary>
Number of temporary arrays used.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.TempRegisterCount">
            <summary>
The number of temporary registers in the compiled shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.InstructionCount">
            <summary>
The number of intermediate-language instructions in the compiled shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.OutputParameters">
            <summary>
The number of parameters in the output signature.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.InputParameters">
            <summary>
The number of parameters in the input signature.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.BoundResources">
            <summary>
The number of resource (textures and buffers) bound to a shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.ConstantBuffers">
            <summary>
The number of shader-constant buffers.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.Flags">
            <summary>
Shader compilation/parse flags.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.Creator">
            <summary>
The name of the originator of the shader.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderDescription.Version">
            <summary>
Shader version type.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderDescription">
            <summary>
Provides a description for a shader.
</summary>
            <unmanaged>D3D11_SHADER_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.RenderToEnvironmentMapDescription">
            <summary>Describes an off-screen render target used by <see cref="T:SlimDX.Direct3D9.RenderToEnvironmentMap" /></summary>.
<unmanaged>D3DXRTE_DESC</unmanaged></member>
        <member name="M:SlimDX.Performance.SetRegion(SlimDX.Color4,System.String)">
            <summary>
Marks a series of frames with the specified color and name in the PIXRun file. 
This function is not currently supported by PIX.
</summary>
            <param name="color">Event color. This is the color used to display the event in the event view.</param>
            <param name="name">Event name.</param>
        </member>
        <member name="M:SlimDX.Performance.SetOptions(SlimDX.PerformanceOptions)">
            <summary>
Sets profiler options specified by the target platform.
</summary>
        </member>
        <member name="M:SlimDX.Performance.SetMarker(SlimDX.Color4,System.String)">
            <summary>
Marks an instantaneous event. PIX can use this event to trigger an action.
</summary>
            <param name="color">Event color. This is the color used to display the event in the event view.</param>
            <param name="name">Event name.</param>
        </member>
        <member name="M:SlimDX.Performance.QueryRepeatFrame">
            <summary>
Determined whether a performance profiler is requesting that the current frame be resubmitted to
Direct3D for performance analysis. This function is not currently supported by PIX.
</summary>
            <returns>
                <c>true</c> if the caller should repeate the same sequence of calls; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Performance.GetStatus">
            <summary>
Determines the current state of the profiler from the target program.
</summary>
            <returns>
                <c>true</c> when PIX is profiling the target program; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Performance.EndEvent">
            <summary>
Marks the end of a user-defined event. PIX can use this event to trigger an action.
</summary>
            <returns>
The zero-based level of the hierarchy in which the event is ending. If an error occurs,
the return value will be negative.
</returns>
        </member>
        <member name="M:SlimDX.Performance.BeginEvent(SlimDX.Color4,System.String)">
            <summary>
Marks the beginning of a user-defined event. PIX can use this event to trigger an action.
</summary>
            <param name="color">Event color. This is the color used to display the event in the event view.</param>
            <param name="name">Event name.</param>
            <returns>
The zero-based level of the hierarchy that this event is starting in. If an error occurs,
the return value will be negative.
</returns>
        </member>
        <member name="T:SlimDX.Performance">
            <summary>
Provides access to the Direct3D performance API, which allows applications to gather performance
data and integrate with PIX for Windows in order to perform detailed analysis.
</summary>
            <unmanaged>D3DPERF</unmanaged>
        </member>
        <member name="P:SlimDX.XInput.ResultCode.Failure">
            <summary>
Represents a generic failure result.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="aa378137">E_FAIL</unmanaged>
        </member>
        <member name="P:SlimDX.XInput.ResultCode.Success">
            <summary>
Represents the result of a successful operation.
</summary>
            <remarks>This is a successful result.</remarks>
            <unmanaged href="ms681382">ERROR_SUCCESS</unmanaged>
        </member>
        <member name="P:SlimDX.XInput.ResultCode.Empty">
            <summary>
Occurs when the result of an operation is an empty set.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="ms681387">ERROR_EMPTY</unmanaged>
        </member>
        <member name="P:SlimDX.XInput.ResultCode.NotConnected">
            <summary>
Occurs when the desired controller is not connected to the system.
</summary>
            <remarks>This is a failed result.</remarks>
            <unmanaged href="ms681383">ERROR_DEVICE_NOT_CONNECTED</unmanaged>
        </member>
        <member name="T:SlimDX.XInput.ResultCode">
            <summary>Defines result codes that are returned by XInput functions.</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.GeometryShaderWrapper.Get">
            <summary>
Gets the geometry shader assigned to the device.
</summary>
            <returns>The geometry shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.GeometryShaderWrapper.Set(SlimDX.Direct3D10.GeometryShader)">
            <summary>
Assigns a geometry shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign null to disable the geometry shader.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.PixelShaderWrapper.Get">
            <summary>
Gets the pixel shader assigned to the device.
</summary>
            <returns>The pixel shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.PixelShaderWrapper.Set(SlimDX.Direct3D10.PixelShader)">
            <summary>
Assigns a pixel shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign null to disable the pixel shader.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.Equals(SlimDX.Direct3D10.Viewport@,SlimDX.Direct3D10.Viewport@)">
            <summary>
Returns a value indicating whether the two viewports are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.Equals(SlimDX.Direct3D10.Viewport)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D10.Viewport" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.ToString">
            <summary>
Converts the value of the viewport to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.op_Inequality(SlimDX.Direct3D10.Viewport,SlimDX.Direct3D10.Viewport)">
            <summary>
Tests for inequality between two viewports.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.op_Equality(SlimDX.Direct3D10.Viewport,SlimDX.Direct3D10.Viewport)">
            <summary>
Tests for equality between two viewports.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Viewport" /> structure.
</summary>
            <param name="x">The X coordinate of the viewport.</param>
            <param name="y">The Y coordinate of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
            <param name="minZ">The minimum Z distance of the viewport.</param>
            <param name="maxZ">The maximum Z distance of the viewport.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Viewport.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Viewport" /> structure.
</summary>
            <param name="x">The X coordinate of the viewport.</param>
            <param name="y">The Y coordinate of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.Viewport.MaxZ">
            <summary>
Gets or sets the viewport's maximum Z depth.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Viewport.MinZ">
            <summary>
Gets or sets the viewport's minimum Z depth.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Viewport.Height">
            <summary>
Gets or sets the viewport's height.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Viewport.Width">
            <summary>
Gets or sets the viewport's width.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Viewport.Y">
            <summary>
Gets or sets the viewport's Y position.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Viewport.X">
            <summary>
Gets or sets the viewport's X position.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Viewport">
            <summary>
Defines a rectangular region of a render-target surface onto which 
a 3D rendering is projected.
</summary>
            <unmanaged>D3D10_VIEWPORT</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.Predicate.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.QueryDescription)">
            <summary>
Constructs a new Predicate object.
</summary>
            <param name="device">The device to associate the predicate with.</param>
            <param name="description">The query description.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Query.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.QueryDescription)">
            <summary>
Constructs a new Query object.
</summary>
            <param name="device">The device to associate the query with.</param>
            <param name="description">The query description.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.Query.Description">
            <summary>
Gets the query's description.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.Asynchronous.GetData(SlimDX.Direct3D10.AsynchronousFlags)">
            <summary>
Retrieves data from the GPU asychronously.
</summary>
            <param name="flags">Flags indicating how the data should be retrieved.</param>
            <returns>The data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Asynchronous.GetData">
            <summary>
Retrieves data from the GPU asychronously.
</summary>
            <returns>The data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Asynchronous.End">
            <summary>
Marks the end of a series of asynchronous commands.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.Asynchronous.Begin">
            <summary>
Marks the start of a series of asynchronous commands.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Asynchronous.IsDataAvailable">
            <summary>
Gets a value indicating whether or not data is available for consumption.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Asynchronous">
            <summary>
Base class for objects that perform asynchronous GPU data access.
</summary>
            <unmanaged>ID3D10Asynchronous</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10_1.Device1.CreateWithSwapChain(SlimDX.DXGI.Adapter,SlimDX.Direct3D10.DriverType,SlimDX.Direct3D10.DeviceCreationFlags,SlimDX.Direct3D10_1.FeatureLevel,SlimDX.DXGI.SwapChainDescription,SlimDX.Direct3D10_1.Device1@,SlimDX.DXGI.SwapChain@)">
            <summary>
Creates a new Direct3D 10.1 device and swap chain.
</summary>
            <param name="adapter">The display adapter to associate the device with when creating a hardware device.</param>
            <param name="driverType">The device driver type.</param>
            <param name="flags">Flags that indicate which device API layers to enable.</param>
            <param name="swapChainDescription">Swap chain properties.</param>
            <param name="device">The newly-created device.</param>
            <param name="swapChain">The newly-created swap chain.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10_1.Device1.#ctor(SlimDX.DXGI.Adapter,SlimDX.Direct3D10.DriverType,SlimDX.Direct3D10.DeviceCreationFlags,SlimDX.Direct3D10_1.FeatureLevel)">
            <summary>
Constructs a new Device object.
</summary>
            <param name="adapter">The display adapter to associate the device with when creating a hardware device.</param>
            <param name="driverType">The device driver type.</param>
            <param name="flags">Flags that indicate which device API layers to enable.</param>
        </member>
        <member name="M:SlimDX.Direct3D10_1.Device1.#ctor(SlimDX.Direct3D10.DriverType,SlimDX.Direct3D10.DeviceCreationFlags,SlimDX.Direct3D10_1.FeatureLevel)">
            <summary>
Constructs a new Device1 object.
</summary>
            <param name="driverType">The device driver type.</param>
            <param name="flags">Flags that indicate which device API layers to enable.</param>
        </member>
        <member name="M:SlimDX.Direct3D10_1.Device1.#ctor(SlimDX.Direct3D10.DeviceCreationFlags,SlimDX.Direct3D10_1.FeatureLevel)">
            <summary>
Constructs a new Device1 object.
</summary>
            <param name="flags">Flags that indicate which device API layers to enable.</param>
            <param name="hardwareLevel" />D
</member>
        <member name="T:SlimDX.Direct3D10_1.Device1">
            <summary>
A virtual adapter for performing rendering operations, using Direct3D 10.1.
</summary>
            <unmanaged>ID3D10Device1</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10_1.ShaderResourceViewDimension1">
            <summary>Identifies the type of the resource that will be viewed.</summary>
            <unmanaged>D3D10_1_SRV_DIMENSION</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10_1.FeatureLevel">
            <summary>
Specifies possible levels of hardware acceleration features.
</summary>
            <unmanaged>D3D10_FEATURE_LEVEL1</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderTypeDescription.Equals(SlimDX.D3DCompiler.ShaderTypeDescription@,SlimDX.D3DCompiler.ShaderTypeDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderTypeDescription.Equals(SlimDX.D3DCompiler.ShaderTypeDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderTypeDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderTypeDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderTypeDescription.op_Inequality(SlimDX.D3DCompiler.ShaderTypeDescription,SlimDX.D3DCompiler.ShaderTypeDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderTypeDescription.op_Equality(SlimDX.D3DCompiler.ShaderTypeDescription,SlimDX.D3DCompiler.ShaderTypeDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderTypeDescription.Offset">
            <summary>
Offset, in bytes, between the start of the parent structure and this variable.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderTypeDescription.Members">
            <summary>
Number of members in the structure; otherwise 0.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderTypeDescription.Elements">
            <summary>
Number of elements in an array; otherwise 0.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderTypeDescription.Columns">
            <summary>
Number of columns in a matrix. Otherwise a numeric type returns 1, any other type returns 0.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderTypeDescription.Rows">
            <summary>
Number of rows in a matrix. Otherwise a numeric type returns 1, any other type returns 0.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderTypeDescription.Type">
            <summary>
The variable type.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderTypeDescription.Class">
            <summary>
Identifies the variable class as one of scalar, vector, matrix or object.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderTypeDescription">
            <summary>
Describes a shader-variable type.
</summary>
            <unmanaged>D3D11_SHADER_TYPE_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterMetadata.Equals(SlimDX.Direct3D11.CounterMetadata@,SlimDX.Direct3D11.CounterMetadata@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterMetadata.Equals(SlimDX.Direct3D11.CounterMetadata)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterMetadata.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterMetadata.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterMetadata.op_Inequality(SlimDX.Direct3D11.CounterMetadata,SlimDX.Direct3D11.CounterMetadata)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterMetadata.op_Equality(SlimDX.Direct3D11.CounterMetadata,SlimDX.Direct3D11.CounterMetadata)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.CounterMetadata.Description">
            <summary>
A brief description of the counter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.CounterMetadata.Units">
            <summary>
The name of the units the counter measures.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.CounterMetadata.Name">
            <summary>
The name of the counter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.CounterMetadata.HardwareCounterCount">
            <summary>
The number of hardware counters needed for the desired counter type to be created. All instances of the same counter type use the same hardware counters.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.CounterMetadata.Type">
            <summary>
The data type of the counter.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.CounterMetadata">
            <summary>
Contains the results of a request for counter information.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterCapabilities.Equals(SlimDX.Direct3D11.CounterCapabilities@,SlimDX.Direct3D11.CounterCapabilities@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterCapabilities.Equals(SlimDX.Direct3D11.CounterCapabilities)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterCapabilities.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterCapabilities.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterCapabilities.op_Inequality(SlimDX.Direct3D11.CounterCapabilities,SlimDX.Direct3D11.CounterCapabilities)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.CounterCapabilities.op_Equality(SlimDX.Direct3D11.CounterCapabilities,SlimDX.Direct3D11.CounterCapabilities)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.CounterCapabilities.MaximumParallelUnits">
            <summary>
Number of detectable parallel units that the counter is able to discern. Values are 1 - 4.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.CounterCapabilities.MaximumSimultaneousCounters">
            <summary>
Number of counters that can be simultaneously supported.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.CounterCapabilities.LastDeviceDependentCounter">
            <summary>
The largest device-dependent counter ID that the device supports. If none are supported, this value will be 0.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.CounterCapabilities">
            <summary>
Contains information about the video card's performance counter capabilities.
</summary>
            <unmanaged>D3D11_COUNTER_INFO</unmanaged>
        </member>
        <member name="M:SlimDX.X3DAudio.Listener.Equals(SlimDX.X3DAudio.Listener,SlimDX.X3DAudio.Listener)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Listener.Equals(SlimDX.X3DAudio.Listener)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Listener.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Listener.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Listener.op_Inequality(SlimDX.X3DAudio.Listener,SlimDX.X3DAudio.Listener)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Listener.op_Equality(SlimDX.X3DAudio.Listener,SlimDX.X3DAudio.Listener)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Listener.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.X3DAudio.Listener" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Cone.Equals(SlimDX.X3DAudio.Cone,SlimDX.X3DAudio.Cone)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Cone.Equals(SlimDX.X3DAudio.Cone)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Cone.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Cone.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Cone.op_Inequality(SlimDX.X3DAudio.Cone,SlimDX.X3DAudio.Cone)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Cone.op_Equality(SlimDX.X3DAudio.Cone,SlimDX.X3DAudio.Cone)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.X3DAudio.Cone.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.X3DAudio.Cone" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.BlendState.FromDescription(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.BlendStateDescription)">
            <summary>
Constructs a new BlendState based on the specified description. If the description
is identical to that of an existing BlendState object, the existing BlendState object
is returned instead of a new instance.
</summary>
            <param name="device">The device to associate the state object with</param>
            <param name="description">The state description.</param>
            <returns>The BlendState object.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10.BlendState.Description">
            <summary>
Gets the state's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.BlendState">
            <summary>
A state object defining the behavior of the pixel-blending stage of the output merger. 
</summary>
            <unmanaged>ID3D10BlendState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.UnorderedAccessViewDescription.Equals(SlimDX.Direct3D11.UnorderedAccessViewDescription@,SlimDX.Direct3D11.UnorderedAccessViewDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.UnorderedAccessViewDescription.Equals(SlimDX.Direct3D11.UnorderedAccessViewDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.UnorderedAccessViewDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.UnorderedAccessViewDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.UnorderedAccessViewDescription.op_Inequality(SlimDX.Direct3D11.UnorderedAccessViewDescription,SlimDX.Direct3D11.UnorderedAccessViewDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.UnorderedAccessViewDescription.op_Equality(SlimDX.Direct3D11.UnorderedAccessViewDescription,SlimDX.Direct3D11.UnorderedAccessViewDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.DepthSliceCount">
            <summary>
The number of depth slices.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.FirstDepthSlice">
            <summary>
The zero-based index of the first depth slice to be accessed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.ArraySize">
            <summary>
The number of slices in the array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.FirstArraySlice">
            <summary>
The zero-based index of the first array slice to be accessed. 
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.MipSlice">
            <summary>
The mipmap slice index.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.Flags">
            <summary>
View options for the resource.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.ElementCount">
            <summary>
The number of elements in the resource. For structured buffers, this is the number of structures in the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.FirstElement">
            <summary>
The zero-based index of the first element to be accessed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.Dimension">
            <summary>
The resource type, which specifies how the resource will be accessed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessViewDescription.Format">
            <summary>
The format of the data in the unordered access buffer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.UnorderedAccessViewDescription">
            <summary>
Provides a description for an unordered access view.
</summary>
            <unmanaged>D3D11_SHADER_RESOURCE_VIEW_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.FresnelTerm(System.Single,System.Single)">
            <unmanaged>D3DXFresnelTerm</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.CheckVersion">
            <summary>
Verifies that the compiled version of D3DX matches the runtime version of D3DX.
</summary>
            <returns>
                <c>true</c> if the versions match; otherwise, <c>false</c>.</returns>
            <unmanaged>D3DXCheckVersion</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.OptimizeVertices(System.Int16[],System.Int32,System.Int32)">
            <summary>Generates an optimized vertex remapping for a triangle list. </summary>
            <unmanaged>D3DXOptimizeFaces</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.OptimizeVertices(System.Int32[],System.Int32,System.Int32)">
            <summary>Generates an optimized vertex remapping for a triangle list. </summary>
            <unmanaged>D3DXOptimizeFaces</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.OptimizeFaces(System.Int16[],System.Int32,System.Int32)">
            <summary>Generates an optimized face remapping for a triangle list.</summary>
            <unmanaged>D3DXOptimizeFaces</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.OptimizeFaces(System.Int32[],System.Int32,System.Int32)">
            <summary>Generates an optimized face remapping for a triangle list.</summary>
            <unmanaged>D3DXOptimizeFaces</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.DebugMute(System.Boolean)">
            <summary>Turns on or off all D3DX debug output.</summary>
            <unmanaged>D3DXDebugMute</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.MakeFourCC(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>Generates a FOURCC Format code from the provided bytes.</summary>
            <unmanaged>MAKEFOURCC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.GetTrianglePatchSize(System.Single,System.Int32@,System.Int32@)">
            <summary>Gets the size of the triangle patch.</summary>
            <unmanaged>D3DXTriPatchSize</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.GetRectanglePatchSize(System.Single,System.Int32@,System.Int32@)">
            <summary>Gets the size of the rectangle patch.</summary>
            <unmanaged>D3DXRectPatchSize</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.GetDeclarationLength(SlimDX.Direct3D9.VertexElement[])">
            <summary>Returns the number of elements in the vertex declaration.</summary>
            <unmanaged>D3DXGetDeclLength</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.GenerateOutputDeclaration(SlimDX.Direct3D9.VertexElement[])">
            <summary>
Generates an output vertex declaration from the input declaration.
The output declaration is intended for use by the mesh tessellation functions.
</summary>
            <unmanaged>D3DXGenerateOutputDecl</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.FVFFromDeclarator(SlimDX.Direct3D9.VertexElement[])">
            <summary>
Retrieves a Flexible Vertex Format (FVF) code from a declarator.
</summary>
            <unmanaged>D3DXFVFFromDeclarator</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.DeclaratorFromFVF(SlimDX.Direct3D9.VertexFormat)">
            <summary>
Retrieves a declarator from a Flexible Vertex Format (FVF) code.
</summary>
            <unmanaged>D3DXDeclaratorFromFVF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.GetFVFVertexSize(SlimDX.Direct3D9.VertexFormat)">
            <unmanaged>D3DXGetFVFVertexSize</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.D3DX.GetDeclarationVertexSize(SlimDX.Direct3D9.VertexElement[],System.Int32)">
            <summary />
            <unmanaged>D3DXGetDeclVertexSize</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.D3DX.FormatFromFile">
            <summary>
Indicates that the method should format from file.
</summary>
            <unmanaged>D3DFMT_FROM_FILE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.D3DX.FromFile">
            <summary>
Indicates that the method should load from file.
</summary>
            <unmanaged>D3DX_FROM_FILE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.D3DX.DefaultNonPowerOf2">
            <summary>
The default value for non power-of-two textures.
</summary>
            <unmanaged>D3DX_DEFAULT_NONPOW2</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.D3DX.Default">
            <summary>
The value used to signify that the default value for a parameter should be used.
</summary>
            <unmanaged>D3DX_DEFAULT</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.D3DX">
            <summary>
Contains miscellaneous constants and methods for use with D3DX.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.Debug.ValidatePipelineState">
            <summary>
Validates the current pipeline state.
</summary>
            <returns>A Result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Debug.#ctor(SlimDX.Direct3D10.Device)">
            <summary>
Constructs a new Debug interface.
</summary>
            <param name="device">The Device with which the Debug interface is to be associated.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.Debug.SwapChain">
            <summary>
Gets or sets the swap chain the runtime will use for automatic presentation.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Debug.PresentDelay">
            <summary>
Gets or sets the number of milliseconds to delay after a swap chain is presented.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Debug.FeatureFlags">
            <summary>
Gets or sets the flags indicating which debug features are enabled.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Debug">
            <summary>
An interface for controlling debug state and validating pipeline settings.
</summary>
            <unmanaged>ID3D10Debug</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilState.FromDescription(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
Constructs a new DepthStencilState based on the specified description. If the description
is identical to that of an existing DepthStencilState object, the existing DepthStencilState object
is returned instead of a new instance.
</summary>
            <param name="device">The device to associate the state object with</param>
            <param name="description">The state description.</param>
            <returns>The DepthStencilState object.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilState.Description">
            <summary>
Gets the state's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DepthStencilState">
            <summary>
A state object defining the behavior of the depth and stencil test stages of the output merger. 
</summary>
            <unmanaged>ID3D11DepthStencilState</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.Device.QueryResourceResidency(System.Collections.Generic.IList`1{SlimDX.IComObject})">
            <summary>
Gets the residency status of a list of resources.
</summary>
            <param name="resources">The resources to query.</param>
            <returns>A list of residency status values, one for each entry in the input resources list.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Device.#ctor(SlimDX.IComObject)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.Device" /> class.
</summary>
            <param name="device">The COM object implementing the IDXGIDevice interface.</param>
        </member>
        <member name="P:SlimDX.DXGI.Device.Adapter">
            <summary>
Gets the adapter associated with the device.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.Device.GpuThreadPriority">
            <summary>
Gets or sets the device's GPU thread priority. Values range from -7 to 7, inclusive, with 0 being normal priority.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.Device">
            <summary>
Represents a base for objects that produces image data.
</summary>
            <unmanaged>IDXGIDevice</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.Optimize">
            <summary>
Minimize the amount of memory required for an effect by stripping effect metadata.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.Clone(System.Boolean)">
            <summary>
Creates a copy of the effect interface.
</summary>
            <param name="forceNonSingle">Indicates whether to ignore all "single" qualifiers on cbuffers. All cbuffers will have their own buffers created in the cloned effect.</param>
            <returns>The cloned effect.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.Clone">
            <summary>
Creates a copy of the effect interface.
</summary>
            <returns>The cloned effect.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetVariableBySemantic(System.String)">
            <summary>
Get a variable by semantic.
</summary>
            <param name="name">The semantic of the variable to retrieve.</param>
            <returns>The variable with the given semantic.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetVariableByName(System.String)">
            <summary>
Get a variable by name.
</summary>
            <param name="name">The name of the variable to retrieve.</param>
            <returns>The variable with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetVariableByIndex(System.Int32)">
            <summary>
Get a variable by index.
</summary>
            <param name="index">The zero-based index of the variable to retrieve.</param>
            <returns>The variable at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetGroupByName(System.String)">
            <summary>
Get an effect group by name.
</summary>
            <param name="name">The name of the effect group to retrieve.</param>
            <returns>The effect group with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetGroupByIndex(System.Int32)">
            <summary>
Get an effect group by index.
</summary>
            <param name="index">The zero-based index of the effect group to retrieve.</param>
            <returns>The effect group at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetTechniqueByName(System.String)">
            <summary>
Get a technique by name.
</summary>
            <param name="name">The name of the technique to retrieve.</param>
            <returns>The technique with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetTechniqueByIndex(System.Int32)">
            <summary>
Get a technique by index.
</summary>
            <param name="index">The zero-based index of the technique to retrieve.</param>
            <returns>The technique at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetConstantBufferByName(System.String)">
            <summary>
Get a constant buffer by name.
</summary>
            <param name="name">The name of the constant buffer to retrieve.</param>
            <returns>The constant buffer with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.GetConstantBufferByIndex(System.Int32)">
            <summary>
Get a constant buffer by index.
</summary>
            <param name="index">The zero-based index of the constant buffer to retrieve.</param>
            <returns>The constant buffer at the specified index.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.Effect.ClassLinkage">
            <summary>
Gets a class linkage interface for the effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Effect.Device">
            <summary>
Gets the device used to create the effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Effect.IsValid">
            <summary>
Indicates whether the effect contains valid syntax.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Effect.IsOptimized">
            <summary>
Indicates whether the effect reflection metadata has been removed from memory.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Effect.Description">
            <summary>
Gets the effect's description.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Effect.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Effect" /> class.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="data">The compiled effect source.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.Effect">
            <summary>
Manages a set of state objects, resources and shaders for implementing a rendering effect.
</summary>
            <unmanaged>ID3DX11Effect</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectGroup.Description">
            <summary>
Gets the effect group's description.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectGroup.IsValid">
            <summary>
Indicates whether the effect group represents a valid interface.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroup.GetTechniqueByName(System.String)">
            <summary>
Get a technique by name.
</summary>
            <param name="name">The name of the technique to retrieve.</param>
            <returns>The technique with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroup.GetTechniqueByIndex(System.Int32)">
            <summary>
Get a technique by index.
</summary>
            <param name="index">The zero-based index of the technique to retrieve.</param>
            <returns>The technique at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroup.GetAnnotationByName(System.String)">
            <summary>
Get an annotation by name.
</summary>
            <param name="name">The name of the annotation to retrieve.</param>
            <returns>The annotation with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroup.GetAnnotationByIndex(System.Int32)">
            <summary>
Get an annotation by index.
</summary>
            <param name="index">The zero-based index of the annotation to retrieve.</param>
            <returns>The annotation at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectGroup.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectGroup" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectGroup">
            <summary>
Represents an effect group.
</summary>
            <unmanaged>ID3DX11EffectGroup</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechnique.ComputeStateBlockMask">
            <summary>
Generate a mask for state changes during the technique.
</summary>
            <returns>The created state block mask.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechnique.GetPassByName(System.String)">
            <summary>
Get a pass by name.
</summary>
            <param name="name">The name of the pass to retrieve.</param>
            <returns>The pass with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechnique.GetPassByIndex(System.Int32)">
            <summary>
Get a pass by index.
</summary>
            <param name="index">The zero-based index of the pass to retrieve.</param>
            <returns>The pass at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechnique.GetAnnotationByName(System.String)">
            <summary>
Get an annotation by name.
</summary>
            <param name="name">The name of the annotation to retrieve.</param>
            <returns>The annotation with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechnique.GetAnnotationByIndex(System.Int32)">
            <summary>
Get an annotation by index.
</summary>
            <param name="index">The zero-based index of the annotation to retrieve.</param>
            <returns>The annotation at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTechnique.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectTechnique" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTechnique.IsValid">
            <summary>
Indicates whether the technique represents a valid interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTechnique.Description">
            <summary>
Gets the effect techniques's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectTechnique">
            <summary>
Represents an effect technique, which is a collection of rendering passes.
</summary>
            <unmanaged>ID3DX11EffectTechnique</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTypeDescription.Equals(SlimDX.Direct3D11.EffectTypeDescription@,SlimDX.Direct3D11.EffectTypeDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTypeDescription.Equals(SlimDX.Direct3D11.EffectTypeDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTypeDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTypeDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTypeDescription.op_Inequality(SlimDX.Direct3D11.EffectTypeDescription,SlimDX.Direct3D11.EffectTypeDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectTypeDescription.op_Equality(SlimDX.Direct3D11.EffectTypeDescription,SlimDX.Direct3D11.EffectTypeDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.Stride">
            <summary>
Number of bytes to seek between elements, when laid out in a constant buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.UnpackedSize">
            <summary>
Number of bytes occupied by this data type, when laid out in a constant buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.PackedSize">
            <summary>
Number of bytes required to represent this data type, when tightly packed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.Columns">
            <summary>
Number of columns in this type (0 if not a numeric primitive).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.Rows">
            <summary>
Number of rows in this type (0 if not a numeric primitive).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.Members">
            <summary>
Number of members (0 if not a structure).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.Elements">
            <summary>
Number of elements in this type (0 if not an array).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.Type">
            <summary>
The variable type.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.Class">
            <summary>
The variable class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectTypeDescription.TypeName">
            <summary>
Name of the type, for example "float4" or "MyStruct".
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectTypeDescription">
            <summary>
Provides a description for effect types.
</summary>
            <unmanaged>D3DX11_EFFECT_TYPE_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.QueryDescription.Equals(SlimDX.Direct3D11.QueryDescription@,SlimDX.Direct3D11.QueryDescription@)">
            <summary>
Returns a value indicating whether the two objects are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.QueryDescription.Equals(SlimDX.Direct3D11.QueryDescription)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.QueryDescription" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.QueryDescription.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.QueryDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.QueryDescription.op_Inequality(SlimDX.Direct3D11.QueryDescription,SlimDX.Direct3D11.QueryDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.QueryDescription.op_Equality(SlimDX.Direct3D11.QueryDescription,SlimDX.Direct3D11.QueryDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.QueryDescription.#ctor(SlimDX.Direct3D11.QueryType,SlimDX.Direct3D11.QueryFlags)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.QueryDescription" /> struct.
</summary>
            <param name="type">The query type.</param>
            <param name="flags">Query options.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.QueryDescription.Flags">
            <summary>
Gets or sets the query flags.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.QueryDescription.Type">
            <summary>
Gets or sets the query type.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.QueryDescription">
            <summary>
Describes a query object.
</summary>
            <unmanaged>D3D11_QUERY_DESC</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstance.TypeName">
            <summary>
Gets the name of the class's type.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstance.InstanceName">
            <summary>
Gets the instance name of the class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstance.Description">
            <summary>
Gets the description of the class instance.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ClassInstance.Linkage">
            <summary>
Gets the linkage object associated with the class.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassInstance.#ctor(SlimDX.Direct3D11.ClassLinkage,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.ClassInstance" /> class.
</summary>
            <param name="linkage">The linkage object used to create the class instance.</param>
            <param name="typeName">The type name of a class to initialize.</param>
            <param name="constantBufferOffset">Identifies the constant buffer that contains the class data.</param>
            <param name="constantVectorOffset">The four-component vector offset from the start of the constant buffer where the class data will begin. Consequently, this is not a byte offset.</param>
            <param name="textureOffset">The texture slot for the first texture; there may be multiple textures following the offset.</param>
            <param name="samplerOffset">The sampler slot for the first sampler; there may be multiple samplers following the offset.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.ClassInstance">
            <summary>
Represents an HLSL class.
</summary>
            <unmanaged>ID3D11ClassInstance</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.SetShaderResources(SlimDX.Direct3D11.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Sets the shader resources used by the domain shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting shader resources.</param>
            <param name="count">Number of resources from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.SetShaderResource(SlimDX.Direct3D11.ShaderResourceView,System.Int32)">
            <summary>
Sets a single shader resource to be used by the domain shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.SetSamplers(SlimDX.Direct3D11.SamplerState[],System.Int32,System.Int32)">
            <summary>
Sets the sampler states used by the domain shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting samplers.</param>
            <param name="count">Number of samplers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.SetSampler(SlimDX.Direct3D11.SamplerState,System.Int32)">
            <summary>
Sets a single sampler to be used by the domain shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the sampler.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.SetConstantBuffers(SlimDX.Direct3D11.Buffer[],System.Int32,System.Int32)">
            <summary>
Sets the constant buffers used by the domain shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array to which to begin setting constant buffers.</param>
            <param name="count">Number of buffers from the source array to set.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.SetConstantBuffer(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Sets a single constant buffer to be used by the domain shader stage.
</summary>
            <param name="slot">Index into the device's zero-based array to which to set the constant buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.GetShaderResources(System.Int32,System.Int32)">
            <summary>
Gets the shader resources used by the domain shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name="count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.GetSamplers(System.Int32,System.Int32)">
            <summary>
Gets the sampler states used by the domain shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name="count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
Gets the constant buffers used by the domain shader stage.
</summary>
            <param name="startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name="count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.Get(SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Gets the domain shader currently assigned to the device.
</summary>
            <param name="classInstances">An array that will be used to contain any class instances currently active.</param>
            <returns>The domain shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.Get">
            <summary>
Gets the domain shader currently assigned to the device.
</summary>
            <returns>The domain shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.Set(SlimDX.Direct3D11.DomainShader,SlimDX.Direct3D11.ClassInstance[])">
            <summary>
Assigns a domain shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the domain shader.</param>
            <param name="classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShaderWrapper.Set(SlimDX.Direct3D11.DomainShader)">
            <summary>
Assigns a domain shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign <c>null</c> to disable the domain shader.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.DomainShaderWrapper">
            <summary>
Defines a wrapper for domain shader related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.DefaultAllocateHierarchy.DestroyMeshContainer(SlimDX.Direct3D9.MeshContainer)">
            <summary>
Requests deallocation of a mesh container object.
</summary>
            <param name="container">The mesh container to be deallocated.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.DefaultAllocateHierarchy.DestroyFrame(SlimDX.Direct3D9.Frame)">
            <summary>
Requests deallocation of a frame object.
</summary>
            <param name="frame">The frame to be deallocated.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.DefaultAllocateHierarchy.CreateFrame(System.String)">
            <summary>
Requests the allocation of a frame object.
</summary>
            <param name="name">Name of the frame to be created.</param>
            <returns>The created frame object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DefaultAllocateHierarchy.CreateMeshContainer(System.String,SlimDX.Direct3D9.MeshData,SlimDX.Direct3D9.ExtendedMaterial[],SlimDX.Direct3D9.EffectInstance[],System.Int32[],SlimDX.Direct3D9.SkinInfo)">
            <summary>
Requests the allocation of a mesh container object.
</summary>
            <param name="name">Name of the mesh.</param>
            <param name="meshData">The actual mesh data.</param>
            <param name="materials">Set of materials used in the mesh.</param>
            <param name="effectInstances">Set of effects used in the mesh.</param>
            <param name="adjacency">Adjancey array used in the mesh.</param>
            <param name="skinInfo">Skin mesh object containing skin data.</param>
            <returns>The created mesh container.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.DefaultAllocateHierarchy.DefaultAllocator">
            <summary>
Gets a global instance of the default allocator.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.DefaultAllocateHierarchy.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.DefaultAllocateHierarchy" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DefaultAllocateHierarchy">
            <summary>
Defines a default allocator for frame and mesh container objects.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.GammaControl.ControlPoints">
            <summary>
Gets the list of RGB control points defining the gamma curve.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.GammaControl.Offset">
            <summary>
Gets or sets an offset applied to gamma RGB values.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.GammaControl.Scale">
            <summary>
Gets or sets a scaling factor applied to gamma RGB values.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.GammaControl.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.GammaControl" /> class.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.GammaControl">
            <summary>
Describes gamma control settings.
</summary>
            <unmanaged>DXGI_GAMMA_CONTROL</unmanaged>
        </member>
        <member name="M:SlimDX.Color3.Equals(SlimDX.Color3@,SlimDX.Color3@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Color3.Equals(SlimDX.Color3)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Color3.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Color3.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Color3.op_Inequality(SlimDX.Color3,SlimDX.Color3)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Color3.op_Equality(SlimDX.Color3,SlimDX.Color3)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Color3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Color3" /> structure.
</summary>
            <param name="red">The red component of the color.</param>
            <param name="green">The green component of the color.</param>
            <param name="blue">The blue component of the color.</param>
        </member>
        <member name="F:SlimDX.Color3.Blue">
            <summary>
Gets or sets the color's blue component.
</summary>
        </member>
        <member name="F:SlimDX.Color3.Green">
            <summary>
Gets or sets the color's green component.
</summary>
        </member>
        <member name="F:SlimDX.Color3.Red">
            <summary>
Gets or sets the color's red component.
</summary>
        </member>
        <member name="T:SlimDX.Color3">
            <summary>
A three-component (RGB) color value; each component is a float in the range [0,1].
</summary>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c></returns>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Color3Converter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.Color3Converter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.Color3Converter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Color3" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.Trimming.DelimiterCount">
            <summary>
How many occurrences of the delimiter to step back.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.Trimming.Delimiter">
            <summary>
Character code used as the delimiter signaling the beginning of the portion of text to be preserved,
most useful for path ellipsis, where the delimiter would be a slash.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.Trimming.Granularity">
            <summary>
Text granularity of which trimming applies.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.Trimming">
            <summary>
Specifies the trimming option for text overflowing the layout box.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.LineMetrics.IsTrimmed">
            <summary>
The line is trimmed.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.LineMetrics.Baseline">
            <summary>
The distance from the top of the text line to its baseline.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.LineMetrics.Height">
            <summary>
The height of the text line.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.LineMetrics.NewlineLength">
            <summary>
The number of characters in the newline sequence at the end of the text line. If the count is zero, then the text line was either wrapped or it is the end of the text.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.LineMetrics.TrailingWhitespaceLength">
            <summary>
The number of whitespace positions at the end of the text line. Newline sequences are considered whitespace.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.LineMetrics.Length">
            <summary>
The number of text positions in the text line. This includes any trailing whitespace and newline characters.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.LineMetrics">
            <summary>
Contains information about a formatted line of text.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.IsTrimmed">
            <summary>
true if the region is trimmed; otherwise, false.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.IsText">
            <summary>
true if the hit region contains text; otherwise, false.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.BidiLevel">
            <summary>
The BIDI level of the text positions within the hit region.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.Height">
            <summary>
The height of the hit region.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.Width">
            <summary>
The width of the hit region.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.Top">
            <summary>
The y-coordinate of the upper-left corner of the hit region.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.Left">
            <summary>
The x-coordinate of the upper-left corner of the hit region.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.Length">
            <summary>
The number of text positions within the hit region. 
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.HitTestMetrics.TextPosition">
            <summary>
The first text position within the hit region. 
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.HitTestMetrics">
            <summary>
Describes the region obtained by a hit test.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.ClusterMetrics.IsRightToLeft">
            <summary>
Indicates whether the cluster is read from right to left.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.ClusterMetrics.IsSoftHyphen">
            <summary>
Indicates whether the cluster corresponds to a soft hyphen character.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.ClusterMetrics.IsNewline">
            <summary>
Indicates whether the cluster corresponds to a newline character.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.ClusterMetrics.IsWhitespace">
            <summary>
Indicates whether the cluster corresponds to a whitespace character.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.ClusterMetrics.CanWrapLineAfter">
            <summary>
Indicates whether a line can be broken right after the cluster.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.ClusterMetrics.Length">
            <summary>
The number of text positions in the cluster.
</summary>
        </member>
        <member name="P:SlimDX.DirectWrite.ClusterMetrics.Width">
            <summary>
The total advance width of all glyphs in the cluster.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.ClusterMetrics">
            <summary>
Contains information about a glyph cluster.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.ClassLinkage)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.ComputeShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
            <param name="linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.ComputeShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.ComputeShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.ComputeShader">
            <summary>
Represents a compute shader.
</summary>
            <unmanaged>ID3D11ComputeShader</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.QueryDescription.Equals(SlimDX.Direct3D10.QueryDescription@,SlimDX.Direct3D10.QueryDescription@)">
            <summary>
Returns a value indicating whether the two BufferDescriptions are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.QueryDescription.Equals(SlimDX.Direct3D10.QueryDescription)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D10.QueryDescription" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.QueryDescription.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.QueryDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.QueryDescription.op_Inequality(SlimDX.Direct3D10.QueryDescription,SlimDX.Direct3D10.QueryDescription)">
            <summary>
Tests for inequality between two QueryDescriptions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.QueryDescription.op_Equality(SlimDX.Direct3D10.QueryDescription,SlimDX.Direct3D10.QueryDescription)">
            <summary>
Tests for equality between two QueryDescriptions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.QueryDescription.#ctor(SlimDX.Direct3D10.QueryType,SlimDX.Direct3D10.QueryFlags)">
            <summary>
Constructs a new QueryDescription object.
</summary>
            <param name="type">The query type.</param>
            <param name="flags">Query options.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.QueryDescription.Flags">
            <summary>
Gets or sets the query flags.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.QueryDescription.Type">
            <summary>
Gets or sets the query type.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.QueryDescription">
            <summary>
Describes a query object.
</summary>
            <unmanaged>D3D10_QUERY_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.Equals(SlimDX.Direct3D10_1.RenderTargetBlendDescription1@,SlimDX.Direct3D10_1.RenderTargetBlendDescription1@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.Equals(SlimDX.Direct3D10_1.RenderTargetBlendDescription1)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.op_Inequality(SlimDX.Direct3D10_1.RenderTargetBlendDescription1,SlimDX.Direct3D10_1.RenderTargetBlendDescription1)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.op_Equality(SlimDX.Direct3D10_1.RenderTargetBlendDescription1,SlimDX.Direct3D10_1.RenderTargetBlendDescription1)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.RenderTargetWriteMask">
            <summary>
A write mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.BlendOperationAlpha">
            <summary>
This <see cref="T:SlimDX.Direct3D10.BlendOperation" /> defines how to combine the alpha data sources.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.DestinationBlendAlpha">
            <summary>
This <see cref="T:SlimDX.Direct3D10.BlendOption" /> specifies the second alpha data source and includes an optional pre-blend operation. Blend options that end in "Color" are not allowed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.SourceBlendAlpha">
            <summary>
This <see cref="T:SlimDX.Direct3D10.BlendOption" /> specifies the first alpha data source and includes an optional pre-blend operation. Blend options that end in "Color" are not allowed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.BlendOperation">
            <summary>
This <see cref="T:SlimDX.Direct3D10.BlendOperation" /> defines how to combine the RGB data sources.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.DestinationBlend">
            <summary>
This <see cref="T:SlimDX.Direct3D10.BlendOption" /> specifies the second RGB data source and includes an optional pre-blend operation. 
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.SourceBlend">
            <summary>
This <see cref="T:SlimDX.Direct3D10.BlendOption" /> specifies the first RGB data source and includes an optional pre-blend operation. 
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10_1.RenderTargetBlendDescription1.BlendEnable">
            <summary>
Enables or disables blending on this render target.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Scan.PerformMultiscan(SlimDX.Direct3D11.ScanDataType,SlimDX.Direct3D11.ScanOpCode,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D11.UnorderedAccessView,SlimDX.Direct3D11.UnorderedAccessView)">
            <summary>
Performs a multiscan of a sequence.
</summary>
            <param name="elementType">The type of element in the sequence.</param>
            <param name="operation">The binary operation to perform.</param>
            <param name="elementCount">Size of scan in elements.</param>
            <param name="scanPitchInElements">Pitch of the next scan in elements.</param>
            <param name="scanCount">Number of scans in the multiscan.</param>
            <param name="source">Input sequence on the device. Set <paramref name="source" /> and <paramref name="destination" /> to the same value for in-place scans.</param>
            <param name="destination">Output sequence on the device.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Scan.PerformScan(SlimDX.Direct3D11.ScanDataType,SlimDX.Direct3D11.ScanOpCode,System.Int32,SlimDX.Direct3D11.UnorderedAccessView,SlimDX.Direct3D11.UnorderedAccessView)">
            <summary>
Performs an unsegmented scan of a sequence.
</summary>
            <param name="elementType">The type of element in the sequence.</param>
            <param name="operation">The binary operation to perform.</param>
            <param name="elementCount">Size of scan in elements.</param>
            <param name="source">Input sequence on the device. Set <paramref name="source" /> and <paramref name="destination" /> to the same value for in-place scans.</param>
            <param name="destination">Output sequence on the device.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Scan.SetScanDirection(SlimDX.Direct3D11.ScanDirection)">
            <summary>
Sets the scan direction.
</summary>
            <param name="direction">The direction in which to perform the scans.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Scan.#ctor(SlimDX.Direct3D11.DeviceContext,System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Scan" /> class.
</summary>
            <param name="deviceContext">The device context with which to associate the scan object.</param>
            <param name="maxElementScanSize">Maximum single scan size, in elements.</param>
            <param name="maxScanCount">Maximum number of scans in multiscan.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.Scan">
            <summary>
Represents a scan context.
</summary>
            <unmanaged>ID3DX11Scan</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.StreamOutputElement[],System.Int32[],System.Int32,SlimDX.Direct3D11.ClassLinkage)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.GeometryShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
            <param name="elements">An array of <see cref="T:SlimDX.Direct3D11.StreamOutputElement" /> instances describing the layout of the output buffers.</param>
            <param name="bufferedStrides">An array of buffer strides; each stride is the size of an element for that buffer.</param>
            <param name="rasterizedStream">The index number of the stream to be sent to the rasterizer stage. Set to NoRasterizedStream if no stream is to be rasterized.</param>
            <param name="linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.StreamOutputElement[],System.Int32[],System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.GeometryShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
            <param name="elements">An array of <see cref="T:SlimDX.Direct3D11.StreamOutputElement" /> instances describing the layout of the output buffers.</param>
            <param name="bufferedStrides">An array of buffer strides; each stride is the size of an element for that buffer.</param>
            <param name="rasterizedStream">The index number of the stream to be sent to the rasterizer stage. Set to NoRasterizedStream if no stream is to be rasterized.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.ClassLinkage)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.GeometryShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
            <param name="linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.GeometryShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.GeometryShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.GeometryShader">
            <summary>
Represents a geometry shader.
</summary>
            <unmanaged>ID3D11GeometryShader</unmanaged>
        </member>
        <member name="F:SlimDX.DirectSound.GargleEffect.RateMin">
            <summary>
Minimum rate of modulation, in Hertz.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.GargleEffect.RateMax">
            <summary>
Maximum rate of modulation, in Hertz.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.GargleEffect.RateDefault">
            <summary>
Default rate of modulation, in Hertz.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.GargleEffect.WaveShapeSquare">
            <summary>
Square shape of the modulation waveform.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.GargleEffect.WaveShapeTriangle">
            <summary>
Triangular shape of the modulation waveform.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.GargleEffect.WaveShapeDefault">
            <summary>
Default shape of the modulation waveform.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.GargleEffect.WaveShape">
            <summary>
Shape of the modulation waveform. By default the waveform is a triangle.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.GargleEffect.Rate">
            <summary>
Rate of modulation, in Hertz. The default value is 20.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.GargleEffect">
            <summary>
The SoundEffectGargle object is used to set and retrieve effect parameters on a buffer that supports amplitude modulation.
</summary>
            <unmanaged>IDirectSoundFXGargle</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable.SetViewArray(SlimDX.Direct3D11.UnorderedAccessView[],System.Int32,System.Int32)">
            <summary>
Sets the value of the variable.
</summary>
            <param name="views">An array of views to set.</param>
            <param name="offset">The offset into the array to begin setting values.</param>
            <param name="count">The number of values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable.SetViewArray(SlimDX.Direct3D11.UnorderedAccessView[])">
            <summary>
Sets the value of the variable.
</summary>
            <param name="views">An array of views to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable.SetView(SlimDX.Direct3D11.UnorderedAccessView)">
            <summary>
Sets the value of the variable.
</summary>
            <param name="view">The view of the unordered access resource to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable.GetViewArray(SlimDX.Direct3D11.UnorderedAccessView[],System.Int32,System.Int32)">
            <summary>
Gets an array of views of unordered access buffers from the variable.
</summary>
            <param name="views">An array of views to hold the retrieved values.</param>
            <param name="offset">The offset into the array to begin storing values.</param>
            <param name="count">The number of values to get.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable.GetViewArray(SlimDX.Direct3D11.UnorderedAccessView[])">
            <summary>
Gets an array of views of unordered access buffers from the variable.
</summary>
            <param name="views">An array of views to hold the retrieved values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable.GetView">
            <summary>
Gets the value of the variable.
</summary>
            <returns>The view of the unordered access variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectUnorderedAccessViewVariable">
            <summary>
Represents an unordered access buffer effect variable.
</summary>
            <unmanaged>ID3DX11EffectUnorderedAccessViewVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.UnorderedAccessView.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Resource,SlimDX.Direct3D11.UnorderedAccessViewDescription)">
            <summary>Creates a <see cref="T:SlimDX.Direct3D11.UnorderedAccessView" /> for accessing resource data.</summary>
            <param name="device">The device to use when creating this <see cref="T:SlimDX.Direct3D11.UnorderedAccessView" />.</param>
            <param name="resource">The resource that will serve as input to a shader.</param>
            <param name="description">A structure describing the <see cref="T:SlimDX.Direct3D11.UnorderedAccessView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateUnorderedAccessView</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.UnorderedAccessView.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Resource)">
            <summary>Creates a <see cref="T:SlimDX.Direct3D11.UnorderedAccessView" /> for accessing resource data.</summary>
            <param name="device">The device to use when creating this <see cref="T:SlimDX.Direct3D11.UnorderedAccessView" />.</param>
            <param name="resource">The resource that will serve as input to a shader.</param>
            <unmanaged>ID3D11Device::CreateUnorderedAccessView</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.UnorderedAccessView.Description">
            <summary>Gets a structure describing this <see cref="T:SlimDX.Direct3D11.UnorderedAccessView" />.</summary>
            <unmanaged>ID3D11UnorderedAccessView::GetDesc</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D11.UnorderedAccessView">
            <summary>Specifies the parts of a resource the pipeline can access during rendering.</summary>
            <unmanaged>ID3D11UnorderedAccessView</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceView.FromStream(SlimDX.Direct3D11.Device,System.IO.Stream,System.Int32,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Creates a shader resource view from a stream.
</summary>
            <param name="device">The device that will own the resource.</param>
            <param name="stream">The stream that contains the shader resource view.</param>
            <param name="sizeInBytes">Size of the shader resource, in bytes.</param>
            <param name="loadInfo">Identifies characteristics of the texture to be loaded.</param>
            <returns>The created resource view.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceView.FromStream(SlimDX.Direct3D11.Device,System.IO.Stream,System.Int32)">
            <summary>
Creates a shader resource view from a stream.
</summary>
            <param name="device">The device that will own the resource.</param>
            <param name="stream">The stream that contains the shader resource view.</param>
            <param name="sizeInBytes">Size of the shader resource, in bytes.</param>
            <returns>The created resource view.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceView.FromMemory(SlimDX.Direct3D11.Device,System.Byte[],SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Creates a shader resource view from memory.
</summary>
            <param name="device">The device that will own the resource.</param>
            <param name="memory">The block of memory that contains the shader resource view.</param>
            <param name="loadInfo">Identifies characteristics of the texture to be loaded.</param>
            <returns>The created resource view.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceView.FromMemory(SlimDX.Direct3D11.Device,System.Byte[])">
            <summary>
Creates a shader resource view from memory.
</summary>
            <param name="device">The device that will own the resource.</param>
            <param name="memory">The block of memory that contains the shader resource view.</param>
            <returns>The created resource view.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceView.FromFile(SlimDX.Direct3D11.Device,System.String,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Creates a shader resource view from a file.
</summary>
            <param name="device">The device that will own the resource.</param>
            <param name="fileName">The name of the file that contains the shader resource view.</param>
            <param name="loadInformation">Identifies characteristics of the texture to be loaded.</param>
            <returns>The created resource view.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceView.FromFile(SlimDX.Direct3D11.Device,System.String)">
            <summary>
Creates a shader resource view from a file.
</summary>
            <param name="device">The device that will own the resource.</param>
            <param name="fileName">The name of the file that contains the shader resource view.</param>
            <returns>The created resource view.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.ShaderResourceView.Description">
            <summary>Gets a structure describing this <see cref="T:SlimDX.Direct3D11.ShaderResourceView" />.</summary>
            <unmanaged>ID3D11ShaderResourceView::GetDesc</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceView.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Resource,SlimDX.Direct3D11.ShaderResourceViewDescription)">
            <summary>Creates a <see cref="T:SlimDX.Direct3D11.ShaderResourceView" /> for accessing resource data.</summary>
            <param name="device">The device to use when creating this <see cref="T:SlimDX.Direct3D11.ShaderResourceView" />.</param>
            <param name="resource">The resource that will serve as input to a shader. This resource must have been created with the <see cref="T:SlimDX.Direct3D11.BindFlags">ShaderResource</see> flag.</param>
            <param name="description">A structure describing the <see cref="T:SlimDX.Direct3D11.ShaderResourceView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateShaderResourceView</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ShaderResourceView.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Resource)">
            <summary>Creates a <see cref="T:SlimDX.Direct3D11.ShaderResourceView" /> for accessing resource data.</summary>
            <param name="device">The device to use when creating this <see cref="T:SlimDX.Direct3D11.ShaderResourceView" />.</param>
            <param name="resource">The resource that will serve as input to a shader. This resource must have been created with the <see cref="T:SlimDX.Direct3D11.BindFlags">ShaderResource</see> flag.</param>
            <unmanaged>ID3D11Device::CreateShaderResourceView</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D11.ShaderResourceView">
            <summary>Specifies the subresources that a shader can access during rendering.</summary>
            <unmanaged>ID3D11ShaderResourceView</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageLoadInformation.Equals(SlimDX.Direct3D11.ImageLoadInformation@,SlimDX.Direct3D11.ImageLoadInformation@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageLoadInformation.Equals(SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageLoadInformation.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageLoadInformation.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageLoadInformation.op_Inequality(SlimDX.Direct3D11.ImageLoadInformation,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageLoadInformation.op_Equality(SlimDX.Direct3D11.ImageLoadInformation,SlimDX.Direct3D11.ImageLoadInformation)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.MipFilterFlags">
            <summary>
The filter used when resampling mipmap levels of the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.FilterFlags">
            <summary>
The filter used when resampling the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.Format">
            <summary>
The format of the loaded texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.OptionFlags">
            <summary>
Gets or sets the flags specifying miscellaneous resource options.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.CpuAccessFlags">
            <summary>
Gets or sets the flags specifying how the CPU will be allowed to access the loaded texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.BindFlags">
            <summary>
Gets or sets the flags specifying how the loaded texture is bound to the pipeline.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.Usage">
            <summary>
Gets or sets the intended usage pattern of the loaded texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.MipLevels">
            <summary>
Number of mipmap levels in the original image.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.FirstMipLevel">
            <summary>
The highest resolution mipmap level of the texture; if greater than zero,
this mipmap level will be mapped to level 0 in the loaded texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.Depth">
            <summary>
Depth of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.Height">
            <summary>
Height of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.Width">
            <summary>
Width of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ImageLoadInformation.FileDefaultValue">
            <summary>
The default value for load options.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.ImageLoadInformation.FromDefaults">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.ImageLoadInformation" /> struct using default values.
</summary>
            <returns>The default image load information.</returns>
        </member>
        <member name="T:SlimDX.Direct3D11.ImageLoadInformation">
            <summary>
Contains the description of the contents of an image file.
</summary>
            <unmanaged>D3DX11_IMAGE_LOAD_INFO</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectConstantBuffer.UndoSetTextureBuffer">
            <summary>
Reverts a previously set texture buffer.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectConstantBuffer.UndoSetConstantBuffer">
            <summary>
Reverts a previously set constant buffer.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectConstantBuffer.TextureBuffer">
            <summary>
Gets or sets the texture buffer represented by this interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectConstantBuffer.ConstantBuffer">
            <summary>
Gets or sets the constant buffer represented by this interface.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectConstantBuffer.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectConstantBuffer" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectConstantBuffer">
            <summary>
Represents a constant buffer or texture buffer inside an effect.
</summary>
            <unmanaged>ID3DX11EffectConstantBuffer</unmanaged>
        </member>
        <member name="F:SlimDX.DirectSound.SoundBuffer3D.MaxConeAngle">
            <summary>
Maximum cone angle, in degrees.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundBuffer3D.MinConeAngle">
            <summary>
Minimum cone angle, in degrees.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundBuffer3D.DefaultConeOutsideVolume">
            <summary>
Default outside cone volume. Volume levels are expressed as attenuation, in hundredths of a decibel.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundBuffer3D.DefaultConeAngle">
            <summary>
Default cone angle, in degrees.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundBuffer3D.DefaultMaxDistance">
            <summary>
Default maximum distance, in meters.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundBuffer3D.DefaultMinDistance">
            <summary>
Default minimum distance, in meters.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.Velocity">
            <summary>
The velocity of the sound source.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.Position">
            <summary>
The position of the sound source.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.Mode">
            <summary>
The operation mode for 3-D sound processing.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.MinDistance">
            <summary>
The minimum distance, which is the distance from the listener at which sounds in this buffer begin to be attenuated.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.MaxDistance">
            <summary>
The maximum distance, which is the distance from the listener beyond which sounds in this buffer are no longer attenuated.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.Deferred">
            <summary>
Settings are not applied until the application calls the SoundListener3D.CommitDeferredSettings() if true.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.ConeOutsideVolume">
            <summary>
The volume of the sound outside the outside angle of the sound projection cone.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.ConeOrientation">
            <summary>
The orientation of the sound projection cone.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.OutsideConeAngle">
            <summary>
The outside angle of the sound projection cone.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.InsideConeAngle">
            <summary>
The inside angle of the sound projection cone.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer3D.AllParameters">
            <summary>
Gets or sets all the  parameters of a buffer
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBuffer3D.#ctor(SlimDX.DirectSound.SoundBuffer)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.SoundBuffer3D" /> class.
</summary>
            <param name="soundBuffer" />
            <returns />
        </member>
        <member name="T:SlimDX.DirectSound.SoundBuffer3D">
            <summary>
The SoundBuffer3D object is used to retrieve and set parameters that describe the position, orientation, and environment of a sound buffer in 3-D space.
</summary>
            <unmanaged>IDirectSound3DBuffer</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.Buffer3DSettings.Equals(SlimDX.DirectSound.Buffer3DSettings@,SlimDX.DirectSound.Buffer3DSettings@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.Buffer3DSettings.Equals(SlimDX.DirectSound.Buffer3DSettings)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.Buffer3DSettings.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.Buffer3DSettings.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.Buffer3DSettings.op_Inequality(SlimDX.DirectSound.Buffer3DSettings,SlimDX.DirectSound.Buffer3DSettings)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.Buffer3DSettings.op_Equality(SlimDX.DirectSound.Buffer3DSettings,SlimDX.DirectSound.Buffer3DSettings)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.Velocity">
            <summary>
Describes the current velocity of the 3-D sound buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.Position">
            <summary>
Describes the current position of the 3-D sound buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.OutsideConeAngle">
            <summary>
The angle of the outside sound projection cone.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.Mode">
            <summary>
The 3-D sound processing mode to be set.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.MinDistance">
            <summary>
The minimum distance.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.MaxDistance">
            <summary>
The maximum distance.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.InsideConeAngle">
            <summary>
The angle of the inside sound projection cone.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.ConeOutsideVolume">
            <summary>
The cone outside volume.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Buffer3DSettings.ConeOrientation">
            <summary>
Describes the current orientation of this 3-D buffer's sound projection cone.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.Buffer3DSettings">
            <summary>
Contains all information necessary to uniquely describe the location, orientation, and motion of a 3-D sound buffer.
</summary>
            <unmanaged>DS3DBUFFER</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.ClassLinkage)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.DomainShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
            <param name="linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DomainShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.DomainShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.DomainShader">
            <summary>
Represents a domain shader.
</summary>
            <unmanaged>ID3D11DomainShader</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Counter.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.CounterKind)">
            <summary>Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Counter" /> class.</summary>
            <param name="device">The device to use when creating the counter.</param>
            <param name="counterKind">The kind of counter to create.</param>
            <unmanaged>ID3D11Device::CreateCounter</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.Counter.CounterKind">
            <summary>Gets the kind of this counter.</summary>
            <unmanaged>ID3D11Counter::GetDesc</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D11.Counter">
            <summary>Encapsulates methods for measuring GPU performance.</summary>
            <unmanaged>ID3D11Counter</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.Asynchronous.DataSize">
            <summary>
Gets the size of the data, in bytes, of the output of the asynchronous operation.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Asynchronous.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Asynchronous" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Asynchronous">
            <summary>
Base class for objects that perform asynchronous GPU data access.
</summary>
            <unmanaged>ID3D11Asynchronous</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRenderTargetViewVariable.SetViewArray(SlimDX.Direct3D11.RenderTargetView[],System.Int32,System.Int32)">
            <summary>
Sets the value of the variable.
</summary>
            <param name="views">An array of views to set.</param>
            <param name="offset">The offset into the array to begin setting values.</param>
            <param name="count">The number of values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRenderTargetViewVariable.SetViewArray(SlimDX.Direct3D11.RenderTargetView[])">
            <summary>
Sets the value of the variable.
</summary>
            <param name="views">An array of views to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRenderTargetViewVariable.SetView(SlimDX.Direct3D11.RenderTargetView)">
            <summary>
Sets the value of the variable.
</summary>
            <param name="view">The view of the render target surface to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRenderTargetViewVariable.GetViewArray(SlimDX.Direct3D11.RenderTargetView[],System.Int32,System.Int32)">
            <summary>
Gets an array of views of render target surfaces from the variable.
</summary>
            <param name="views">An array of views to hold the retrieved values.</param>
            <param name="offset">The offset into the array to begin storing values.</param>
            <param name="count">The number of values to get.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRenderTargetViewVariable.GetViewArray(SlimDX.Direct3D11.RenderTargetView[])">
            <summary>
Gets an array of views of render target surfaces from the variable.
</summary>
            <param name="views">An array of views to hold the retrieved values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRenderTargetViewVariable.GetView">
            <summary>
Gets the value of the variable.
</summary>
            <returns>The view of the render target variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectRenderTargetViewVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectRenderTargetViewVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectRenderTargetViewVariable">
            <summary>
Represents a render target view effect variable.
</summary>
            <unmanaged>ID3DX11EffectRenderTargetViewVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetView.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Resource,SlimDX.Direct3D11.RenderTargetViewDescription)">
            <summary>Creates a <see cref="T:SlimDX.Direct3D11.RenderTargetView" /> for accessing resource data.</summary>
            <param name="device">The device to use when creating this <see cref="T:SlimDX.Direct3D11.RenderTargetView" />.</param>
            <param name="resource">The resource that represents the render-target surface. This surface must have been created with the <see cref="T:SlimDX.Direct3D11.BindFlags">RenderTarget</see> flag.</param>
            <param name="description">A structure describing the <see cref="T:SlimDX.Direct3D11.RenderTargetView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateRenderTargetView</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.RenderTargetView.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.Resource)">
            <summary>Creates a <see cref="T:SlimDX.Direct3D11.RenderTargetView" /> for accessing resource data.</summary>
            <param name="device">The device to use when creating this <see cref="T:SlimDX.Direct3D11.RenderTargetView" />.</param>
            <param name="resource">The resource that represents the render-target surface. This surface must have been created with the <see cref="T:SlimDX.Direct3D11.BindFlags">RenderTarget</see> flag.</param>
            <unmanaged>ID3D11Device::CreateRenderTargetView</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.RenderTargetView.Description">
            <summary>Gets a structure describing this <see cref="T:SlimDX.Direct3D11.RenderTargetView" />.</summary>
            <unmanaged>ID3D11RenderTargetView::GetDesc</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D11.RenderTargetView">
            <summary>Identifies the render-target subresources that can be accessed during rendering.</summary>
            <unmanaged>ID3D11RenderTargetView</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.ResourceView.Resource">
            <summary>Gets the resource that is accessed through this view.</summary>
            <unmanaged>ID3D11View::GetResource</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D11.ResourceView">
            <summary>Specifies the parts of a resource the pipeline can access during rendering.</summary>
            <unmanaged>ID3D11View</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.RasterizerState.FromDescription(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.RasterizerStateDescription)">
            <summary>
Constructs a new RasterizerState based on the specified description. If the description
is identical to that of an existing RasterizerState object, the existing RasterizerState object
is returned instead of a new instance.
</summary>
            <param name="device">The device to associate the state object with</param>
            <param name="description">The state description.</param>
            <returns>The RasterizerState object.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10.RasterizerState.Description">
            <summary>
Gets the state's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.RasterizerState">
            <summary>
A state object defining the behavior of the rasterizer stage. 
</summary>
            <unmanaged>ID3D10RasterizerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDescription.Equals(SlimDX.Direct3D11.EffectDescription@,SlimDX.Direct3D11.EffectDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDescription.Equals(SlimDX.Direct3D11.EffectDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDescription.op_Inequality(SlimDX.Direct3D11.EffectDescription,SlimDX.Direct3D11.EffectDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectDescription.op_Equality(SlimDX.Direct3D11.EffectDescription,SlimDX.Direct3D11.EffectDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectDescription.GroupCount">
            <summary>
Number of groups in this effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectDescription.TechniqueCount">
            <summary>
Number of techniques in this effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectDescription.InterfaceVariableCount">
            <summary>
Number of global interfaces in this effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectDescription.GlobalVariableCount">
            <summary>
Number of global variables in this effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectDescription.ConstantBufferCount">
            <summary>
Number of constant buffers in this effect.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectDescription">
            <summary>
Provides a description for effect objects.
</summary>
            <unmanaged>D3DX11_EFFECT_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.FullDuplex.#ctor(System.Guid,System.Guid,SlimDX.DirectSound.CaptureBufferDescription,SlimDX.DirectSound.SoundBufferDescription,System.IntPtr,SlimDX.DirectSound.CooperativeLevel,SlimDX.DirectSound.CaptureBuffer@,SlimDX.DirectSound.SecondarySoundBuffer@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.FullDuplex" /> class.
</summary>
            <param name="captureDevice" />
            <param name="playbackDevice" />
            <param name="captureDescription" />
            <param name="bufferDescription" />
            <param name="windowHandle" />
            <param name="level" />
            <param name="captureBuffer" />
            <param name="secondaryBuffer" />
        </member>
        <member name="T:SlimDX.DirectSound.FullDuplex">
            <summary>
The FullDuplex object represents a full-duplex stream.
</summary>
            <unmanaged>IDirectSoundFullDuplex</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.SecondarySoundBuffer.SetEffects(System.Guid[])">
            <summary />
            <param name="effects" />
            <returns />
        </member>
        <member name="M:SlimDX.DirectSound.SecondarySoundBuffer.#ctor(SlimDX.DirectSound.DirectSound,SlimDX.DirectSound.SoundBufferDescription)">
            <summary>
Initializes a new instance of the <see cref="N:SlimDX.DirectSound" /> class.
</summary>
            <param name="device" />
            <param name="description" />
            <returns />
        </member>
        <member name="T:SlimDX.DirectSound.SecondarySoundBuffer">
            <summary>
The SecondarySoundBuffer object is used to manage sound buffers and effects.
</summary>
            <unmanaged>IDirectSoundBuffer8</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer.Capabilities">
            <summary>
Retrieves the capabilities of the buffer object.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer.NoVirtualization">
            <summary>
True if a requested 3D algorithm was not available and stereo panning was substituted.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer.Status">
            <summary>
Retrieves the status of the sound buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer.Pan">
            <summary>
Retrieves or sets the relative volume of the left and right audio channels.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer.Volume">
            <summary>
Retrieves or sets the attenuation of the sound.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer.Frequency">
            <summary>
Retrieves or sets the frequency, in samples per second, at which the buffer is playing.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer.CurrentPlayPosition">
            <summary>
Retrieves or sets the position of the play cursor.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBuffer.CurrentWritePosition">
            <summary>
Retrieves the position of the write cursor in the sound buffer.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBuffer.Write``1(``0[],System.Int32,SlimDX.DirectSound.LockFlags)">
            <summary>
Writes data to the buffer.
</summary>
            <returns />
        </member>
        <member name="M:SlimDX.DirectSound.SoundBuffer.Write``1(``0[],System.Int32,System.Int32,System.Int32,SlimDX.DirectSound.LockFlags)">
            <summary>
Writes data to the buffer.
</summary>
            <returns />
        </member>
        <member name="M:SlimDX.DirectSound.SoundBuffer.Stop">
            <summary>
Causes the sound buffer to stop playing.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBuffer.Play(System.Int32,SlimDX.DirectSound.PlayFlags)">
            <summary>
Causes the sound buffer to play, starting at the play cursor.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBuffer.Restore">
            <summary>
Restores the memory allocation for a lost sound buffer.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.SoundBuffer">
            <summary>
The SoundBuffer object is used to manage sound buffers.
</summary>
            <unmanaged>IDirectSoundBuffer</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.DirectSound.GetDevices">
            <summary>
Enumerates the DirectSound devices installed in the system.
</summary>
            <returns>A collection of the devices found.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSound.Capabilities">
            <summary>
Retrieves the capabilities of the hardware device.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.DirectSound.VerifyCertification">
            <summary>
Ascertains whether the device driver is certified for DirectX.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.DirectSound.DuplicateSoundBuffer(SlimDX.DirectSound.SoundBuffer,SlimDX.DirectSound.SoundBuffer@)">
            <summary>
Creates a duplicate of the original sound buffer that shares the originals memory.
</summary>
            <param name="original" />
            <param name="result" />
        </member>
        <member name="M:SlimDX.DirectSound.DirectSound.GetSpeakerConfiguration(SlimDX.DirectSound.SpeakerConfiguration@,SlimDX.DirectSound.SpeakerGeometry@)">
            <summary>
Retrieves the speaker configuration of the device.
</summary>
            <param name="speakerSet" />
            <param name="geometry" />
        </member>
        <member name="M:SlimDX.DirectSound.DirectSound.SetSpeakerConfiguration(SlimDX.DirectSound.SpeakerConfiguration,SlimDX.DirectSound.SpeakerGeometry)">
            <summary>
Sets the speaker configuration of the device.
</summary>
            <param name="speakerSet" />
            <param name="geometry" />
        </member>
        <member name="M:SlimDX.DirectSound.DirectSound.SetCooperativeLevel(System.IntPtr,SlimDX.DirectSound.CooperativeLevel)">
            <summary>
Sets the cooperative level of the application for this sound device.
</summary>
            <param name="windowHandle" />
            <param name="cooperativeLevel" />
        </member>
        <member name="M:SlimDX.DirectSound.DirectSound.#ctor(System.Guid)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.DirectSound" /> class.
</summary>
            <param name="device" />
        </member>
        <member name="M:SlimDX.DirectSound.DirectSound.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.DirectSound" /> class.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.DirectSound">
            <summary>
The DirectSound object is used to create buffer objects, manage devices, and set up the environment.
</summary>
            <unmanaged>IDirectSound8</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.UnlockTransferRateHardwareBuffers">
            <summary>
The rate, in kilobytes per second, at which data can be transferred to hardware static sound buffers. This and the number of bytes transferred determines the duration of a call to the Buffer.Read or Buffer.Write method.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.TotalHardwareMemory">
            <summary>
Size, in bytes, of the amount of memory on the sound card that stores static sound buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.SecondaryStereo">
            <summary>
The device supports hardware-mixed stereo secondary buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.SecondaryMono">
            <summary>
The device supports hardware-mixed monophonic secondary buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.Secondary8Bit">
            <summary>
The device supports hardware-mixed secondary sound buffers with 8-bit samples.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.Secondary16Bit">
            <summary>
The device supports hardware-mixed secondary sound buffers with 16-bit samples.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.PrimaryStereo">
            <summary>
The device supports stereo primary buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.PrimaryMono">
            <summary>
The device supports monophonic primary buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.PrimaryBuffers">
            <summary>
Number of primary buffers supported. This value will always be 1.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.Primary8Bit">
            <summary>
The device supports primary buffers with 8-bit samples.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.Primary16Bit">
            <summary>
The device supports a primary buffer with 16-bit samples.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.PlayCpuOverheadSoftwareBuffers">
            <summary>
The processing overhead, as a percentage of main processor cycles, needed to mix software buffers. This varies according to the bus type, the processor type, and the clock speed.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MinSecondarySampleRate">
            <summary>
Minimum sample rate specifications that are supported by this device's hardware secondary sound buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MaxSecondarySampleRate">
            <summary>
Maximum sample rate specifications that are supported by this device's hardware secondary sound buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MaxHardwareMixingStreamingBuffers">
            <summary>
Maximum number of streaming sound buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MaxHardwareMixingStaticBuffers">
            <summary>
Maximum number of static buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MaxHardwareMixingAllBuffers">
            <summary>
Number of buffers that can be mixed in hardware. This member can be less than the sum of MaxHardwareMixingStaticBuffers and MaxHardwareMixingStreamingBuffers. Resource tradeoffs frequently occur.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MaxHardware3DStreamingBuffers">
            <summary>
Maximum number of streaming 3-D buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MaxHardware3DStaticBuffers">
            <summary>
Maximum number of static 3-D buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MaxHardware3DAllBuffers">
            <summary>
Maximum number of 3-D buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.MaxContiguousFreeHardwareMemoryBytes">
            <summary>
Size, in bytes, of the largest contiguous block of free memory on the sound card.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.FreeHardwareMixingStreamingBuffers">
            <summary>
Number of unallocated streaming buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.FreeHardwareMixingStaticBuffers">
            <summary>
Number of unallocated static buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.FreeHardwareMixingAllBuffers">
            <summary>
Number of unallocated buffers. On WDM drivers, this includes FreeHardware3DAllBuffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.FreeHardwareMemory">
            <summary>
Size, in bytes, of the free memory on the sound card.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.FreeHardware3DStreamingBuffers">
            <summary>
Number of unallocated streaming 3-D buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.FreeHardware3DStaticBuffers">
            <summary>
Number of unallocated static 3-D buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.FreeHardware3DAllBuffers">
            <summary>
Number of unallocated 3-D buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.EmulatedDriver">
            <summary>
The device does not have a DirectSound driver installed, so it is being emulated through the waveform-audio functions. Performance degradation should be expected.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.ContinuousRate">
            <summary>
The device supports all sample rates between the MinSecondarySampleRate and MaxSecondarySampleRate member values. Typically, this means that the actual output rate will be within +/- 10 hertz (Hz) of the requested frequency.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.Capabilities.Certified">
            <summary>
The driver has been tested and certified by Microsoft. This flag is always set for WDM drivers.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.Capabilities">
            <summary>
Describes the capabilities of a DirectSound device.
</summary>
            <unmanaged>DSCAPS</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBuffer.CurrentReadPosition">
            <summary>
Retrieves the position of the read cursor in the buffer. The capture cursor is ahead of the read cursor. The data after the read position up to and including the capture position is not necessarily valid data.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBuffer.CurrentCapturePosition">
            <summary>
Retrieves the position of the capture cursor in the buffer. The capture cursor is ahead of the read cursor. The data after the read position up to and including the capture position is not necessarily valid data.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBuffer.WaveMapped">
            <summary>
True if the buffer wave mapped.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBuffer.SizeInBytes">
            <summary>
The size, in bytes, of the capture buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBuffer.Format">
            <summary>
Retrieves the waveform format of the capture buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBuffer.Looping">
            <summary>
True if the capture buffer is looping.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBuffer.Capturing">
            <summary>
True if the buffer is currently capturing.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBuffer.Stop">
            <summary>
Stops the buffer so that it is no longer capturing data. If the buffer is not capturing, the method has no effect.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBuffer.Start(System.Boolean)">
            <summary>
Begins capturing data into the buffer. If the buffer is already capturing, the method has no effect.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBuffer.GetEffectStatus(System.Int32)">
            <summary>
Retrieves the status of capture effects.
</summary>
            <param name="effectCount" />
            <returns />
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBuffer.#ctor(SlimDX.DirectSound.DirectSoundCapture,SlimDX.DirectSound.CaptureBufferDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.CaptureBuffer" /> class.
</summary>
            <param name="capture" />
            <param name="description" />
        </member>
        <member name="T:SlimDX.DirectSound.CaptureBuffer">
            <summary>
The CaptureBuffer object is used to manipulate sound capture buffers.
</summary>
            <unmanaged>IDirectSoundCaptureBuffer8</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.DirectSoundCapture.GetDevices">
            <summary>
Enumerates the DirectSound capture devices installed in the system.
</summary>
            <returns>A collection of the devices found.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.DirectSoundCapture.Capabilities">
            <summary>
Retrieves the capabilities of the capture device.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.DirectSoundCapture.#ctor(System.Guid)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.DirectSoundCapture" /> class.
</summary>
            <param name="device" />
            <returns />
        </member>
        <member name="M:SlimDX.DirectSound.DirectSoundCapture.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectSound.DirectSoundCapture" /> class.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.DirectSoundCapture">
            <summary>
The DirectSoundCapture object is used to create sound capture buffers.
</summary>
            <unmanaged>IDirectSoundCapture8</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureCapabilities.Equals(SlimDX.DirectSound.CaptureCapabilities@,SlimDX.DirectSound.CaptureCapabilities@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureCapabilities.Equals(SlimDX.DirectSound.CaptureCapabilities)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureCapabilities.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureCapabilities.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureCapabilities.op_Inequality(SlimDX.DirectSound.CaptureCapabilities,SlimDX.DirectSound.CaptureCapabilities)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureCapabilities.op_Equality(SlimDX.DirectSound.CaptureCapabilities,SlimDX.DirectSound.CaptureCapabilities)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.MultipleCapture">
            <summary>
Multiple capture objects can be used simultaneously on the capture device.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format96KhzStereo8Bit">
            <summary>
The driver supports the 96Khz 8 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format96KhzStereo16Bit">
            <summary>
The driver supports the 96Khz 16 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format96KhzMono8Bit">
            <summary>
The driver supports the 96Khz 8 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format96KhzMono16Bit">
            <summary>
The driver supports the 96Khz 16 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format48KhzStereo8Bit">
            <summary>
The driver supports the 48Khz 8 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format48KhzStereo16Bit">
            <summary>
The driver supports the 48Khz 16 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format48KhzMono8Bit">
            <summary>
The driver supports the 48Khz 8 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format48KhzMono16Bit">
            <summary>
The driver supports the 48Khz 16 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format44KhzStereo8Bit">
            <summary>
The driver supports the 44Khz 8 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format44KhzStereo16Bit">
            <summary>
The driver supports the 44Khz 16 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format44KhzMono8Bit">
            <summary>
The driver supports the 44Khz 8 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format44KhzMono16Bit">
            <summary>
The driver supports the 44Khz 16 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format22KhzStereo8Bit">
            <summary>
The driver supports the 22Khz 8 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format22KhzStereo16Bit">
            <summary>
The driver supports the 22Khz 16 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format22KhzMono8Bit">
            <summary>
The driver supports the 22Khz 8 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format22KhzMono16Bit">
            <summary>
The driver supports the 22Khz 16 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format11KhzStereo8Bit">
            <summary>
The driver supports the 11Khz 8 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format11KhzStereo16Bit">
            <summary>
The driver supports the 11Khz 16 Bit Stereo format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format11KhzMono8Bit">
            <summary>
The driver supports the 11Khz 8 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Format11KhzMono16Bit">
            <summary>
The driver supports the 11Khz 16 Bit Mono format.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.EmulatedDriver">
            <summary>
There is no DirectSoundCapture driver for the device, so the standard waveform audio functions are being used.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Channels">
            <summary>
Number of channels supported by the device, where 1 is mono, 2 is stereo, and so on.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureCapabilities.Certified">
            <summary>
The driver for the device is a certified WDM driver.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.CaptureCapabilities">
            <summary>
Describes the capabilities of the capture device.
</summary>
            <unmanaged>DSCCAPS</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.DeviceInformation.ModuleName">
            <summary>
String that specifies the module name of the DirectSound driver corresponding to this device.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DeviceInformation.Description">
            <summary>
String that provides a textual description of the DirectSound device.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.DeviceInformation.DriverGuid">
            <summary>
Identifies the DirectSound driver being enumerated
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.DeviceInformation">
            <summary>
Contains information about a DirectSound device.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBufferDescription.Equals(SlimDX.DirectSound.CaptureBufferDescription@,SlimDX.DirectSound.CaptureBufferDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBufferDescription.Equals(SlimDX.DirectSound.CaptureBufferDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBufferDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBufferDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBufferDescription.op_Inequality(SlimDX.DirectSound.CaptureBufferDescription,SlimDX.DirectSound.CaptureBufferDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureBufferDescription.op_Equality(SlimDX.DirectSound.CaptureBufferDescription,SlimDX.DirectSound.CaptureBufferDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBufferDescription.EffectDescriptions">
            <summary>
Describes effects supported by hardware for the buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBufferDescription.Format">
            <summary>
The format in which to capture the data.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBufferDescription.WaveMapped">
            <summary>
The Win32 wave mapper will be used for formats not supported by the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBufferDescription.ControlEffects">
            <summary>
The buffer supports effects.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureBufferDescription.BufferBytes">
            <summary>
Size of capture buffer to create, in bytes.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.CaptureBufferDescription">
            <summary>
Describes a capture buffer.
</summary>
            <unmanaged>DSCBUFFERDESC</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureEffectDescription.Equals(SlimDX.DirectSound.CaptureEffectDescription@,SlimDX.DirectSound.CaptureEffectDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureEffectDescription.Equals(SlimDX.DirectSound.CaptureEffectDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureEffectDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureEffectDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureEffectDescription.op_Inequality(SlimDX.DirectSound.CaptureEffectDescription,SlimDX.DirectSound.CaptureEffectDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.CaptureEffectDescription.op_Equality(SlimDX.DirectSound.CaptureEffectDescription,SlimDX.DirectSound.CaptureEffectDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectDescription.LocateInSoftware">
            <summary>
Effect specified must be in software.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectDescription.LocateInHardware">
            <summary>
Effect specified must be in hardware.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectDescription.CaptureEffectInstance">
            <summary>
Specifies the unique identifier of the preferred effect.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.CaptureEffectDescription.CaptureEffectClass">
            <summary>
Specifies the class identifier of the effect.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.CaptureEffectDescription">
            <summary>
Contains parameters for an effect associated with a capture buffer.
</summary>
            <unmanaged>DSCEFFECTDESC</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBufferDescription.Equals(SlimDX.DirectSound.SoundBufferDescription@,SlimDX.DirectSound.SoundBufferDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBufferDescription.Equals(SlimDX.DirectSound.SoundBufferDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBufferDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBufferDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBufferDescription.op_Inequality(SlimDX.DirectSound.SoundBufferDescription,SlimDX.DirectSound.SoundBufferDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.SoundBufferDescription.op_Equality(SlimDX.DirectSound.SoundBufferDescription,SlimDX.DirectSound.SoundBufferDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBufferDescription.AlgorithmFor3D">
            <summary>
Unique identifier of the two-speaker virtualization algorithm to be used by DirectSound3D hardware emulation.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBufferDescription.Format">
            <summary>
Structure specifying the waveform format for the buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBufferDescription.Flags">
            <summary>
Flags specifying the capabilities of the buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.SoundBufferDescription.SizeInBytes">
            <summary>
Size of the new buffer, in bytes. This value must be 0 when creating a buffer.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.SoundBufferDescription">
            <summary>
Describes the characteristics of a new buffer object.
</summary>
            <unmanaged>DSBUFFERDESC</unmanaged>
        </member>
        <member name="M:SlimDX.XInput.Keystroke.Equals(SlimDX.XInput.Keystroke@,SlimDX.XInput.Keystroke@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.Keystroke.Equals(SlimDX.XInput.Keystroke)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.Keystroke.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.Keystroke.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XInput.Keystroke.op_Inequality(SlimDX.XInput.Keystroke,SlimDX.XInput.Keystroke)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.Keystroke.op_Equality(SlimDX.XInput.Keystroke,SlimDX.XInput.Keystroke)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.XInput.Keystroke.HidCode">
            <summary>
Gets the HID code corresponding to the input. If there is no corresponding HID code, this value is zero.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Keystroke.UserIndex">
            <summary>
Gets the index of the signed-in gamer associated with the device. Can be a value in the range 0–3.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Keystroke.Flags">
            <summary>
Gets a combination of flags that indicate the keyboard state at the time of the input event.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Keystroke.VirtualKey">
            <summary>
Gets the virtual-key code of the key, button, or stick movement.
</summary>
        </member>
        <member name="T:SlimDX.XInput.Keystroke">
            <summary>
Describes keystroke data from a device.
</summary>
            <unmanaged>XINPUT_KEYSTROKE</unmanaged>
        </member>
        <member name="P:SlimDX.DirectSound.AcousticEchoCancel.PreviouslyDiverged">
            <summary>
True if the AEC algorithm ever loses convergence.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.AcousticEchoCancel.ContinuouslyConverged">
            <summary>
True if the AEC algorithm has converged.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.AcousticEchoCancel.CurrentlyConverged">
            <summary>
True if the AEC algorithm is currently converged.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.AcousticEchoCancel.Uninitialized">
            <summary>
True if the AEC algorithm is in the uninitialized state.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.AcousticEchoCancel.Mode">
            <summary>
Operation mode.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.AcousticEchoCancel.NoiseFill">
            <summary>
Boolean value that specifies whether to enable background comfort noise, which makes the capture signal sound more natural by preventing periods of dead silence. By default, background comfort noise is not enabled.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.AcousticEchoCancel.Enabled">
            <summary>
Boolean value that specifies whether the effect is enabled.
</summary>
        </member>
        <member name="M:SlimDX.DirectSound.AcousticEchoCancel.Reset">
            <summary>
Sets the enumerator to its initial position, which is before the first element in the collection.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.AcousticEchoCancel">
            <summary>
The CaptureEffectAcousticEchoCancel object is used to set and retrieve parameters on a capture buffer that supports acoustic echo cancellation. This object requires Microsoft® Windows® XP or later operating systems.
</summary>
            <unmanaged>IDirectSoundCaptureFXAec</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetShaderDescription(System.Int32)">
            <summary>
Gets the description for the given shader.
</summary>
            <param name="shaderIndex">The zero-based shader index.</param>
            <returns>The description for the given shader.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetPatchConstantDescription(System.Int32,System.Int32)">
            <summary>
Gets the description for a single element of the given shader's patch constant signature.
</summary>
            <param name="shaderIndex">The zero-based shader index.</param>
            <param name="parameterIndex">The index of the signature element.</param>
            <returns>The description for the given shader signature element.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetOutputParameterDescription(System.Int32,System.Int32)">
            <summary>
Gets the description for a single element of the given shader's output signature.
</summary>
            <param name="shaderIndex">The zero-based shader index.</param>
            <param name="parameterIndex">The index of the signature element.</param>
            <returns>The description for the given shader signature element.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetInputParameterDescription(System.Int32,System.Int32)">
            <summary>
Gets the description for a single element of the given shader's input signature.
</summary>
            <param name="shaderIndex">The zero-based shader index.</param>
            <param name="parameterIndex">The index of the signature element.</param>
            <returns>The description for the given shader signature element.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetComputeShader(System.Int32)">
            <summary>
Gets a compute shader.
</summary>
            <param name="index">The zero-based index of the compute shader to retrieve.</param>
            <returns>The compute shader at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetDomainShader(System.Int32)">
            <summary>
Gets a domain shader.
</summary>
            <param name="index">The zero-based index of the domain shader to retrieve.</param>
            <returns>The domain shader at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetHullShader(System.Int32)">
            <summary>
Gets a hull shader.
</summary>
            <param name="index">The zero-based index of the hull shader to retrieve.</param>
            <returns>The hull shader at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetGeometryShader(System.Int32)">
            <summary>
Gets a geometry shader.
</summary>
            <param name="index">The zero-based index of the geometry shader to retrieve.</param>
            <returns>The geometry shader at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetVertexShader(System.Int32)">
            <summary>
Gets a vertex shader.
</summary>
            <param name="index">The zero-based index of the vertex shader to retrieve.</param>
            <returns>The vertex shader at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.GetPixelShader(System.Int32)">
            <summary>
Gets a pixel shader.
</summary>
            <param name="index">The zero-based index of the pixel shader to retrieve.</param>
            <returns>The pixel shader at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectShaderVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectShaderVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectShaderVariable">
            <summary>
Represents a shader effect variable.
</summary>
            <unmanaged>ID3DX11EffectShaderVariable</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexShader.Function">
            <summary>
Gets the shader function stream.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexShader.Device">
            <summary>
Gets the device associated with the shader.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexShader.MinStaticFlowControlDepth">
            <summary>
The maximum level of nesting of static flow control instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexShader.MaxStaticFlowControlDepth">
            <summary>
The maximum level of nesting of static flow control instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexShader.MinTemps">
            <summary>
The minimum number of temporary registers supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexShader.MaxTemps">
            <summary>
The maximum number of temporary registers supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexShader.MinDynamicFlowControlDepth">
            <summary>
The minimum level of nesting of dynamic flow control instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexShader.MaxDynamicFlowControlDepth">
            <summary>
The maximum level of nesting of dynamic flow control instructions.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexShader.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.Direct3D9.VertexShader" />.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexShader.#ctor(SlimDX.Direct3D9.Device,SlimDX.Direct3D9.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.VertexShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="function">The shader function stream.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexShader">
            <summary>
Represents a vertex shader.
</summary>
            <unmanaged>IDirect3DVertexShader9</unmanaged>
        </member>
        <member name="M:SlimDX.DirectInput.Joystick.GetObjectPropertiesByName(System.String)">
            <summary>
Gets properties about a single object on an input device.
</summary>
            <param name="name">The name of the object whose properties are to be retrieved.</param>
            <returns>The properties of the desired object.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Joystick.GetBufferedData">
            <summary>
Retrieves buffered data from the device.
</summary>
            <returns>A collection of buffered input events.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Joystick.GetCurrentState(SlimDX.DirectInput.JoystickState@)">
            <summary>
Retrieves the current device state.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Joystick.GetCurrentState">
            <summary>
Retrieves the current device state.
</summary>
            <returns>The current device state.</returns>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.TorqueZ">
            <summary>
Gets the Z-axis torque.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.TorqueY">
            <summary>
Gets the Y-axis torque.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.TorqueX">
            <summary>
Gets the X-axis torque.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.ForceZ">
            <summary>
Gets the Z-axis force.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.ForceY">
            <summary>
Gets the Y-axis force.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.ForceX">
            <summary>
Gets the X-axis force.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AngularAccelerationZ">
            <summary>
Gets the Z-axis angular acceleration.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AngularAccelerationY">
            <summary>
Gets the Y-axis angular acceleration.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AngularAccelerationX">
            <summary>
Gets the X-axis angular acceleration.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AccelerationZ">
            <summary>
Gets the Z-axis acceleration.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AccelerationY">
            <summary>
Gets the Y-axis acceleration.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AccelerationX">
            <summary>
Gets the X-axis acceleration.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AngularVelocityZ">
            <summary>
Gets the Z-axis angular velocity.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AngularVelocityY">
            <summary>
Gets the Y-axis angular velocity.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.AngularVelocityX">
            <summary>
Gets the X-axis angular velocity.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.VelocityZ">
            <summary>
Gets the Z-axis velocity.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.VelocityY">
            <summary>
Gets the Y-axis velocity.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.VelocityX">
            <summary>
Gets the X-axis velocity.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.RotationZ">
            <summary>
Gets the Z-axis rotation.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.RotationY">
            <summary>
Gets the Y-axis rotation.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.RotationX">
            <summary>
Gets the X-axis rotation.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.Z">
            <summary>
Gets the Z-axis, often the throttle control.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.Y">
            <summary>
Gets the Y-axis, usually the forward-backward movement of a stick.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.JoystickState.X">
            <summary>
Gets the X-axis, usually the left-right movement of a stick.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickState.GetButtons">
            <summary>
Gets the state of each button on the joystick.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickState.GetForceSliders">
            <summary>
Gets the force of each slider on the joystick.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickState.GetAccelerationSliders">
            <summary>
Gets the acceleration of each slider on the joystick.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickState.GetVelocitySliders">
            <summary>
Gets the velocity of each slider on the joystick.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickState.GetSliders">
            <summary>
Gets the position of each slider on the joystick.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.JoystickState.GetPointOfViewControllers">
            <summary>
Gets the state of each point-of-view controller on the joystick.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.JoystickState">
            <summary>
Describes the state of a joystick device.
</summary>
            <unmanaged>DIJOYSTATE2</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.EffectResourceVariable.SetResourceArray(SlimDX.Direct3D10.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Sets an array of shader resource values.
</summary>
            <param name="views">An array of resource views to set.</param>
            <param name="offset">The offset into the array to begin setting values.</param>
            <param name="count">The number of values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.EffectResourceVariable.SetResourceArray(SlimDX.Direct3D10.ShaderResourceView[])">
            <summary>
Sets an array of shader resource values.
</summary>
            <param name="views">An array of resource views to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.EffectResourceVariable.SetResource(SlimDX.Direct3D10.ShaderResourceView)">
            <summary>
Sets the value of the shader resource.
</summary>
            <param name="view">A view of the resource to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.EffectResourceVariable.GetResourceArray(SlimDX.Direct3D10.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>
Gets an array of resource views from the variable.
</summary>
            <param name="views">An array of resource views to hold the retrieved shader resources.</param>
            <param name="offset">The offset into the array to begin storing values.</param>
            <param name="count">The number of values to get.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.EffectResourceVariable.GetResourceArray(SlimDX.Direct3D10.ShaderResourceView[])">
            <summary>
Gets an array of resource views from the variable.
</summary>
            <param name="views">An array of resource views to hold the retrieved shader resources.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.EffectResourceVariable.GetResource">
            <summary>
Gets the value of the variable.
</summary>
            <returns>A view of the shader resource.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.EffectVariable.GetRawValue(System.Int32)">
            <summary>
Gets the value of the variable in raw bytes.
</summary>
            <param name="count">The number of bytes to retrieve.</param>
            <returns>The raw data representing the value of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.EffectVariable.SetRawValue(SlimDX.DataStream,System.Int32)">
            <summary>
Sets the value of the variable using raw bytes.
</summary>
            <param name="count">The number of bytes to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture3D.Unmap(System.Int32)">
            <summary>
Unmaps the texture.
</summary>
            <param name="subresource">The subresource to unmap.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture3D.Map(System.Int32,System.Int32,SlimDX.Direct3D10.MapMode,SlimDX.Direct3D10.MapFlags)">
            <summary>
Maps the texture, providing CPU access to its contents.
</summary>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="arraySlice">The zero-based index of the first texture to use (in an array of textures).</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A data box containing the mapped data. This data stream is invalidated
when the buffer is unmapped.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture3D.Map(System.Int32,SlimDX.Direct3D10.MapMode,SlimDX.Direct3D10.MapFlags)">
            <summary>
Maps the texture, providing CPU access to its contents.
</summary>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A data box containing the mapped data. This data stream is invalidated
when the buffer is unmapped.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture3D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture3DDescription,SlimDX.DataBox[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture3D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture3D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture3DDescription,SlimDX.DataBox)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture3D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
            <param name="data">The initial texture data.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Texture3D.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.Texture3DDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.Texture3D" /> class.
</summary>
            <param name="device">The device to associate the texture with.</param>
            <param name="description">The description of the texture.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.Texture3D.Description">
            <summary>
Gets the texture description.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageLoadInformation.Equals(SlimDX.Direct3D10.ImageLoadInformation@,SlimDX.Direct3D10.ImageLoadInformation@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageLoadInformation.Equals(SlimDX.Direct3D10.ImageLoadInformation)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageLoadInformation.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageLoadInformation.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageLoadInformation.op_Inequality(SlimDX.Direct3D10.ImageLoadInformation,SlimDX.Direct3D10.ImageLoadInformation)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ImageLoadInformation.op_Equality(SlimDX.Direct3D10.ImageLoadInformation,SlimDX.Direct3D10.ImageLoadInformation)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.MipFilterFlags">
            <summary>
The filter used when resampling mipmap levels of the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.FilterFlags">
            <summary>
The filter used when resampling the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.Format">
            <summary>
The format of the loaded texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.OptionFlags">
            <summary>
Gets or sets the flags specifying miscellaneous resource options.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.CpuAccessFlags">
            <summary>
Gets or sets the flags specifying how the CPU will be allowed to access the loaded texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.BindFlags">
            <summary>
Gets or sets the flags specifying how the loaded texture is bound to the pipeline.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.Usage">
            <summary>
Gets or sets the intended usage pattern of the loaded texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.MipLevels">
            <summary>
Number of mipmap levels in the original image.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.FirstMipLevel">
            <summary>
The highest resolution mipmap level of the texture; if greater than zero,
this mipmap level will be mapped to level 0 in the loaded texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.Depth">
            <summary>
Depth of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.Height">
            <summary>
Height of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ImageLoadInformation.Width">
            <summary>
Width of the original image, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.ImageLoadInformation">
            <summary>
Contains the description of the contents of an image file.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexBuffer.Description">
            <summary>
Gets a description of the buffer.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBuffer.Unlock">
            <summary>
Unlocks previously locked data.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBuffer.Lock(System.Int32,System.Int32,SlimDX.Direct3D9.LockFlags)">
            <summary>
Locks the buffer and obtains a pointer to the memory.
</summary>
            <param name="offset">Offset into the vertex data to lock, in bytes.</param>
            <param name="size">Size of the vertex data to lock, in bytes.</param>
            <param name="flags">Locking flags.</param>
            <returns>A <see cref="T:SlimDX.DataStream" /> containing the vertex data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBuffer.#ctor(SlimDX.Direct3D9.Device,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.VertexFormat,SlimDX.Direct3D9.Pool,System.IntPtr@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.VertexBuffer" /> class.
</summary>
            <param name="device">The device that will be used to create the buffer.</param>
            <param name="sizeInBytes">Size of the buffer, in bytes.</param>
            <param name="usage">The requested usage of the buffer.</param>
            <param name="format">The vertex format of the vertices in the buffer. If set to <see cref="T:SlimDX.Direct3D9.VertexFormat" />.None, the buffer will be a non-FVF buffer.</param>
            <param name="pool">The memory class into which the resource will be placed.</param>
            <param name="sharedHandle">The variable that will receive the shared handle for this resource.</param>
            <remarks>This method is only available in Direct3D9 Ex.</remarks>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBuffer.#ctor(SlimDX.Direct3D9.Device,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.VertexFormat,SlimDX.Direct3D9.Pool)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.VertexBuffer" /> class.
</summary>
            <param name="device">The device that will be used to create the buffer.</param>
            <param name="sizeInBytes">Size of the buffer, in bytes.</param>
            <param name="usage">The requested usage of the buffer.</param>
            <param name="format">The vertex format of the vertices in the buffer. If set to <see cref="T:SlimDX.Direct3D9.VertexFormat" />.None, the buffer will be a non-FVF buffer.</param>
            <param name="pool">The memory class into which the resource will be placed.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexBuffer">
            <summary>Represents a buffer of vertex data.</summary>
            <unmanaged href="bb205915">IDirect3DVertexBuffer9</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBufferDescription.Equals(SlimDX.Direct3D9.VertexBufferDescription@,SlimDX.Direct3D9.VertexBufferDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBufferDescription.Equals(SlimDX.Direct3D9.VertexBufferDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBufferDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBufferDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBufferDescription.op_Inequality(SlimDX.Direct3D9.VertexBufferDescription,SlimDX.Direct3D9.VertexBufferDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexBufferDescription.op_Equality(SlimDX.Direct3D9.VertexBufferDescription,SlimDX.Direct3D9.VertexBufferDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexBufferDescription.FVF">
            <summary>
The vertex format of the vertices in the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexBufferDescription.SizeInBytes">
            <summary>
The size of the buffer data, in bytes.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexBufferDescription.Pool">
            <summary>
The memory class allocated for the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexBufferDescription.Usage">
            <summary>
The intended usage of the resource.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexBufferDescription.Type">
            <summary>
Identifies the resource as a vertex buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexBufferDescription.Format">
            <summary>
Surface format of the vertex data.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexBufferDescription">
            <summary>Describes a vertex buffer.</summary>
            <unmanaged>D3DVERTEXBUFFER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.GetSurfaceLevel(System.Int32)">
            <summary>
Retrieves the specified surface level.
</summary>
            <param name="level">Identifies the level whose surface is to be retrieved.</param>
            <returns>The surface of the specified level.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.GetLevelDescription(System.Int32)">
            <summary>
Retrieves a level description of a texture resource.
</summary>
            <param name="level">Identifies the level whose description is to be retrieved.</param>
            <returns>The surface description of the specified level.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.AddDirtyRectangle">
            <summary>
Marks the entire texture as dirty.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.AddDirtyRectangle(System.Drawing.Rectangle)">
            <summary>
Adds a dirty region to a texture resource.
</summary>
            <param name="rectangle">A rectangle specifying the dirty region to add.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.UnlockRectangle(System.Int32)">
            <summary>
Unlocks a previously locked region of a texture.
</summary>
            <param name="level">The level of the texture to unlock.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.LockRectangle(System.Int32,System.Drawing.Rectangle,SlimDX.Direct3D9.LockFlags)">
            <summary>
Locks a rectangle on a texture resource.
</summary>
            <param name="level">The level of the texture to lock.</param>
            <param name="rectangle">The region on the texture to lock.</param>
            <param name="flags">Locking flags.</param>
            <returns>A <see cref="T:SlimDX.DataRectangle" /> describing the locked region.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.LockRectangle(System.Int32,SlimDX.Direct3D9.LockFlags)">
            <summary>
Locks a texture resource.
</summary>
            <param name="level">The level of the texture to lock.</param>
            <param name="flags">Locking flags.</param>
            <returns>A <see cref="T:SlimDX.DataRectangle" /> describing the locked region.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.Fill(SlimDX.Direct3D9.TextureShader)">
            <summary>
Uses a compiled HLSL shader function to fill each texel of each mip level of a given texture.
</summary>
            <param name="shader">A texture shader object that is used to fill the texture.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.Fill(SlimDX.Direct3D9.Fill2DCallback)">
            <summary>
Uses a user-provided function to fill each texel of each mip level of a given texture.
</summary>
            <param name="callback">A function that is used to fill the texture.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.ComputeNormalMap(SlimDX.Direct3D9.Texture,SlimDX.Direct3D9.Texture,SlimDX.Direct3D9.NormalMapFlags,SlimDX.Direct3D9.Channel,System.Single)">
            <summary>
Converts a height map into a normal map.
</summary>
            <param name="texture">The destination texture.</param>
            <param name="sourceTexture">The source height map texture.</param>
            <param name="flags">Flags the control the generation of normal maps.</param>
            <param name="channel">Flags specifying the source of height information.</param>
            <param name="amplitude">Constant multiplier that increases or decreases values in the map. Higher values make bumps more visible, while lower values make them less visible.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.ComputeNormalMap(SlimDX.Direct3D9.Texture,SlimDX.Direct3D9.Texture,SlimDX.Direct3D9.PaletteEntry[],SlimDX.Direct3D9.NormalMapFlags,SlimDX.Direct3D9.Channel,System.Single)">
            <summary>
Converts a height map into a normal map.
</summary>
            <param name="texture">The destination texture.</param>
            <param name="sourceTexture">The source height map texture.</param>
            <param name="palette">The texture palette.</param>
            <param name="flags">Flags the control the generation of normal maps.</param>
            <param name="channel">Flags specifying the source of height information.</param>
            <param name="amplitude">Constant multiplier that increases or decreases values in the map. Higher values make bumps more visible, while lower values make them less visible.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromFile(SlimDX.Direct3D9.Device,System.String)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromFile(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[])">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.CheckRequirements(SlimDX.Direct3D9.Device,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool)">
            <summary>
Checks texture-creation parameters.
</summary>
            <param name="device">Device associated with the texture.</param>
            <param name="width">Requested width of the texture.</param>
            <param name="height">Requested height of the texture.</param>
            <param name="mipLevelCount">Requested number of mipmap levels for the texture.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">Requested format for the texture.</param>
            <param name="pool">Memory class where the resource will be placed.</param>
            <returns>A value type containing the proposed values to pass to the texture creation functions.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.Direct3D9.Texture" />.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.#ctor(SlimDX.Direct3D9.Device,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,System.IntPtr@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Texture" /> class, setting it as a shared resource.
</summary>
            <param name="device">The device used to create the texture.</param>
            <param name="width">The width of the texture, in pixels.</param>
            <param name="height">The height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels in the texture. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="sharedHandle">The variable that will receive the shared handle for this resource.</param>
            <remarks>This method is only available in Direct3D9 Ex.</remarks>
        </member>
        <member name="M:SlimDX.Direct3D9.Texture.#ctor(SlimDX.Direct3D9.Device,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Texture" /> class.
</summary>
            <param name="device">The device used to create the texture.</param>
            <param name="width">The width of the texture, in pixels.</param>
            <param name="height">The height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels in the texture. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.Texture">
            <summary>
Represents a two dimensional texture resource.
</summary>
            <unmanaged>IDirect3DTexture9</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.GetVolumeLevel(System.Int32)">
            <summary>
Retrieves the specified volume level.
</summary>
            <param name="level">Identifies the level whose surface is to be retrieved.</param>
            <returns>The volume of the specified level.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.GetLevelDescription(System.Int32)">
            <summary>
Retrieves a level description of a texture resource.
</summary>
            <param name="level">Identifies the level whose description is to be retrieved.</param>
            <returns>The surface description of the specified level.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.AddDirtyBox">
            <summary>
Marks the entire texture as dirty.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.AddDirtyBox(SlimDX.Direct3D9.Box)">
            <summary>
Adds a dirty region to a texture resource.
</summary>
            <param name="box">A box specifying the dirty region to add.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.UnlockBox(System.Int32)">
            <summary>
Unlocks a previously locked region of a texture.
</summary>
            <param name="level">The level of the texture to unlock.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.LockBox(System.Int32,SlimDX.Direct3D9.Box,SlimDX.Direct3D9.LockFlags)">
            <summary>
Locks a section of a texture resource.
</summary>
            <param name="level">The level of the texture to lock.</param>
            <param name="box">The region on the texture to lock.</param>
            <param name="flags">Locking flags.</param>
            <returns>A <see cref="T:SlimDX.DataBox" /> describing the locked region.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.LockBox(System.Int32,SlimDX.Direct3D9.LockFlags)">
            <summary>
Locks a texture resource.
</summary>
            <param name="level">The level of the texture to lock.</param>
            <param name="flags">Locking flags.</param>
            <returns>A <see cref="T:SlimDX.DataBox" /> describing the locked region.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.Fill(SlimDX.Direct3D9.TextureShader)">
            <summary>
Uses a compiled HLSL shader function to fill each texel of each mip level of a given texture.
</summary>
            <param name="shader">A texture shader object that is used to fill the texture.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.Fill(SlimDX.Direct3D9.Fill3DCallback)">
            <summary>
Uses a user-provided function to fill each texel of each mip level of a given texture.
</summary>
            <param name="callback">A function that is used to fill the texture.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromFile(SlimDX.Direct3D9.Device,System.String)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromFile(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="depth">Depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="depth">Depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="depth">Depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="depth">Depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="depth">Depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="depth">Depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="depth">Depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[])">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="width">Width of the texture, in pixels.</param>
            <param name="height">Height of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.CheckRequirements(SlimDX.Direct3D9.Device,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool)">
            <summary>
Checks texture-creation parameters.
</summary>
            <param name="device">Device associated with the texture.</param>
            <param name="width">Requested width of the texture.</param>
            <param name="height">Requested height of the texture.</param>
            <param name="depth">Requested depth of the texture.</param>
            <param name="mipLevelCount">Requested number of mipmap levels for the texture.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">Requested format for the texture.</param>
            <param name="pool">Memory class where the resource will be placed.</param>
            <returns>A value type containing the proposed values to pass to the texture creation functions.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.Direct3D9.VolumeTexture" />.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.#ctor(SlimDX.Direct3D9.Device,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,System.IntPtr@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.VolumeTexture" /> class.
</summary>
            <param name="device">The device used to create the texture.</param>
            <param name="width">The width of the texture, in pixels.</param>
            <param name="height">The height of the texture, in pixels.</param>
            <param name="depth">The depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels in the texture. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="sharedHandle">The variable that will receive the shared handle for this resource.</param>
            <remarks>This method is only available in Direct3D9 Ex.</remarks>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTexture.#ctor(SlimDX.Direct3D9.Device,System.Int32,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.VolumeTexture" /> class.
</summary>
            <param name="device">The device used to create the texture.</param>
            <param name="width">The width of the texture, in pixels.</param>
            <param name="height">The height of the texture, in pixels.</param>
            <param name="depth">The depth of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels in the texture. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.VolumeTexture">
            <summary>
Represents a three dimensional texture resource.
</summary>
            <unmanaged>IDirect3DVolumeTexture9</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTextureRequirements.Equals(SlimDX.Direct3D9.VolumeTextureRequirements@,SlimDX.Direct3D9.VolumeTextureRequirements@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTextureRequirements.Equals(SlimDX.Direct3D9.VolumeTextureRequirements)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTextureRequirements.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTextureRequirements.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTextureRequirements.op_Inequality(SlimDX.Direct3D9.VolumeTextureRequirements,SlimDX.Direct3D9.VolumeTextureRequirements)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VolumeTextureRequirements.op_Equality(SlimDX.Direct3D9.VolumeTextureRequirements,SlimDX.Direct3D9.VolumeTextureRequirements)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.VolumeTextureRequirements.MipLevelCount">
            <summary>
The suggested mip level count.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VolumeTextureRequirements.Format">
            <summary>
The suggested surface format.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VolumeTextureRequirements.Depth">
            <summary>
The suggested depth of the texture, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VolumeTextureRequirements.Height">
            <summary>
The suggested height of the texture, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VolumeTextureRequirements.Width">
            <summary>
The suggested width of the texture, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.VolumeTextureRequirements">
            <summary>
Contains suggested texture creation parameters for volume textures.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.GetCubeMapSurface(SlimDX.Direct3D9.CubeMapFace,System.Int32)">
            <summary>
Retrieves the specified surface level.
</summary>
            <param name="face">The cube map face to operate on.</param>
            <param name="level">Identifies the level whose surface is to be retrieved.</param>
            <returns>The surface of the specified level.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.GetLevelDescription(System.Int32)">
            <summary>
Retrieves a level description of a texture resource.
</summary>
            <param name="level">Identifies the level whose description is to be retrieved.</param>
            <returns>The surface description of the specified level.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.AddDirtyRectangle(SlimDX.Direct3D9.CubeMapFace)">
            <summary>
Marks the entire texture face as dirty.
</summary>
            <param name="face">The cube map face to operate on.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.AddDirtyRectangle(SlimDX.Direct3D9.CubeMapFace,System.Drawing.Rectangle)">
            <summary>
Adds a dirty region to a texture resource.
</summary>
            <param name="face">The cube map face to operate on.</param>
            <param name="rectangle">A rectangle specifying the dirty region to add.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.UnlockRectangle(SlimDX.Direct3D9.CubeMapFace,System.Int32)">
            <summary>
Unlocks a previously locked region of a texture.
</summary>
            <param name="face">The cube map face to operate on.</param>
            <param name="level">The level of the texture to unlock.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.LockRectangle(SlimDX.Direct3D9.CubeMapFace,System.Int32,System.Drawing.Rectangle,SlimDX.Direct3D9.LockFlags)">
            <summary>
Locks a rectangle on a texture resource.
</summary>
            <param name="face">The cube map face to operate on.</param>
            <param name="level">The level of the texture to lock.</param>
            <param name="rectangle">The region on the texture to lock.</param>
            <param name="flags">Locking flags.</param>
            <returns>A <see cref="T:SlimDX.DataRectangle" /> describing the locked region.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.LockRectangle(SlimDX.Direct3D9.CubeMapFace,System.Int32,SlimDX.Direct3D9.LockFlags)">
            <summary>
Locks a texture resource.
</summary>
            <param name="face">The cube map face to operate on.</param>
            <param name="level">The level of the texture to lock.</param>
            <param name="flags">Locking flags.</param>
            <returns>A <see cref="T:SlimDX.DataRectangle" /> describing the locked region.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.Fill(SlimDX.Direct3D9.TextureShader)">
            <summary>
Uses a compiled HLSL shader function to fill each texel of each mip level of a given texture.
</summary>
            <param name="shader">A texture shader object that is used to fill the texture.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.Fill(SlimDX.Direct3D9.Fill3DCallback)">
            <summary>
Uses a user-provided function to fill each texel of each mip level of a given texture.
</summary>
            <param name="callback">A function that is used to fill the texture.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromFile(SlimDX.Direct3D9.Device,System.String)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromFile(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromFile(SlimDX.Direct3D9.Device,System.String,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Loads a texture from file.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="fileName">The name of the file containing the image.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Creates a texture from a stream.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="stream">The stream containing the texture data.</param>
            <param name="sizeBytes">The size of the data, in bytes.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[])">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.PaletteEntry[]@)">
            <summary>
Creates a texture from a specified block of memory.
</summary>
            <param name="device">The device to be associated with the texture.</param>
            <param name="memory">The memory block representing the texture.</param>
            <param name="size">Size of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels requested. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="filter">Combination of flags controlling how the image is filtered.</param>
            <param name="mipFilter">Combination of flags controlling how the mipmaps are filtered.</param>
            <param name="colorKey">Color value in the image to replace with black, or 0 to disable the color key.</param>
            <param name="imageInformation">When the method completes, contains additional information about the texture.</param>
            <param name="palette">When the method completes, contains the texture palette.</param>
            <returns>The created texture object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.CheckRequirements(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool)">
            <summary>
Checks texture-creation parameters.
</summary>
            <param name="device">Device associated with the texture.</param>
            <param name="size">Requested size of the texture.</param>
            <param name="mipLevelCount">Requested number of mipmap levels for the texture.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">Requested format for the texture.</param>
            <param name="pool">Memory class where the resource will be placed.</param>
            <returns>A value type containing the proposed values to pass to the texture creation functions.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.Direct3D9.CubeTexture" />.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.#ctor(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,System.IntPtr@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.CubeTexture" /> class.
</summary>
            <param name="device">The device used to create the texture.</param>
            <param name="edgeLength">The length of each edge of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels in the texture. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
            <param name="sharedHandle">The variable that will receive the shared handle for this resource.</param>
            <remarks>This method is only available in Direct3D9 Ex.</remarks>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTexture.#ctor(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.CubeTexture" /> class.
</summary>
            <param name="device">The device used to create the texture.</param>
            <param name="edgeLength">The length of each edge of the texture, in pixels.</param>
            <param name="levelCount">Number of mipmap levels in the texture. If set to 0, mipmaps will automatically be generated.</param>
            <param name="usage">The requested usage for the texture.</param>
            <param name="format">The surface format of the texture.</param>
            <param name="pool">The memory class into which the texture should be placed.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.CubeTexture">
            <summary>
Represents a cubic texture resource.
</summary>
            <unmanaged>IDirect3DCubeTexture9</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTextureRequirements.Equals(SlimDX.Direct3D9.CubeTextureRequirements@,SlimDX.Direct3D9.CubeTextureRequirements@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTextureRequirements.Equals(SlimDX.Direct3D9.CubeTextureRequirements)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTextureRequirements.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTextureRequirements.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTextureRequirements.op_Inequality(SlimDX.Direct3D9.CubeTextureRequirements,SlimDX.Direct3D9.CubeTextureRequirements)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CubeTextureRequirements.op_Equality(SlimDX.Direct3D9.CubeTextureRequirements,SlimDX.Direct3D9.CubeTextureRequirements)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.CubeTextureRequirements.MipLevelCount">
            <summary>
The suggested mip level count.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.CubeTextureRequirements.Format">
            <summary>
The suggested surface format.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.CubeTextureRequirements.Size">
            <summary>
The suggested size of the texture, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CubeTextureRequirements">
            <summary>
Contains suggested texture creation parameters for cube textures.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.Equals(SlimDX.Direct3D9.ImageInformation@,SlimDX.Direct3D9.ImageInformation@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.Equals(SlimDX.Direct3D9.ImageInformation)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.op_Inequality(SlimDX.Direct3D9.ImageInformation,SlimDX.Direct3D9.ImageInformation)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.op_Equality(SlimDX.Direct3D9.ImageInformation,SlimDX.Direct3D9.ImageInformation)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.FromStream(System.IO.Stream)">
            <summary>
Retrieves information about an image from a stream.
</summary>
            <param name="stream">Stream containing the image.</param>
            <returns>Information about the image.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.FromStream(System.IO.Stream,System.Boolean)">
            <summary>
Retrieves information about an image from a stream.
</summary>
            <param name="stream">Stream containing the image.</param>
            <param name="peek">
                <c>true</c> to preserve the stream position; <c>false</c> will move the stream pointer.</param>
            <returns>Information about the image.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.FromMemory(System.Byte[])">
            <summary>
Retrieves information about an image from memory.
</summary>
            <param name="memory">A block of memory containing the image.</param>
            <returns>Information about the image.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ImageInformation.FromFile(System.String)">
            <summary>
Retrieves information about an image file.
</summary>
            <param name="fileName">Name of the image file.</param>
            <returns>Information about the image.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.ImageInformation.ImageFileFormat">
            <summary>
The format of the image file.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ImageInformation.ResourceType">
            <summary>
The type of the texture stored in the file.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ImageInformation.Format">
            <summary>
The original format of the image.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ImageInformation.MipLevels">
            <summary>
Number of mip levels in the original image.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ImageInformation.Depth">
            <summary>
Depth of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ImageInformation.Height">
            <summary>
Height of the original image, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ImageInformation.Width">
            <summary>
Width of the original image, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ImageInformation">
            <summary>
Contains the description of the contents of an image file.
</summary>
            <unmanaged>D3DXIMAGE_INFO</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.TextureShader.FunctionStream">
            <summary>
Gets the raw shader stream.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TextureShader.ConstantBuffer">
            <summary>
Gets the raw stream of constant data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TextureShader.Description">
            <summary>
Gets the constant table description.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetDefaults">
            <summary>
Resets constant values to those defined in the shader.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValueTranspose(SlimDX.Direct3D9.EffectHandle,SlimDX.Matrix[])">
            <summary>
Sets an array of effect parameter values.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="values">The parameter values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValueTranspose(SlimDX.Direct3D9.EffectHandle,SlimDX.Matrix)">
            <summary>
Sets an effect parameter value.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="value">The parameter value.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,SlimDX.Matrix[])">
            <summary>
Sets an array of effect parameter values.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="values">The parameter values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,SlimDX.Matrix)">
            <summary>
Sets an effect parameter value.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="value">The parameter value.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,SlimDX.Color4[])">
            <summary>
Sets an array of effect parameter values.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="values">The parameter values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,SlimDX.Color4)">
            <summary>
Sets an effect parameter value.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="value">The parameter value.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,SlimDX.Vector4[])">
            <summary>
Sets an array of effect parameter values.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="values">The parameter values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,SlimDX.Vector4)">
            <summary>
Sets an effect parameter value.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="value">The parameter value.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,System.Single[])">
            <summary>
Sets an array of effect parameter values.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="values">The parameter values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,System.Single)">
            <summary>
Sets an effect parameter value.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="value">The parameter value.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,System.Int32[])">
            <summary>
Sets an array of effect parameter values.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="values">The parameter values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,System.Int32)">
            <summary>
Sets an effect parameter value.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="value">The parameter value.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,System.Boolean[])">
            <summary>
Sets an array of effect parameter values.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="values">The parameter values.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.SetValue(SlimDX.Direct3D9.EffectHandle,System.Boolean)">
            <summary>
Sets an effect parameter value.
</summary>
            <param name="parameter">The effect parameter.</param>
            <param name="value">The parameter value.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.GetConstantDescriptionArray(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets a list of descriptions for an array constant.
</summary>
            <param name="handle">The array handle.</param>
            <returns>The list of constant descriptions.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.GetConstantDescription(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets a description for a constant.
</summary>
            <param name="handle">The constant handle.</param>
            <returns>The description of the constant.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.GetConstantElement(SlimDX.Direct3D9.EffectHandle,System.Int32)">
            <summary>
Gets a constant from the constant table.
</summary>
            <param name="handle">The array handle.</param>
            <param name="index">The index of the constant.</param>
            <returns>A handle to the constant data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.GetConstant(SlimDX.Direct3D9.EffectHandle,System.String)">
            <summary>
Gets a constant by looking up its name.
</summary>
            <param name="parent">The parent handle.</param>
            <param name="name">The name of the constant.</param>
            <returns>A handle to the constant data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.GetConstant(SlimDX.Direct3D9.EffectHandle,System.Int32)">
            <summary>
Gets a constant by looking up its index.
</summary>
            <param name="parent">The parent handle.</param>
            <param name="index">The index of the constant.</param>
            <returns>A handle to the constant data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureShader.#ctor(SlimDX.DataStream)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.TextureShader" /> class.
</summary>
            <param name="stream">A stream of compiled shader data.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureShader">
            <summary>
Represents a compiled shader designed to fill textures with image data.
</summary>
            <unmanaged>ID3DXTextureShader</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.Effect.Pool">
            <summary>
Gets the pool of shared effect parameters.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Effect.Device">
            <summary>
Gets the device associated with the effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Effect.StateManager">
            <summary>
Gets or sets the effect state manager.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Effect.Technique">
            <summary>
Gets or sets the currently active technique.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.Disassemble(System.Boolean)">
            <summary>
Disassembles the effect.
</summary>
            <param name="enableColorCode">
                <c>true</c> to enable color coding to make the disassembly easier to read, <c>false</c> to disable color coding.</param>
            <returns>
A <see cref="T:SlimDX.DataStream" /> that contains the disassembled effect.
</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.SetRawValue(SlimDX.Direct3D9.EffectHandle,SlimDX.DataStream,System.Int32,System.Int32)">
            <summary>
Sets a contiguous range of shader constants.
</summary>
            <param name="handle">Handle to the value to set.</param>
            <param name="data">The data used to set the handle.</param>
            <param name="offset">The starting offset into the data, in bytes.</param>
            <param name="count">The number of bytes of data to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.OnResetDevice">
            <summary>Ccalled when the Direct3D device has been reset.</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.OnLostDevice">
            <summary>Called when the Direct3D device has been lost.</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.ValidateTechnique(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Validates a technique.
</summary>
            <param name="technique">Handle of the technique.</param>
            <returns>
                <c>true</c> if the technique is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FindNextValidTechnique(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Searches for the next valid technique.
</summary>
            <param name="technique">The starting point for the search.</param>
            <returns>The next valid technique.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.CommitChanges">
            <summary>
Propagates state changes that occur inside of an active pass to the device before rendering.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.IsParameterUsed(SlimDX.Direct3D9.EffectHandle,SlimDX.Direct3D9.EffectHandle)">
            <summary>
Determines whether a parameter is used by a technique.
</summary>
            <param name="parameter">Handle of the parameter.</param>
            <param name="technique">Handle of the technique.</param>
            <returns>
                <c>true</c> if the parameter is used by the technique; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.DeleteParameterBlock(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Deletes a stored parameter state block.
</summary>
            <param name="parameterBlock">Handle to the parameter block.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.ApplyParameterBlock(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Applies a parameter state block to the effect.
</summary>
            <param name="parameterBlock">Handle to the parameter block.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.EndParameterBlock">
            <summary>
Stops capturing state changes.
</summary>
            <returns>A handle to the parameter state block.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.BeginParameterBlock">
            <summary>
Starts capturing state changes in a parameter block.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.EndPass">
            <summary>
Ends the current effect pass.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.BeginPass(System.Int32)">
            <summary>
Begins an effect pass.
</summary>
            <param name="pass">Index of the pass to start.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.End">
            <summary>
Ends the active rendering technique.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.Begin">
            <summary>
Starts an active technique.
</summary>
            <returns>The number of passes required to complete the technique.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.Begin(SlimDX.Direct3D9.FX)">
            <summary>
Starts an active technique.
</summary>
            <param name="flags">Rendering flags.</param>
            <returns>The number of passes required to complete the technique.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.Clone(SlimDX.Direct3D9.Device)">
            <summary>
Creates a copy of the effect.
</summary>
            <param name="device">The device associated with the effect.</param>
            <returns>The cloned effect.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromFile(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Creates an effect from a file.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="fileName">The name of the source file containing the effect data.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromFile(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Creates an effect from a file.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="fileName">The name of the source file containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromFile(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags,SlimDX.Direct3D9.EffectPool)">
            <summary>
Creates an effect from a file.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="fileName">The name of the source file containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <param name="pool">The pool used for shared effect parameters.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromFile(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags,SlimDX.Direct3D9.EffectPool,System.String@)">
            <summary>
Creates an effect from a file.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="fileName">The name of the source file containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <param name="pool">The pool used for shared effect parameters.</param>
            <param name="compilationErrors">When the method completes, contains compilation errors and warnings.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromString(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Creates an effect from a string.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="sourceData">A string containing the effect data.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromString(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Creates an effect from a string.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="sourceData">A string containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromString(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags,SlimDX.Direct3D9.EffectPool)">
            <summary>
Creates an effect from a string.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="sourceData">A string containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <param name="pool">The pool used for shared effect parameters.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromString(SlimDX.Direct3D9.Device,System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags,SlimDX.Direct3D9.EffectPool,System.String@)">
            <summary>
Creates an effect from a string.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="sourceData">A string containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <param name="pool">The pool used for shared effect parameters.</param>
            <param name="compilationErrors">When the method completes, contains compilation errors and warnings.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Creates an effect from a stream.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="stream">A stream containing the effect data.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Creates an effect from a stream.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="stream">A stream containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags,SlimDX.Direct3D9.EffectPool)">
            <summary>
Creates an effect from a stream.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="stream">A stream containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <param name="pool">The pool used for shared effect parameters.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromStream(SlimDX.Direct3D9.Device,System.IO.Stream,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags,SlimDX.Direct3D9.EffectPool,System.String@)">
            <summary>
Creates an effect from a stream.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="stream">A stream containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <param name="pool">The pool used for shared effect parameters.</param>
            <param name="compilationErrors">When the method completes, contains compilation errors and warnings.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Creates an effect from a block of memory.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="memory">A block of memory containing the effect data.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Creates an effect from a block of memory.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="memory">A block of memory containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags,SlimDX.Direct3D9.EffectPool)">
            <summary>
Creates an effect from a block of memory.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="memory">A block of memory containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <param name="pool">The pool used for shared effect parameters.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.FromMemory(SlimDX.Direct3D9.Device,System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,SlimDX.Direct3D9.ShaderFlags,SlimDX.Direct3D9.EffectPool,System.String@)">
            <summary>
Creates an effect from a block of memory.
</summary>
            <param name="device">The device used to create the effect.</param>
            <param name="memory">A block of memory containing the effect data.</param>
            <param name="preprocessorDefines">A set of preprocessor definitions.</param>
            <param name="includeFile">An include file handler.</param>
            <param name="skipConstants">A set of constants that will be ignored by the effect system.</param>
            <param name="flags">A set of flags describing effect creation options.</param>
            <param name="pool">The pool used for shared effect parameters.</param>
            <param name="compilationErrors">When the method completes, contains compilation errors and warnings.</param>
            <returns>The created effect object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Effect.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.Direct3D9.Effect" />.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Effect">
            <summary>
Represents a Direct3D rendering effect.
</summary>
            <unmanaged>ID3DXEffect</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.EffectPool">
            <summary>Applications use pools for parameters that are shared across effects.</summary>
            <unmanaged>ID3DXEffectPool</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.IResettable.OnResetDevice">
            <summary>Should be called when the Direct3D device has been reset.</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IResettable.OnLostDevice">
            <summary>Should be called when the Direct3D device has been lost.</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="T:SlimDX.Direct3D9.IResettable">
            <summary>Interface for classes which can respond to device lost and reset events.</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.BaseEffect.Description">
            <summary>
Gets the effect description.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetVertexShader(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets a vertex shader from the effect.
</summary>
            <param name="parameter">The effect parameter identifying the shader.</param>
            <returns>The requested vertex shader.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetPixelShader(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets a pixel shader from the effect.
</summary>
            <param name="parameter">The effect parameter identifying the shader.</param>
            <returns>The requested pixel shader.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.SetString(SlimDX.Direct3D9.EffectHandle,System.String)">
            <summary>
Sets the value of a parameter using the specified data.
</summary>
            <param name="parameter">The parameter whose value is to be set.</param>
            <param name="value">The new value for the parameter.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetString(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets the value of the specified parameter as a string.
</summary>
            <param name="parameter">Handle of the parameter.</param>
            <returns>The string value of the parameter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.SetTexture(SlimDX.Direct3D9.EffectHandle,SlimDX.Direct3D9.BaseTexture)">
            <summary>
Sets the value of a parameter using the specified data.
</summary>
            <param name="parameter">The parameter whose value is to be set.</param>
            <param name="value">The new value for the parameter.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetTexture(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets the value of the specified parameter as a texture.
</summary>
            <param name="parameter">Handle of the parameter.</param>
            <returns>The texture value of the parameter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.SetValue``1(SlimDX.Direct3D9.EffectHandle,``0[])">
            <summary>
Sets the value of a parameter using the specified data.
</summary>
            <param name="parameter">The array parameter whose value is to be set.</param>
            <param name="values">The array of new values for the array parameter.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.SetValue``1(SlimDX.Direct3D9.EffectHandle,``0)">
            <summary>
Sets the value of a parameter using the specified data.
</summary>
            <param name="parameter">The parameter whose value is to be set.</param>
            <param name="value">The new value for the parameter.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetValue``1(SlimDX.Direct3D9.EffectHandle,System.Int32)">
            <summary>
Gets the value of the specified parameter.
</summary>
            <param name="parameter">Handle of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetValue``1(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets the value of the specified parameter.
</summary>
            <param name="parameter">Handle of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetPassDescription(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets the description of a pass.
</summary>
            <param name="handle">Handle to the pass.</param>
            <returns>The pass description.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetPass(SlimDX.Direct3D9.EffectHandle,System.String)">
            <summary>
Gets the handle of a pass.
</summary>
            <param name="technique">Handle of the parent technique.</param>
            <param name="name">Name of the pass.</param>
            <returns>The handle of the pass.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetPass(SlimDX.Direct3D9.EffectHandle,System.Int32)">
            <summary>
Gets the handle of a pass.
</summary>
            <param name="technique">Handle of the parent technique.</param>
            <param name="index">Pass index.</param>
            <returns>The handle of the pass.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetTechniqueDescription(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets a technique description.
</summary>
            <param name="handle">Handle to the technique.</param>
            <returns>The technique description.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetTechnique(System.String)">
            <summary>
Gets the handle of a technique.
</summary>
            <param name="name">Name of the technique.</param>
            <returns>The handle of the technique.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetTechnique(System.Int32)">
            <summary>
Gets the handle of a technique.
</summary>
            <param name="index">Technique index.</param>
            <returns>The handle of the technique.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetFunctionDescription(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets a function description.
</summary>
            <param name="handle">Handle to the function.</param>
            <returns>The function description.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetFunction(System.String)">
            <summary>
Gets the handle of a function.
</summary>
            <param name="name">Name of the function.</param>
            <returns>The handle of the function.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetFunction(System.Int32)">
            <summary>
Gets the handle of a function.
</summary>
            <param name="index">Function index.</param>
            <returns>The handle of the function.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetParameterDescription(SlimDX.Direct3D9.EffectHandle)">
            <summary>
Gets a parameter or annotation description.
</summary>
            <param name="parameter">Handle of the parameter or annotation.</param>
            <returns>The description of the specified parameter or annotation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetParameterElement(SlimDX.Direct3D9.EffectHandle,System.Int32)">
            <summary>
Gets the handle of an array element parameter.
</summary>
            <param name="parameter">Handle of the array.</param>
            <param name="index">Array parameter index.</param>
            <returns>The handle of the parameter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetParameterBySemantic(SlimDX.Direct3D9.EffectHandle,System.String)">
            <summary>
Gets the handle of a parameter by looking up its semantic.
</summary>
            <param name="parameter">Handle of the parameter, or <c>null</c> for top-level parameters.</param>
            <param name="name">The name of the semantic.</param>
            <returns>The handle of the parameter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetParameter(SlimDX.Direct3D9.EffectHandle,System.String)">
            <summary>
Gets the handle of a parameter.
</summary>
            <param name="parameter">Handle of the parameter, or <c>null</c> for top-level parameters.</param>
            <param name="name">Name of the parameter.</param>
            <returns>The handle of the parameter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetParameter(SlimDX.Direct3D9.EffectHandle,System.Int32)">
            <summary>
Gets the handle of a parameter.
</summary>
            <param name="parameter">Handle of the parameter, or <c>null</c> for top-level parameters.</param>
            <param name="index">Parameter index.</param>
            <returns>The handle of the parameter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetAnnotation(SlimDX.Direct3D9.EffectHandle,System.String)">
            <summary>
Gets the handle of an annotation.
</summary>
            <param name="handle">Handle of a technique, pass, or top-level parameter.</param>
            <param name="name">Name of the annotation.</param>
            <returns>The handle of the annotation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.GetAnnotation(SlimDX.Direct3D9.EffectHandle,System.Int32)">
            <summary>
Gets the handle of an annotation.
</summary>
            <param name="handle">Handle of a technique, pass, or top-level parameter.</param>
            <param name="index">Annotation index.</param>
            <returns>The handle of the annotation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseEffect.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.BaseEffect" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.BaseEffect">
            <summary>
Provides methods for getting and setting effect parameters such as constants, functions, shaders, and techniques.
</summary>
            <unmanaged>ID3DXBaseEffect</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.ParameterDescription.Equals(SlimDX.Direct3D9.ParameterDescription@,SlimDX.Direct3D9.ParameterDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ParameterDescription.Equals(SlimDX.Direct3D9.ParameterDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ParameterDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ParameterDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ParameterDescription.op_Inequality(SlimDX.Direct3D9.ParameterDescription,SlimDX.Direct3D9.ParameterDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ParameterDescription.op_Equality(SlimDX.Direct3D9.ParameterDescription,SlimDX.Direct3D9.ParameterDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Bytes">
            <summary>
The size of the parameter, in bytes.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Flags">
            <summary>
Flags describing the attributes of the parameter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.StructMembers">
            <summary>
Number of structure members.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Annotations">
            <summary>
Number of annotations applied to the parameter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Elements">
            <summary>
Number of elements in the array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Columns">
            <summary>
Number of columns in the array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Rows">
            <summary>
Number of rows in the array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Type">
            <summary>
The parameter type.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Class">
            <summary>
The parameter class.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Semantic">
            <summary>
Semantic meaning of the parameter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ParameterDescription.Name">
            <summary>
Name of the parameter.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ParameterDescription">
            <summary>
Describes a parameter used by an effect.
</summary>
            <unmanaged>D3DXPARAMETER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.PassDescription.Equals(SlimDX.Direct3D9.PassDescription@,SlimDX.Direct3D9.PassDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PassDescription.Equals(SlimDX.Direct3D9.PassDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PassDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PassDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PassDescription.op_Inequality(SlimDX.Direct3D9.PassDescription,SlimDX.Direct3D9.PassDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PassDescription.op_Equality(SlimDX.Direct3D9.PassDescription,SlimDX.Direct3D9.PassDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.PassDescription.PixelShaderFunction">
            <summary>
Pointer to the pixel shader function.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PassDescription.VertexShaderFunction">
            <summary>
Pointer to the vertex shader function.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PassDescription.Annotations">
            <summary>
The number of annotations contained by the pass.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PassDescription.Name">
            <summary>
The name of the pass.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PassDescription">
            <summary>
Describes a pass used by an effect.
</summary>
            <unmanaged>D3DXPASS_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.TechniqueDescription.Equals(SlimDX.Direct3D9.TechniqueDescription@,SlimDX.Direct3D9.TechniqueDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TechniqueDescription.Equals(SlimDX.Direct3D9.TechniqueDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TechniqueDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TechniqueDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TechniqueDescription.op_Inequality(SlimDX.Direct3D9.TechniqueDescription,SlimDX.Direct3D9.TechniqueDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TechniqueDescription.op_Equality(SlimDX.Direct3D9.TechniqueDescription,SlimDX.Direct3D9.TechniqueDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.TechniqueDescription.Annotations">
            <summary>
The number of annotations contained by the technique.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TechniqueDescription.Passes">
            <summary>
The number of passes in the technique.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TechniqueDescription.Name">
            <summary>
The name of the technique.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TechniqueDescription">
            <summary>
Describes a technique used by an effect.
</summary>
            <unmanaged>D3DXTECHNIQUE_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.FunctionDescription.Equals(SlimDX.Direct3D9.FunctionDescription@,SlimDX.Direct3D9.FunctionDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.FunctionDescription.Equals(SlimDX.Direct3D9.FunctionDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.FunctionDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.FunctionDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.FunctionDescription.op_Inequality(SlimDX.Direct3D9.FunctionDescription,SlimDX.Direct3D9.FunctionDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.FunctionDescription.op_Equality(SlimDX.Direct3D9.FunctionDescription,SlimDX.Direct3D9.FunctionDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.FunctionDescription.Annotations">
            <summary>
The number of annotation contained by the function.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.FunctionDescription.Name">
            <summary>
The name of the function.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.FunctionDescription">
            <summary>
Describes a function used by an effect.
</summary>
            <unmanaged>D3DXFUNCTION_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.EffectDescription.Equals(SlimDX.Direct3D9.EffectDescription@,SlimDX.Direct3D9.EffectDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.EffectDescription.Equals(SlimDX.Direct3D9.EffectDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.EffectDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.EffectDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.EffectDescription.op_Inequality(SlimDX.Direct3D9.EffectDescription,SlimDX.Direct3D9.EffectDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.EffectDescription.op_Equality(SlimDX.Direct3D9.EffectDescription,SlimDX.Direct3D9.EffectDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.EffectDescription.Functions">
            <summary>
Number of functions in the effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.EffectDescription.Techniques">
            <summary>
Number of techniques in the effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.EffectDescription.Parameters">
            <summary>
Number of parameters in the effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.EffectDescription.Creator">
            <summary>
The name of the effect's creator.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.EffectDescription">
            <summary>
Describes an effect object.
</summary>
            <unmanaged>D3DXEFFECT_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.EffectHandle">
            <summary>A handle to an effect or an object inside an effect.</summary>
            <unmanaged>D3DXHANDLE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.BaseTexture.LevelOfDetail">
            <summary>
Gets or sets the level of detail for the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.BaseTexture.LevelCount">
            <summary>
Gets the number of texture levels in a multilevel texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.BaseTexture.AutoMipGenerationFilter">
            <summary>
Gets or sets the filter used to automatically generate mipmaps.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.ToFile(SlimDX.Direct3D9.BaseTexture,System.String,SlimDX.Direct3D9.ImageFileFormat,SlimDX.Direct3D9.PaletteEntry[])">
            <summary>
Saves a texture to a file.
</summary>
            <param name="texture">The texture containing the image to save.</param>
            <param name="fileName">The name of the file to save to.</param>
            <param name="format">The file format to use when saving.</param>
            <param name="palette">The texture palette.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.ToFile(SlimDX.Direct3D9.BaseTexture,System.String,SlimDX.Direct3D9.ImageFileFormat)">
            <summary>
Saves a texture to a file.
</summary>
            <param name="texture">The texture containing the image to save.</param>
            <param name="fileName">The name of the file to save to.</param>
            <param name="format">The file format to use when saving.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.ToStream(SlimDX.Direct3D9.BaseTexture,SlimDX.Direct3D9.ImageFileFormat,SlimDX.Direct3D9.PaletteEntry[])">
            <summary>
Saves a texture to a stream.
</summary>
            <param name="texture">The texture containing the image to save.</param>
            <param name="format">The file format to use when saving.</param>
            <param name="palette">The texture palette.</param>
            <returns>A <see cref="T:SlimDX.DataStream" /> containing the texture image.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.ToStream(SlimDX.Direct3D9.BaseTexture,SlimDX.Direct3D9.ImageFileFormat)">
            <summary>
Saves a texture to a stream.
</summary>
            <param name="texture">The texture containing the image to save.</param>
            <param name="format">The file format to use when saving.</param>
            <returns>A <see cref="T:SlimDX.DataStream" /> containing the texture image.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.GenerateMipSublevels">
            <summary>
Generates mipmap sublevels.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.FilterTexture(System.Int32,SlimDX.Direct3D9.Filter)">
            <summary>
Filters mipmap levels of a texture.
</summary>
            <param name="sourceLevel">The mipmap level whose image is used to generate the subsequent levels.</param>
            <param name="filter">Set of filtering options for the mipmap.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.FilterTexture(System.Int32,SlimDX.Direct3D9.Filter,SlimDX.Direct3D9.PaletteEntry[])">
            <summary>
Filters mipmap levels of a texture.
</summary>
            <param name="sourceLevel">The mipmap level whose image is used to generate the subsequent levels.</param>
            <param name="filter">Set of filtering options for the mipmap.</param>
            <param name="palette">The texture palette.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.Direct3D9.BaseTexture" />.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.BaseTexture.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.BaseTexture" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.BaseTexture">
            <summary>
Represents a base class for all texture resources.
</summary>
            <unmanaged>IDirect3DBaseTexture9</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Volume">
            <summary>Applications use the methods of the Volume class to manipulate volume resources.</summary>
            <unmanaged>IDirect3DVolume9</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.VolumeDescription">
            <summary>Describes a volume.</summary>
            <unmanaged>D3DVOLUME_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Box">
            <summary>Defines a volume.</summary>
            <unmanaged>D3DBOX</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.Surface.Description">
            <summary>Returns a description of the surface.</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.UnlockRectangle">
            <summary>Unlocks a rectangle on the surface.</summary>
            <returns>A result code indicating whether the unlock was successful.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.LockRectangle(System.Drawing.Rectangle,SlimDX.Direct3D9.LockFlags)">
            <summary>Locks a rectangle on the surface.</summary>
            <param name="rect">The area to lock.</param>
            <param name="flags">Combination of flags describing the type of lock to perform.</param>
            <returns>Data describing the locked area.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.LockRectangle(SlimDX.Direct3D9.LockFlags)">
            <summary>Locks a rectangle on the surface. </summary>
            <param name="flags">Combination of flags describing the type of lock to perform.</param>
            <returns>Data describing the locked area.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.FromStream(SlimDX.Direct3D9.Surface,System.IO.Stream,SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.Format,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,SlimDX.Direct3D9.PaletteEntry[],SlimDX.Direct3D9.PaletteEntry[])">
            <summary />
            <param name="surface" />
            <param name="stream" />
            <param name="filter" />
            <param name="colorKey" />
            <param name="sourceFormat" />
            <param name="sourcePitch" />
            <param name="sourceRectangle" />
            <param name="destinationRectangle" />
            <param name="sourcePalette" />
            <param name="destinationPalette" />
            <returns>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.FromMemory(SlimDX.Direct3D9.Surface,System.Byte[],SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.Format,System.Int32,System.Drawing.Rectangle)">
            <summary>Loads a surface from memory.</summary>
            <param name="surface">The destination surface that will receive the image.</param>
            <param name="memory">The array containing the surface data</param>
            <param name="filter">Combination of one or more flags controlling how the image is filtered.</param>
            <param name="colorKey">A color value to replace with transparent black, or 0 to disable colorkey.</param>
            <param name="sourceFormat">Pixel format of the source image.</param>
            <param name="sourcePitch">Surface pitch of the source image, in bytes.</param>
            <param name="sourceRectangle">Specifies the dimensions of the source image.</param>
            <returns>A result code indicating success or failure..</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.FromMemory(SlimDX.Direct3D9.Surface,System.Byte[],SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.Format,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>Loads a surface from memory.</summary>
            <param name="surface">The destination surface that will receive the image.</param>
            <param name="memory">The array containing the surface data</param>
            <param name="filter">Combination of one or more flags controlling how the image is filtered.</param>
            <param name="colorKey">A color value to replace with transparent black, or 0 to disable colorkey.</param>
            <param name="sourceFormat">Pixel format of the source image.</param>
            <param name="sourcePitch">Surface pitch of the source image, in bytes.</param>
            <param name="sourceRectangle">Specifies the dimensions of the source image.</param>
            <param name="destinationRectangle">Specifies the destination rectangle to use.</param>
            <returns>A result code indicating success or failure.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.FromMemory(SlimDX.Direct3D9.Surface,System.Byte[],SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.Format,System.Int32,System.Drawing.Rectangle,SlimDX.Direct3D9.PaletteEntry[],SlimDX.Direct3D9.PaletteEntry[])">
            <summary>Loads a surface from memory.</summary>
            <param name="surface">The destination surface that will receive the image.</param>
            <param name="memory">The array containing the surface data</param>
            <param name="filter">Combination of one or more flags controlling how the image is filtered.</param>
            <param name="colorKey">A color value to replace with transparent black, or 0 to disable colorkey.</param>
            <param name="sourceFormat">Pixel format of the source image.</param>
            <param name="sourcePitch">Surface pitch of the source image, in bytes.</param>
            <param name="sourceRectangle">Specifies the dimensions of the source image.</param>
            <param name="sourcePalette">The source image palette (256 colors).</param>
            <param name="destinationPalette">The destination palette (256 colors).</param>
            <returns>A result code indicating success or failure.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.FromMemory(SlimDX.Direct3D9.Surface,System.Byte[],SlimDX.Direct3D9.Filter,System.Int32,SlimDX.Direct3D9.Format,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,SlimDX.Direct3D9.PaletteEntry[],SlimDX.Direct3D9.PaletteEntry[])">
            <summary>Loads a surface from memory.</summary>
            <param name="surface">The destination surface that will receive the image.</param>
            <param name="memory">The array containing the surface data</param>
            <param name="filter">Combination of one or more flags controlling how the image is filtered.</param>
            <param name="colorKey">A color value to replace with transparent black, or 0 to disable colorkey.</param>
            <param name="sourceFormat">Pixel format of the source image.</param>
            <param name="sourcePitch">Surface pitch of the source image, in bytes.</param>
            <param name="sourceRectangle">Specifies the dimensions of the source image.</param>
            <param name="destinationRectangle">Specifies the destination rectangle to use.</param>
            <param name="sourcePalette">The source image palette (256 colors).</param>
            <param name="destinationPalette">The destination palette (256 colors).</param>
            <returns>A result code indicating success or failure.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.CreateDepthStencil(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.MultisampleType,System.Int32,System.Boolean,System.IntPtr@)">
            <summary>Creates a depth stencil surface that can optionally be shared.</summary>
            <param name="device">The device to use when creating the surface.</param>
            <param name="width">The width of the surface, in pixels.</param>
            <param name="height">The height of the surface, in pixels.</param>
            <param name="format">Describes the format to use.</param>
            <param name="multisampleType">The multisample type of the buffer.</param>
            <param name="multisampleQuality">The multisampling quality level.</param>
            <param name="discard">Whether or not the contents of the surface should be discarded after use.</param>
            <returns>A newly created depth-stencil surface.</returns>
            <unmanaged>IDirect3DDevice9::CreateDepthStencilSurface</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.CreateOffscreenPlain(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool,System.IntPtr@)">
            <summary>Creates an offscreen surface that can optionally be shared.</summary>
            <param name="device">The device to use when creating the surface.</param>
            <param name="width">The width of the surface, in pixels.</param>
            <param name="height">The height of the surface, in pixels.</param>
            <param name="format">Describes the format to use.</param>
            <param name="pool">The memory pool to create the surface in.</param>
            <returns>A newly created offscreen surface..</returns>
            <unmanaged>IDirect3DDevice9::CreateOffscreenPlainSurface</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.CreateRenderTarget(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.MultisampleType,System.Int32,System.Boolean,System.IntPtr@)">
            <summary>Creates a render target surface that can optionally be shared.</summary>
            <param name="device">The device to use when creating the surface.</param>
            <param name="width">The width of the render target surface, in pixels.</param>
            <param name="height">The height of the render target surface, in pixels.</param>
            <param name="format">The format to use for this render target.</param>
            <param name="multisampleType">The multisample type of the buffer.</param>
            <param name="multisampleQuality">The multisampling quality level.</param>
            <param name="lockable">Specifies whether this surface should be lockable.</param>
            <returns>A newly created render target surface.</returns>
            <unmanaged>IDirect3DDevice9::CreateRenderTarget</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.CreateDepthStencil(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.MultisampleType,System.Int32,System.Boolean)">
            <summary>Creates a depth stencil surface.</summary>
            <param name="device">The device to use when creating the surface.</param>
            <param name="width">The width of the surface, in pixels.</param>
            <param name="height">The height of the surface, in pixels.</param>
            <param name="format">Describes the format to use.</param>
            <param name="multisampleType">The multisample type of the buffer.</param>
            <param name="multisampleQuality">The multisampling quality level.</param>
            <param name="discard">Whether or not the contents of the surface should be discarded after use.</param>
            <returns>A newly created depth-stencil surface.</returns>
            <unmanaged>IDirect3DDevice9::CreateDepthStencilSurface</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.CreateOffscreenPlain(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Pool)">
            <summary>Creates an offscreen surface.</summary>
            <param name="device">The device to use when creating the surface.</param>
            <param name="width">The width of the surface, in pixels.</param>
            <param name="height">The height of the surface, in pixels.</param>
            <param name="format">Describes the format to use.</param>
            <param name="pool">The memory pool to create the surface in.</param>
            <returns>A newly created offscreen surface..</returns>
            <unmanaged>IDirect3DDevice9::CreateOffscreenPlainSurface</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Surface.CreateRenderTarget(SlimDX.Direct3D9.Device,System.Int32,System.Int32,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.MultisampleType,System.Int32,System.Boolean)">
            <summary>Creates a render target surface.</summary>
            <param name="device">The device to use when creating the surface.</param>
            <param name="width">The width of the render target surface, in pixels.</param>
            <param name="height">The height of the render target surface, in pixels.</param>
            <param name="format">The format to use for this render target.</param>
            <param name="multisampleType">The multisample type of the buffer.</param>
            <param name="multisampleQuality">The multisampling quality level.</param>
            <param name="lockable">Specifies whether this surface should be lockable.</param>
            <returns>A newly created render target surface.</returns>
            <unmanaged>IDirect3DDevice9::CreateRenderTarget</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Surface">
            <summary>Applications use the methods of the Surface class to query and prepare surfaces.</summary>
            <unmanaged>IDirect3DSurface9</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.SurfaceDescription">
            <summary>Describes a surface.</summary>
            <unmanaged>D3DSURFACE_DESC</unmanaged>
        </member>
        <member name="P:SlimDX.DataRectangle.Data">
            <summary>
Gets the <see cref="T:SlimDX.DataStream" /> containing the actual data bytes.
</summary>
        </member>
        <member name="P:SlimDX.DataRectangle.Pitch">
            <summary>
Gets or sets the number of bytes of data between two consecutive (1D) rows of data.
</summary>
        </member>
        <member name="M:SlimDX.DataRectangle.#ctor(System.Int32,SlimDX.DataStream)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DataRectangle" /> class.
</summary>
            <param name="pitch">The row pitch, in bytes.</param>
            <param name="data">The data.</param>
        </member>
        <member name="T:SlimDX.DataRectangle">
            <summary>
A DataRectangle provides supporting information for a <see cref="T:SlimDX.DataStream" /> whose
data is organized within two dimensions (a rectangle).
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.CreateWithSwapChain(SlimDX.DXGI.Adapter,SlimDX.Direct3D10.DriverType,SlimDX.Direct3D10.DeviceCreationFlags,SlimDX.DXGI.SwapChainDescription,SlimDX.Direct3D10.Device@,SlimDX.DXGI.SwapChain@)">
            <summary>
Creates a new device and swap chain.
</summary>
            <param name="adapter">The display adapter to associate the device with when creating a hardware device.</param>
            <param name="driverType">The device driver type.</param>
            <param name="flags">Flags that indicate which device API layers to enable.</param>
            <param name="swapChainDescription">Swap chain properties.</param>
            <param name="device">The newly-created device.</param>
            <param name="swapChain">The newly-created swap chain.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.SetPredication(SlimDX.Direct3D10.Predicate,System.Boolean)">
            <summary>
Sets a rendering predicate.
</summary>
            <param name="predicate">The predicate to set.</param>
            <param name="predicateValue">If true, rendering will be affected when the predicate's conditions are met. Otherwise,
rendering will be affected when the predicate's conditions are not met.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.GenerateMips(SlimDX.Direct3D10.ShaderResourceView)">
            <summary>
Generates mipmaps for the specified shader resource.
</summary>
            <param name="view">A view of the resource to generate mipmaps for.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.Flush">
            <summary>
Sends queued commands in the command buffer to the GPU.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.DrawAuto">
            <summary>
Renders primitive data of an unknown size that was created by a geometry shader.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.DrawIndexedInstanced(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Renders indexed, instanced primitive data.
</summary>
            <param name="indexCountPerInstance">The number of indices to use per index.</param>
            <param name="instanceCount">The number of instances to render.</param>
            <param name="startIndexLocation">The index of the first index.</param>
            <param name="baseVertexLocation">The index of the first vertex.</param>
            <param name="startInstanceLocation">The index of the first instance.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.DrawIndexed(System.Int32,System.Int32,System.Int32)">
            <summary>
Renders indexed, non-instanced primitive data.
</summary>
            <param name="indexCount">The number of indices to use.</param>
            <param name="startIndexLocation">The index of the first index.</param>
            <param name="baseVertexLocation">The index of the first vertex.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.DrawInstanced(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Renders non-indexed, instanced primitive data.
</summary>
            <param name="vertexCountPerInstance">The number of vertices to use per index.</param>
            <param name="instanceCount">The number of instances to render.</param>
            <param name="startVertexLocation">The index of the first vertex.</param>
            <param name="startInstanceLocation">The index of the first instance.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.Draw(System.Int32,System.Int32)">
            <summary>
Renders non-indexed, non-instanced primitive data.
</summary>
            <param name="vertexCount">The number of vertices to use.</param>
            <param name="startVertexLocation">The index of the first vertex.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.UpdateSubresource(SlimDX.DataBox,SlimDX.Direct3D10.Resource,System.Int32,SlimDX.Direct3D10.ResourceRegion)">
            <summary>
Copies data from the CPU to to a non-mappable subresource region.
</summary>
            <param name="source">The source data.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="region">The destination region within the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.UpdateSubresource(SlimDX.DataBox,SlimDX.Direct3D10.Resource,System.Int32)">
            <summary>
Copies data from the CPU to to a non-mappable subresource region.
</summary>
            <param name="source">The source data.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.ResolveSubresource(SlimDX.Direct3D10.Resource,System.Int32,SlimDX.Direct3D10.Resource,System.Int32,SlimDX.DXGI.Format)">
            <summary>
Copies a multisampled resource into a non-multisampled resource.
</summary>
            <param name="source">The source resource.</param>
            <param name="sourceSubresource">The source subresource.</param>
            <param name="destination">The destination resource.</param>
            <param name="destinationSubresource">The destination subresource.</param>
            <param name="format">The format that indicates how the multisampled resource will be resolved.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.CopySubresourceRegion(SlimDX.Direct3D10.Resource,System.Int32,SlimDX.Direct3D10.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Copies an entire region of a resource's subresource data using the GPU.
</summary>
            <param name="source">The source resource.</param>
            <param name="sourceSubresource">The source subresource.</param>
            <param name="destination">The destination resource.</param>
            <param name="destinationSubresource">The destination subresource.</param>
            <param name="x">The X offset between the source region origin and the destination location.</param>
            <param name="y">The Y offset between the source region origin and the destination location.</param>
            <param name="z">The Z offset between the source region origin and the destination location.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.CopySubresourceRegion(SlimDX.Direct3D10.Resource,System.Int32,SlimDX.Direct3D10.ResourceRegion,SlimDX.Direct3D10.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Copies a portion of a resource's data using the GPU.
</summary>
            <param name="source">The source resource.</param>
            <param name="sourceSubresource">The source subresource.</param>
            <param name="region">The source region.</param>
            <param name="destination">The destination resource.</param>
            <param name="destinationSubresource">The destination subresource.</param>
            <param name="x">The X offset between the source region origin and the destination location.</param>
            <param name="y">The Y offset between the source region origin and the destination location.</param>
            <param name="z">The Z offset between the source region origin and the destination location.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.CopyResource(SlimDX.Direct3D10.Resource,SlimDX.Direct3D10.Resource)">
            <summary>
Copies resource data using the GPU.
</summary>
            <param name="source">The source resource.</param>
            <param name="destination">The destination resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.ClearAllObjects">
            <summary>
Clears all resource bindings from the device.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.ClearState">
            <summary>
Restores all device state to defaults.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.ClearRenderTargetView(SlimDX.Direct3D10.RenderTargetView,SlimDX.Color4)">
            <summary>
Clears the specified render target resource.
</summary>
            <param name="view">The view of the resource to clear.</param>
            <param name="color">The color to clear to.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.ClearDepthStencilView(SlimDX.Direct3D10.DepthStencilView,SlimDX.Direct3D10.DepthStencilClearFlags,System.Single,System.Byte)">
            <summary>
Clears the specified depth-stencil resource.
</summary>
            <param name="view">The view of the resource to clear.</param>
            <param name="flags">Flags indicating which parts of the resource to clear.</param>
            <param name="depth">The depth value to clear to, if applicable.</param>
            <param name="stencil">The stencil value to clear to, if applicable.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.OpenSharedResource``1(System.IntPtr)">
            <summary>
Gives the device access to a shared resource created on a different device.
</summary>
            <typeparam name="T">The type of the resource.</typeparam>
            <param name="handle">A handle to the shared resource.</param>
            <returns>The new reference to the shared resource.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.CheckMultisampleQualityLevels(SlimDX.DXGI.Format,System.Int32)">
            <summary>
Gets the number of quality levels supported during multisampling of resources using a specified format.
</summary>
            <param name="format">The format to check support for.</param>
            <param name="sampleCount">The multisample count to check support for.</param>
            <returns>The number of quality levels supported. 0 if an error occured
or if the format/samplecount pair is not supported.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.CheckFormatSupport(SlimDX.DXGI.Format)">
            <summary>
Gets information about the supported applications of a specified format.
</summary>
            <param name="format">The format to check support for.</param>
            <returns>FormatSupport flags indicating usage contexts in which the specified format is supported.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.GetCounterMetadata(SlimDX.Direct3D10.CounterDescription)">
            <summary>
Gets metadata (name, type, measurement units, et cetera) for a specific counter.
</summary>
            <param name="description">The description of the counter to retrieve information about.</param>
            <returns>Metadata for the specified counter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.GetCounterCapabilities">
            <summary>
Gets information about the device's performance counters.
</summary>
            <returns>Information about the device's performance counters.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.#ctor(SlimDX.DXGI.Adapter,SlimDX.Direct3D10.DriverType,SlimDX.Direct3D10.DeviceCreationFlags)">
            <summary>
Constructs a new Device object.
</summary>
            <param name="adapter">The display adapter to associate the device with when creating a hardware device.</param>
            <param name="driverType">The device driver type.</param>
            <param name="flags">Flags that indicate which device API layers to enable.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.#ctor(SlimDX.Direct3D10.DriverType,SlimDX.Direct3D10.DeviceCreationFlags)">
            <summary>
Constructs a new Device object.
</summary>
            <param name="driverType">The device driver type.</param>
            <param name="flags">Flags that indicate which device API layers to enable.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Device.#ctor(SlimDX.Direct3D10.DeviceCreationFlags)">
            <summary>
Constructs a new Device object.
</summary>
            <param name="flags">Flags that indicate which device API layers to enable.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.DebugName">
            <summary>
Gets or sets a friendly debug name for the object. This name is used in debug messages
as well as in the PIX object browser.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.CreationFlags">
            <summary>
Gets the device's creation flags.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.GeometryShader">
            <summary>
Gets the device's geometry shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.PixelShader">
            <summary>
Gets the device's pixel shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.VertexShader">
            <summary>
Gets the device's vertex shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.Rasterizer">
            <summary>
Gets the device's rasterizer interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.StreamOutput">
            <summary>
Gets the device's stream output interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.OutputMerger">
            <summary>
Gets the device's output merger interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.InputAssembler">
            <summary>
Gets the device's input assembler interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Device.Factory">
            <summary>
Gets the parent factory associated with the device.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Device.MultisampleCountMaximum">
            <summary>
The maximum number of multisample quality levels supported.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Device">
            <summary>
A virtual adapter for performing rendering.
</summary>
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.Direct3D10Exception.#ctor(SlimDX.Result)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Direct3D10Exception.#ctor(System.String,System.Exception)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Direct3D10Exception.#ctor(System.String)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Direct3D10Exception.#ctor">
            <summary>
Constructs a new exception object.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Direct3D10Exception">
            <summary>
Represents errors that occur in the Direct3D 10 subsystem.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3DX9NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3DX9NotFoundException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3DX9NotFoundException.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3DX9NotFoundException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3DX9NotFoundException.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3DX9NotFoundException" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Direct3DX9NotFoundException">
            <summary>
An exception indicating that the appropriate Direct3DX 9 runtime could not be found or initialized.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.InputLayout.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.InputElement[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.InputLayout" /> object to describe the
input-buffer data for the input-assembler stage.
</summary>
            <unmanaged>ID3D11Device::CreateInputLayout</unmanaged>
            <param name="device">The device used to create the layout.</param>
            <param name="elements">An array of input elements describing the layout of the input data.</param>
            <param name="shaderBytecode">The compiled shader used to validate the input elements.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.InputLayout.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderSignature,SlimDX.Direct3D11.InputElement[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.InputLayout" /> object to describe the
input-buffer data for the input-assembler stage.
</summary>
            <unmanaged>ID3D11Device::CreateInputLayout</unmanaged>
            <param name="device">The device used to create the layout.</param>
            <param name="elements">An array of input elements describing the layout of the input data.</param>
            <param name="shaderSignature">The shader signature used to validate the input elements.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.InputLayout.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.InputElement[],SlimDX.D3DCompiler.ShaderSignature)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.InputLayout" /> object to describe the
input-buffer data for the input-assembler stage.
</summary>
            <unmanaged>ID3D11Device::CreateInputLayout</unmanaged>
            <param name="device">The device used to create the layout.</param>
            <param name="elements">An array of input elements describing the layout of the input data.</param>
            <param name="shaderSignature">The shader signature used to validate the input elements.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.InputLayout">
            <summary>Accesses the input data for the input-assembler stage.</summary>
            <unmanaged>ID3D11InputLayout</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.Equals(SlimDX.Direct3D11.InputElement@,SlimDX.Direct3D11.InputElement@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.Equals(SlimDX.Direct3D11.InputElement)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.op_Inequality(SlimDX.Direct3D11.InputElement,SlimDX.Direct3D11.InputElement)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.op_Equality(SlimDX.Direct3D11.InputElement,SlimDX.Direct3D11.InputElement)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SlimDX.DXGI.Format,System.Int32,System.Int32,SlimDX.Direct3D11.InputClassification,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.InputElement" /> struct.
</summary>
            <param name="name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name="index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name="format">The data type of the element data.</param>
            <param name="offset">Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary.</param>
            <param name="slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
            <param name="slotClass">Identifies the input data class for a single input slot.</param>
            <param name="stepRate">The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an element that contains per-vertex data.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SlimDX.DXGI.Format,System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.InputElement" /> struct.
</summary>
            <param name="name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name="index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name="format">The data type of the element data.</param>
            <param name="offset">Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary.</param>
            <param name="slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SlimDX.DXGI.Format,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.InputElement" /> struct.
</summary>
            <param name="name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name="index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name="format">The data type of the element data.</param>
            <param name="slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.InputElement.AppendAligned">
            <summary>
Returns a value that can be used for the offset parameter of an InputElement to indicate that the element
should be aligned directly after the previous element, including any packing if neccessary.
</summary>
            <returns>A value used to align input elements.</returns>
            <unmanaged>D3D11_APPEND_ALIGNED_ELEMENT</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.InputElement.InstanceDataStepRate">
            <summary>
The number of instances to draw using the same per-instance data before advancing in the buffer by one element. 
This value must be 0 for an element that contains per-vertex data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.InputElement.Classification">
            <summary>
Identifies the input data class for a single input slot.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.InputElement.AlignedByteOffset">
            <summary>
Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary. 
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.InputElement.Slot">
            <summary>
An integer value that identifies the input-assembler. Valid values are between 0 and 15.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.InputElement.Format">
            <summary>
The data type of the element data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.InputElement.SemanticIndex">
            <summary>
The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a 
case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic
name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.InputElement.SemanticName">
            <summary>
The HLSL semantic associated with this element in a shader input-signature.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.InputElement">
            <summary>Describes a single element for the input-assembler stage.</summary>
            <unmanaged>D3D11_INPUT_ELEMENT_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.InputAssemblerWrapper.GetVertexBuffers(System.Int32,System.Int32)">
            <summary>
Gets the set of vertex buffers currently bound to the input assembler.
</summary>
            <param name="firstSlot">The input slot of the first vertex buffer to get.</param>
            <param name="count">The number of vertex buffers to retrieve.</param>
            <returns>An array of bound vertex buffers.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.InputAssemblerWrapper.SetVertexBuffers(System.Int32,SlimDX.Direct3D11.VertexBufferBinding[])">
            <summary>
Binds an array of vertex buffers to the input assembler.
</summary>
            <param name="firstSlot">Index of the first input slot to use for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. There are 16 input slots.</param>
            <param name="vertexBufferBindings">An array of bindings for input vertex buffers.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.InputAssemblerWrapper.SetVertexBuffers(System.Int32,SlimDX.Direct3D11.VertexBufferBinding)">
            <summary>
Binds a single vertex buffer to the input assembler.
</summary>
            <param name="slot">Index of the slot to which to bind the vertex buffer.</param>
            <param name="vertexBufferBinding">A binding for the input vertex buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.InputAssemblerWrapper.GetIndexBuffer(SlimDX.Direct3D11.Buffer@,SlimDX.DXGI.Format@,System.Int32@)">
            <summary>
Gets the index buffer currently bound to the input assembler.
</summary>
            <param name="indexBuffer">When the method completes, contains the currently bound index buffer.</param>
            <param name="format">When the method completes, contains the format of the data in the index buffer.</param>
            <param name="offset">When the method completes, contains the offset in bytes from the start of the index buffer to the first index to use.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.InputAssemblerWrapper.SetIndexBuffer(SlimDX.Direct3D11.Buffer,SlimDX.DXGI.Format,System.Int32)">
            <summary>
Binds an index buffer to the input assembler.
</summary>
            <param name="indexBuffer">The index buffer to bind.</param>
            <param name="format">The format of the data in the index buffer.</param>
            <param name="offset">The offset in bytes from the start of the index buffer to the first index to use.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.InputAssemblerWrapper.PrimitiveTopology">
            <summary>
Gets or sets the topology of primitive data bound to the input assembler.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.InputAssemblerWrapper.InputLayout">
            <summary>
Gets or sets the layout of the input data currently bound to the input assembler.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.InputAssemblerWrapper">
            <summary>
Defines a wrapper for input assembler related commands on the device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexBufferBinding.Equals(SlimDX.Direct3D11.VertexBufferBinding@,SlimDX.Direct3D11.VertexBufferBinding@)">
            <summary>
Returns a value indicating whether the two VertexBufferBindings are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexBufferBinding.Equals(SlimDX.Direct3D11.VertexBufferBinding)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.VertexBufferBinding" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexBufferBinding.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexBufferBinding.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexBufferBinding.op_Inequality(SlimDX.Direct3D11.VertexBufferBinding,SlimDX.Direct3D11.VertexBufferBinding)">
            <summary>
Tests for inequality between two VertexBufferBindings.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexBufferBinding.op_Equality(SlimDX.Direct3D11.VertexBufferBinding,SlimDX.Direct3D11.VertexBufferBinding)">
            <summary>
Tests for equality between two VertexBufferBindings.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexBufferBinding.#ctor(SlimDX.Direct3D11.Buffer,System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.VertexBufferBinding" /> struct.
</summary>
            <param name="buffer">The buffer being bound.</param>
            <param name="stride">The stride between vertex element (in bytes).</param>
            <param name="offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SlimDX.Direct3D11.VertexBufferBinding.Offset">
            <summary>
Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.VertexBufferBinding.Stride">
            <summary>
Gets or sets the stride between vertex elements in the buffer (in bytes).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.VertexBufferBinding.Buffer">
            <summary>
Gets or sets the buffer being bound.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.VertexBufferBinding">
            <summary>
Properties defining the way a buffer (containing vertex data) is bound
to the pipeline for rendering.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ISaveUserData">
            <summary>
This interface is implemented by applications who wish to save additional user
data embedded in .X files. D3DX calls this interface when such data is encountered.
</summary>
            <unmanaged>ID3DXSaveUserData</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.IAllocateHierarchy.DestroyMeshContainer(SlimDX.Direct3D9.MeshContainer)">
            <summary>
Requests deallocation of a mesh container object.
</summary>
            <param name="container">The mesh container to be deallocated.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.IAllocateHierarchy.DestroyFrame(SlimDX.Direct3D9.Frame)">
            <summary>
Requests deallocation of a frame object.
</summary>
            <param name="frame">The frame to be deallocated.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.IAllocateHierarchy.CreateFrame(System.String)">
            <summary>
Requests the allocation of a frame object.
</summary>
            <param name="name">Name of the frame to be created.</param>
            <returns>The created frame object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IAllocateHierarchy.CreateMeshContainer(System.String,SlimDX.Direct3D9.MeshData,SlimDX.Direct3D9.ExtendedMaterial[],SlimDX.Direct3D9.EffectInstance[],System.Int32[],SlimDX.Direct3D9.SkinInfo)">
            <summary>
Requests the allocation of a mesh container object.
</summary>
            <param name="name">Name of the mesh.</param>
            <param name="meshData">The actual mesh data.</param>
            <param name="materials">Set of materials used in the mesh.</param>
            <param name="effectInstances">Set of effects used in the mesh.</param>
            <param name="adjacency">Adjancey array used in the mesh.</param>
            <param name="skinInfo">Skin mesh object containing skin data.</param>
            <returns>The created mesh container.</returns>
        </member>
        <member name="T:SlimDX.Direct3D9.IAllocateHierarchy">
            <summary>
Defines an interface for allocating and freeing frame and mesh container objects. Methods on this interface are called during
loading and destroying of frame hierarchies.
</summary>
            <unmanaged>ID3DXAllocateHierarchy</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.AnimationController">
            <summary>
Used to control animation functionality, connecting animation sets with the transformation frames that are being animated.
</summary>
            <unmanaged>ID3DXAnimationController</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Fill3DCallback">
            <summary>
Callback function used by 3D texture fill functions.
</summary>
            <param name="coordinate">Texture coordinate being sampled.</param>
            <param name="texelSize">Dimensions of the texel.</param>
            <returns>The desired color of the specified texel.</returns>
            <unmanaged>LPD3DXFILL3D</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Fill2DCallback">
            <summary>
Callback function used by 2D texture fill functions.
</summary>
            <param name="coordinate">Texture coordinate being sampled.</param>
            <param name="texelSize">Dimensions of the texel.</param>
            <returns>The desired color of the specified texel.</returns>
            <unmanaged>LPD3DXFILL2D</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.AnimationCallback">
            <summary>
Callback function used for animations.
</summary>
            <param name="track">The track for which the callback is occuring.</param>
            <param name="data">Application defined data.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilStateDescription.Equals(SlimDX.Direct3D11.DepthStencilStateDescription@,SlimDX.Direct3D11.DepthStencilStateDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilStateDescription.Equals(SlimDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilStateDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilStateDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilStateDescription.op_Inequality(SlimDX.Direct3D11.DepthStencilStateDescription,SlimDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilStateDescription.op_Equality(SlimDX.Direct3D11.DepthStencilStateDescription,SlimDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilStateDescription.BackFace">
            <summary>
Specifies how to use the results of the depth test and the stencil test for pixels whose surface normal is facing away from camera.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilStateDescription.FrontFace">
            <summary>
Specifies how to use the results of the depth test and the stencil test for pixels whose surface normal is facing towards the camera.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilStateDescription.StencilWriteMask">
            <summary>
Gets or sets a write mask identifying the portion of the depth-stencil buffer that can be modified by stencil data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilStateDescription.StencilReadMask">
            <summary>
Gets or sets a read mask identifying the portion of the depth-stencil buffer that can be read for stencil data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilStateDescription.IsStencilEnabled">
            <summary>
Gets or sets a value indicating whether stencil testing is enabled.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilStateDescription.DepthComparison">
            <summary>
A function that compares depth data against existing data in the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilStateDescription.DepthWriteMask">
            <summary>
Gets or sets a write mask identifying the portion of the depth-stencil buffer that can be modified by depth data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilStateDescription.IsDepthEnabled">
            <summary>
Gets or sets a value indicating whether depth testing is enabled.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DepthStencilStateDescription">
            <summary>
Provides a description for depth-stencil state objects.
</summary>
            <unmanaged>D3D11_DEPTH_STENCIL_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilOperationDescription.Equals(SlimDX.Direct3D11.DepthStencilOperationDescription@,SlimDX.Direct3D11.DepthStencilOperationDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilOperationDescription.Equals(SlimDX.Direct3D11.DepthStencilOperationDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilOperationDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilOperationDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilOperationDescription.op_Inequality(SlimDX.Direct3D11.DepthStencilOperationDescription,SlimDX.Direct3D11.DepthStencilOperationDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DepthStencilOperationDescription.op_Equality(SlimDX.Direct3D11.DepthStencilOperationDescription,SlimDX.Direct3D11.DepthStencilOperationDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilOperationDescription.Comparison">
            <summary>
A function that compares stencil data against existing data in the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilOperationDescription.PassOperation">
            <summary>
Gets or sets the stencil operation to perform when stencil testing and depth testing both pass.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilOperationDescription.DepthFailOperation">
            <summary>
Gets or sets the stencil operation to perform when stencil testing passes and depth testing fails.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DepthStencilOperationDescription.FailOperation">
            <summary>
Gets or sets the stencil operation to perform when stencil testing fails.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DepthStencilOperationDescription">
            <summary>
Specifies stencil operations that can be performed based on the results of the stencil test.
</summary>
            <unmanaged>D3D11_DEPTH_STENCILOP_DESC</unmanaged>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Head">
            <summary>
Represents a "Head" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Control">
            <summary>
Represents a "Control" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Sprint">
            <summary>
Represents a "Sprint" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.PassThrough">
            <summary>
Represents a "PassThrough" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.ShootHigh">
            <summary>
Represents a "ShootHigh" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.ShootLow">
            <summary>
Represents a "ShootLow" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Special1">
            <summary>
Represents a "Special1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Player">
            <summary>
Represents a "Player" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Pass">
            <summary>
Represents a "Pass" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Shoot">
            <summary>
Represents a "Shoot" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Bend">
            <summary>
Represents a "Bend" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerOffenseControls.SoccerOffenseGenre">
            <summary>
Represents the soccer offense genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.SoccerOffenseControls">
            <summary>
Contains action mapping constants for soccer offense games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.GoalieCharge">
            <summary>
Represents a "GoalieCharge" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Clear">
            <summary>
Represents a "Clear" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Head">
            <summary>
Represents a "Head" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Foul">
            <summary>
Represents a "Foul" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Slide">
            <summary>
Represents a "Slide" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Player">
            <summary>
Represents a "Player" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Steal">
            <summary>
Represents a "Steal" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Block">
            <summary>
Represents a "Block" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SoccerDefenseControls.SoccerDefenseGenre">
            <summary>
Represents the soccer defense genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.SoccerDefenseControls">
            <summary>
Contains action mapping constants for soccer defense games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.SlowerLink">
            <summary>
Represents a "Slower" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.FasterLink">
            <summary>
Represents a "Faster" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Special2">
            <summary>
Represents a "Special2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Special1">
            <summary>
Represents a "Special1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Camera">
            <summary>
Represents a "Camera" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Crouch">
            <summary>
Represents a "Crouch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Speed">
            <summary>
Represents a "Speed" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.Turn">
            <summary>
Represents a "Turn" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SkiingControls.SkiingGenre">
            <summary>
Represents the skiing genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.SkiingControls">
            <summary>
Contains action mapping constants for skiing games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Timeout">
            <summary>
Represents a "Timeout" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Smash">
            <summary>
Represents a "Smash" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Backswing">
            <summary>
Represents a "Backswing" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Swing">
            <summary>
Represents a "Swing" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacquetControls.RacquetGenre">
            <summary>
Represents the racquet genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.RacquetControls">
            <summary>
Contains action mapping constants for racquet games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.BrakeButtonLink">
            <summary>
Represents a "BrakeButton" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.SlowerLink">
            <summary>
Represents a "Slower" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.FasterLink">
            <summary>
Represents a "Faster" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Brake">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Scroll">
            <summary>
Represents a "Scroll" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Special2">
            <summary>
Represents a "Special2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Special1">
            <summary>
Represents a "Special1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Camera">
            <summary>
Represents a "Camera" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Pedal">
            <summary>
Represents a "Pedal" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.Turn">
            <summary>
Represents a "Turn" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MountainBikingControls.MountainBikingGenre">
            <summary>
Represents the mountain biking genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.MountainBikingControls">
            <summary>
Contains action mapping constants for mountain biking games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.RotateRightLink">
            <summary>
Represents a "RotateRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.RotateLeftLink">
            <summary>
Represents a "RotateLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Crouch">
            <summary>
Represents a "Crouch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Rotate">
            <summary>
Represents a "Rotate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Map">
            <summary>
Represents a "Map" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Call">
            <summary>
Represents a "Call" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Binocular">
            <summary>
Represents a "Binocular" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Weapon">
            <summary>
Represents a "Weapon" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Aim">
            <summary>
Represents a "Aim" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HuntingControls.HuntingGenre">
            <summary>
Represents the hunting genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.HuntingControls">
            <summary>
Contains action mapping constants for hunting games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Timeout">
            <summary>
Represents a "Timeout" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Strategy">
            <summary>
Represents a "Strategy" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Scroll">
            <summary>
Represents a "Scroll" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Burst">
            <summary>
Represents a "Burst" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Pass">
            <summary>
Represents a "Pass" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Shoot">
            <summary>
Represents a "Shoot" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyOffenseControls.HockeyOffenseGenre">
            <summary>
Represents the hockey offense genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.HockeyOffenseControls">
            <summary>
Contains action mapping constants for hockey offense games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Timeout">
            <summary>
Represents a "Timeout" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Strategy">
            <summary>
Represents a "Strategy" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Scroll">
            <summary>
Represents a "Scroll" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Block">
            <summary>
Represents a "Block" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Steal">
            <summary>
Represents a "Steal" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Poke">
            <summary>
Represents a "Poke" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Pass">
            <summary>
Represents a "Pass" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyGoalieControls.HockeyGoalieGenre">
            <summary>
Represents the hockey goalie genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.HockeyGoalieControls">
            <summary>
Contains action mapping constants for hockey goalie games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Timeout">
            <summary>
Represents a "Timeout" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Strategy">
            <summary>
Represents a "Strategy" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Scroll">
            <summary>
Represents a "Scroll" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Block">
            <summary>
Represents a "Block" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Burst">
            <summary>
Represents a "Burst" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Steal">
            <summary>
Represents a "Steal" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Player">
            <summary>
Represents a "Player" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HockeyDefenseControls.HockeyDefenseGenre">
            <summary>
Represents the hockey defense genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.HockeyDefenseControls">
            <summary>
Contains action mapping constants for hockey defense games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Timeout">
            <summary>
Represents a "Timeout" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Scroll">
            <summary>
Represents a "Scroll" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Flyby">
            <summary>
Represents a "Flyby" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Terrain">
            <summary>
Represents a "Terrain" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Down">
            <summary>
Represents a "Down" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Up">
            <summary>
Represents a "Up" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Swing">
            <summary>
Represents a "Swing" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.GolfControls.GolfGenre">
            <summary>
Represents the golf genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.GolfControls">
            <summary>
Contains action mapping constants for golf games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Audible">
            <summary>
Represents a "Audible" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Motion">
            <summary>
Represents a "Motion" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.FakeSnap">
            <summary>
Represents a "FakeSnap" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Pass">
            <summary>
Represents a "Pass" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Slide">
            <summary>
Represents a "Slide" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Snap">
            <summary>
Represents a "Snap" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballQuarterbackControls.FootballQuarterbackGenre">
            <summary>
Represents the football quarterback genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.FootballQuarterbackControls">
            <summary>
Contains action mapping constants for football quarterback games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballPlayControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballPlayControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballPlayControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballPlayControls.Help">
            <summary>
Represents a "Help" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballPlayControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballPlayControls.Play">
            <summary>
Represents a "Play" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballPlayControls.FootballPlayGenre">
            <summary>
Represents the football genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.FootballPlayControls">
            <summary>
Contains action mapping constants for football games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Dive">
            <summary>
Represents a "Dive" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Turbo">
            <summary>
Represents a "Turbo" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Shoulder">
            <summary>
Represents a "Shoulder" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Juke">
            <summary>
Represents a "Juke" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Spin">
            <summary>
Represents a "Spin" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Throw">
            <summary>
Represents a "Throw" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.RightArm">
            <summary>
Represents a "RightArm" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.LeftArm">
            <summary>
Represents a "LeftArm" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballOffenseControls.FootballOffenseGenre">
            <summary>
Represents the football offense genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.FootballOffenseControls">
            <summary>
Contains action mapping constants for football offense games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Audible">
            <summary>
Represents a "Audible" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Rip">
            <summary>
Represents a "Rip" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.BullRush">
            <summary>
Represents a "BullRush" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Swim">
            <summary>
Represents a "Swim" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Spin">
            <summary>
Represents a "Spin" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.SuperTackle">
            <summary>
Represents a "SuperTackle" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Tackle">
            <summary>
Represents a "Tackle" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Play">
            <summary>
Represents a "Play" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FootballDefenseControls.FootballDefenseGenre">
            <summary>
Represents the football defense genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.FootballDefenseControls">
            <summary>
Contains action mapping constants for football defense games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.RotateRightLink">
            <summary>
Represents a "RotateRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.RotateLeftLink">
            <summary>
Represents a "RotateLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Crouch">
            <summary>
Represents a "Crouch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Rotate">
            <summary>
Represents a "Rotate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Map">
            <summary>
Represents a "Map" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Bait">
            <summary>
Represents a "Bait" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Binocular">
            <summary>
Represents a "Binocular" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Type">
            <summary>
Represents a "Type" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Cast">
            <summary>
Represents a "Cast" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.FishingControls.FishingGenre">
            <summary>
Represents the fishing genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.FishingControls">
            <summary>
Contains action mapping constants for fishing games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Timeout">
            <summary>
Represents a "Timeout" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Post">
            <summary>
Represents a "Post" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Jab">
            <summary>
Represents a "Jab" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Play">
            <summary>
Represents a "Play" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Screen">
            <summary>
Represents a "Screen" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Call">
            <summary>
Represents a "Call" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Burst">
            <summary>
Represents a "Burst" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Player">
            <summary>
Represents a "Player" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Pass">
            <summary>
Represents a "Pass" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Dunk">
            <summary>
Represents a "Dunk" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Shoot">
            <summary>
Represents a "Shoot" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballOffenseControls.BasketballOffenseGenre">
            <summary>
Represents the basketball offense genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.BasketballOffenseControls">
            <summary>
Contains action mapping constants for basketball offense games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Substitute">
            <summary>
Represents a "Substitute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Timeout">
            <summary>
Represents a "Timeout" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Play">
            <summary>
Represents a "Play" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Burst">
            <summary>
Represents a "Burst" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Player">
            <summary>
Represents a "Player" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Steal">
            <summary>
Represents a "Steal" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BasketballDefenseControls.BasketballDefenseGenre">
            <summary>
Represents the basketball defense genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.BasketballDefenseControls">
            <summary>
Contains action mapping constants for bsketball defense games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Look">
            <summary>
Represents a "Look" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Walk">
            <summary>
Represents a "Walk" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Fake">
            <summary>
Represents a "Fake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Throw">
            <summary>
Represents a "Throw" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Base">
            <summary>
Represents a "Base" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Pitch">
            <summary>
Represents a "Pitch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballPitchingControls.BaseballPitchingGenre">
            <summary>
Represents the baseball pitching genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.BaseballPitchingControls">
            <summary>
Contains action mapping constants for baseball pitching games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.AimRightLink">
            <summary>
Represents a "AimRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.AimLeftLink">
            <summary>
Represents a "AimLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.ShiftOut">
            <summary>
Represents a "ShiftOut" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.ShiftIn">
            <summary>
Represents a "ShiftIn" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Dive">
            <summary>
Represents a "Dive" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Burst">
            <summary>
Represents a "Burst" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Throw2">
            <summary>
Represents a "Throw2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Throw1">
            <summary>
Represents a "Throw1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Nearest">
            <summary>
Represents a "Nearest" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballFieldingControls.BaseballFieldingGenre">
            <summary>
Represents the baseball fielding genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.BaseballFieldingControls">
            <summary>
Contains action mapping constants for baseball fielding games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Box">
            <summary>
Represents a "Box" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.NoSteal">
            <summary>
Represents a "NoSteal" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Contact">
            <summary>
Represents a "Contact" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Slide">
            <summary>
Represents a "Slide" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Burst">
            <summary>
Represents a "Burst" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Steal">
            <summary>
Represents a "Steal" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Bunt">
            <summary>
Represents a "Bunt" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Power">
            <summary>
Represents a "Power" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Normal">
            <summary>
Represents a "Normal" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BaseballBattingControls.BaseballBattingGenre">
            <summary>
Represents the baseball batting genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.BaseballBattingControls">
            <summary>
Contains action mapping constants for baseball batting games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Map">
            <summary>
Represents a "Map" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Turn">
            <summary>
Represents a "Turn" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Team">
            <summary>
Represents a "Team" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Apply">
            <summary>
Represents a "Apply" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Instruct">
            <summary>
Represents a "Instruct" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TurnBasedControls.TurnBasedGenre">
            <summary>
Represents the turn based genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.TurnBasedControls">
            <summary>
Contains action mapping constants for turn based games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.RotateRightLink">
            <summary>
Represents a "RotateRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.RotateLeftLink">
            <summary>
Represents a "RotateLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Rotate">
            <summary>
Represents a "Rotate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Map">
            <summary>
Represents a "Map" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Crouch">
            <summary>
Represents a "Crouch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Cast">
            <summary>
Represents a "Cast" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Attack">
            <summary>
Represents a "Attack" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Apply">
            <summary>
Represents a "Apply" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Get">
            <summary>
Represents a "Get" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RolePlayingControls.RolePlayingGenre">
            <summary>
Represents the role playing genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.RolePlayingControls">
            <summary>
Contains action mapping constants for role playing games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.GlanceDownLink">
            <summary>
Represents a "GlanceDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.GlanceUpLink">
            <summary>
Represents a "GlanceUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.GlanceRightLink">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.GlanceLeftLink">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.TurnRightLink">
            <summary>
Represents a "TurnRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.TurnLeftLink">
            <summary>
Represents a "TurnLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.SlowerLink">
            <summary>
Represents a "Slower" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.FasterLink">
            <summary>
Represents a "Faster" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.BackwardLink">
            <summary>
Represents a "Backward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Gear">
            <summary>
Represents a "Gear" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Lower">
            <summary>
Represents a "Lower" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Raise">
            <summary>
Represents a "Raise" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Rotate">
            <summary>
Represents a "Rotate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Climb">
            <summary>
Represents a "Climb" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Target">
            <summary>
Represents a "Target" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Weapons">
            <summary>
Represents a "Weapons" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Throttle">
            <summary>
Represents a "Throttle" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SpaceCombatControls.SpaceCombatGenre">
            <summary>
Represents the space combat genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.SpaceCombatControls">
            <summary>
Contains action mapping constants for space combat games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.GlanceDownLink">
            <summary>
Represents a "GlanceDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.GlanceUpLink">
            <summary>
Represents a "GlanceUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.GlanceRightLink">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.GlanceLeftLink">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.SlowerLink">
            <summary>
Represents a "Slower" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.FasterLink">
            <summary>
Represents a "Faster" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Gear">
            <summary>
Represents a "Gear" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Counter">
            <summary>
Represents a "Counter" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Throttle">
            <summary>
Represents a "Throttle" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Torque">
            <summary>
Represents a "Torque" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Target">
            <summary>
Represents a "Target" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Weapons">
            <summary>
Represents a "Weapons" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Collective">
            <summary>
Represents a "Collective" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Pitch">
            <summary>
Represents a "Pitch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.Bank">
            <summary>
Represents a "Bank" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HelicopterCombatControls.HelicopterCombatGenre">
            <summary>
Represents the helicopter combat genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.HelicopterCombatControls">
            <summary>
Contains action mapping constants for helicopter combat games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.GlanceDownLink">
            <summary>
Represents a "GlanceDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.GlanceUpLink">
            <summary>
Represents a "GlanceUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.GlanceRightLink">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.GlanceLeftLink">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.SlowerLink">
            <summary>
Represents a "Slower" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.FasterLink">
            <summary>
Represents a "Faster" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.BrakeLink">
            <summary>
Represents a "Brake" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.FlapsDown">
            <summary>
Represents a "FlapsDown" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.FlapsUp">
            <summary>
Represents a "FlapsUp" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Flaps">
            <summary>
Represents a "Flaps" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Rudder">
            <summary>
Represents a "Rudder" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Brake">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Gear">
            <summary>
Represents a "Gear" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Throttle">
            <summary>
Represents a "Throttle" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Pitch">
            <summary>
Represents a "Pitch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.Bank">
            <summary>
Represents a "Bank" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CivilianFlightControls.CivilianFlightGenre">
            <summary>
Represents the civilian flight genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.CivilianFlightControls">
            <summary>
Contains action mapping constants for civilian flight games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.GlanceDownLink">
            <summary>
Represents a "GlanceDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.GlanceUpLink">
            <summary>
Represents a "GlanceUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.GlanceRightLink">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.GlanceLeftLink">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.SlowerLink">
            <summary>
Represents a "Slower" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.FasterLink">
            <summary>
Represents a "Faster" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.BrakeLink">
            <summary>
Represents a "Brake" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Gear">
            <summary>
Represents a "Gear" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.FlapsDown">
            <summary>
Represents a "FlapsDown" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.FlapsUp">
            <summary>
Represents a "FlapsUp" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Flaps">
            <summary>
Represents a "Flaps" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Brake">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Rudder">
            <summary>
Represents a "Rudder" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Counter">
            <summary>
Represents a "Counter" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Target">
            <summary>
Represents a "Target" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Weapons">
            <summary>
Represents a "Weapons" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Throttle">
            <summary>
Represents a "Throttle" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Pitch">
            <summary>
Represents a "Pitch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.Bank">
            <summary>
Represents a "Bank" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.AirCombatControls.AirCombatGenre">
            <summary>
Represents the air combat genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.AirCombatControls">
            <summary>
Contains action mapping constants for air combat games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.GlanceRightLink">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.GlanceLeftLink">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.RotateRightLink">
            <summary>
Represents a "RotateRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.RotateLeftLink">
            <summary>
Represents a "RotateLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.BarrelDownLink">
            <summary>
Represents a "BarrelDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.BarrelUpLink">
            <summary>
Represents a "BarrelUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.SteerRightLink">
            <summary>
Represents a "SteerRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.SteerLeftLink">
            <summary>
Represents a "SteerLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.AccelerateLink">
            <summary>
Represents a "Accelerate" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Brake">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Dashboard">
            <summary>
Represents a "Dashboard" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.AccelerateAndBrake">
            <summary>
Represents a "AccelerateAndBrake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.BrakeAxis">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Target">
            <summary>
Represents a "Target" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Weapons">
            <summary>
Represents a "Weapons" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Rotate">
            <summary>
Represents a "Rotate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Accelerate">
            <summary>
Represents a "Accelerate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Barrel">
            <summary>
Represents a "Barrel" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.Steer">
            <summary>
Represents a "Steer" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.TankDrivingControls.TankDrivingGenre">
            <summary>
Represents the tank driving genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.TankDrivingControls">
            <summary>
Contains action mapping constants for tank driving games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.GlanceRightLink">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.GlanceLeftLink">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.SteerRightLink">
            <summary>
Represents a "SteerRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.SteerLeftLink">
            <summary>
Represents a "SteerLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.AccelerateLink">
            <summary>
Represents a "Accelerate" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Pit">
            <summary>
Represents a "Pit" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Boost">
            <summary>
Represents a "Boost" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Map">
            <summary>
Represents a "Map" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Aids">
            <summary>
Represents a "Aids" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Dashboard">
            <summary>
Represents a "Dashboard" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Brake">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.AccelerateAndBrake">
            <summary>
Represents a "AccelerateAndBrake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.ShiftDown">
            <summary>
Represents a "ShiftDown" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.ShiftUp">
            <summary>
Represents a "ShiftUp" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.BrakeAxis">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Accelerate">
            <summary>
Represents a "Accelerate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.Steer">
            <summary>
Represents a "Steer" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RacingControls.RacingGenre">
            <summary>
Represents the racing genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.RacingControls">
            <summary>
Contains action mapping constants for racing games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.SlowerLink">
            <summary>
Represents a "Slower" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.FasterLink">
            <summary>
Represents a "Faster" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.RotateRightLink">
            <summary>
Represents a "RotateRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.RotateLeftLink">
            <summary>
Represents a "RotateLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Center">
            <summary>
Represents a "Center" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Zoom">
            <summary>
Represents a "Zoom" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Reverse">
            <summary>
Represents a "Reverse" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Target">
            <summary>
Represents a "Target" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Weapons">
            <summary>
Represents a "Weapons" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Throttle">
            <summary>
Represents a "Throttle" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Rotate">
            <summary>
Represents a "Rotate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Torso">
            <summary>
Represents a "Torso" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.Steer">
            <summary>
Represents a "Steer" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MechanicalFightingControls.MechanicalFightingGenre">
            <summary>
Represents the mechanical fighting genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.MechanicalFightingControls">
            <summary>
Contains action mapping constants for mechanical fighting games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.GlanceRightLink">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.GlanceLeftLink">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.SteerRightLink">
            <summary>
Represents a "SteerRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.SteerLeftLink">
            <summary>
Represents a "SteerLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.AccelerateLink">
            <summary>
Represents a "Accelerate" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Brake">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Aids">
            <summary>
Represents a "Aids" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Dashboard">
            <summary>
Represents a "Dashboard" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.ShiftDown">
            <summary>
Represents a "ShiftDown" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.ShiftUp">
            <summary>
Represents a "ShiftUp" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.AccelerateAndBrake">
            <summary>
Represents a "AccelerateAndBrake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Target">
            <summary>
Represents a "Target" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Weapons">
            <summary>
Represents a "Weapons" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.BrakeAxis">
            <summary>
Represents a "Brake" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Accelerate">
            <summary>
Represents a "Accelerate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.Steer">
            <summary>
Represents a "Steer" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CombatRacingControls.CombatRacingGenre">
            <summary>
Represents the combat racing genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.CombatRacingControls">
            <summary>
Contains action mapping constants for combat racing games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit9">
            <summary>
Represents a "Digit9" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit8">
            <summary>
Represents a "Digit8" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit7">
            <summary>
Represents a "Digit7" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit6">
            <summary>
Represents a "Digit6" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit5">
            <summary>
Represents a "Digit5" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit4">
            <summary>
Represents a "Digit4" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit3">
            <summary>
Represents a "Digit3" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit2">
            <summary>
Represents a "Digit2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit1">
            <summary>
Represents a "Digit1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Digit0">
            <summary>
Represents a "Digit0" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Adjust">
            <summary>
Represents a "Adjust" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.DVD">
            <summary>
Represents a "DVD" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Tuner">
            <summary>
Represents a "Tuner" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.VCR">
            <summary>
Represents a "VCR" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.CD">
            <summary>
Represents a "CD" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Cable">
            <summary>
Represents a "Cable" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.TV">
            <summary>
Represents a "TV" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Slider2">
            <summary>
Represents a "Slider2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Record">
            <summary>
Represents a "Record" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Change">
            <summary>
Represents a "Change" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Review">
            <summary>
Represents a "Review" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Cue">
            <summary>
Represents a "Cue" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Play">
            <summary>
Represents a "Play" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Mute">
            <summary>
Represents a "Mute" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.Slider">
            <summary>
Represents a "Slider" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.RemoteControls.RemoteGenre">
            <summary>
Represents the remote genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.RemoteControls">
            <summary>
Contains action mapping constants for remote controls.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Print">
            <summary>
Represents a "Print" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.History">
            <summary>
Represents a "History" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Previous">
            <summary>
Represents a "Previous" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Next">
            <summary>
Represents a "Next" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Favorites">
            <summary>
Represents a "Favorites" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Home">
            <summary>
Represents a "Home" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Stop">
            <summary>
Represents a "Stop" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Search">
            <summary>
Represents a "Search" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Refresh">
            <summary>
Represents a "Refresh" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.BrowserControls.BrowserGenre">
            <summary>
Represents the browser genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.BrowserControls">
            <summary>
Contains action mapping constants for browser controls.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.RotateZ">
            <summary>
Represents a "RotateZ" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.RotateY">
            <summary>
Represents a "RotateY" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.RotateX">
            <summary>
Represents a "RotateX" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.HatSwitch">
            <summary>
Represents a "HatSwitch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Special2">
            <summary>
Represents a "Special2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Special1">
            <summary>
Represents a "Special1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.InOut">
            <summary>
Represents a "InOut" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects3DControls.Objects3DGenre">
            <summary>
Represents the 3D control genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.Objects3DControls">
            <summary>
Contains action mapping constants for 3D objects in CAD.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.RotateZ">
            <summary>
Represents a "RotateZ" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.RotateY">
            <summary>
Represents a "RotateY" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.RotateX">
            <summary>
Represents a "RotateX" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.HatSwitch">
            <summary>
Represents a "HatSwitch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Special2">
            <summary>
Represents a "Special2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Special1">
            <summary>
Represents a "Special1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.InOut">
            <summary>
Represents a "InOut" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Navigation3DControls.Navigation3DGenre">
            <summary>
Represents the 3D navigation genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.Navigation3DControls">
            <summary>
Contains action mapping constants for 3D navigation in CAD.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.RotateZ">
            <summary>
Represents a "RotateZ" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.RotateY">
            <summary>
Represents a "RotateY" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.RotateX">
            <summary>
Represents a "RotateX" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.HatSwitch">
            <summary>
Represents a "HatSwitch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Special2">
            <summary>
Represents a "Special2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Special1">
            <summary>
Represents a "Special1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.InOut">
            <summary>
Represents a "InOut" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Models3DControls.Models3DGenre">
            <summary>
Represents the 3D model genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.Models3DControls">
            <summary>
Contains action mapping constants for 3D models in CAD.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.RotateZ">
            <summary>
Represents a "RotateZ" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.HatSwitch">
            <summary>
Represents a "HatSwitch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Special2">
            <summary>
Represents a "Special2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Special1">
            <summary>
Represents a "Special1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.InOut">
            <summary>
Represents a "InOut" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Objects2DControls.Objects2DGenre">
            <summary>
Represents the 2D control genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.Objects2DControls">
            <summary>
Contains action mapping constants for 2D objects in CAD.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.ViewRightLink">
            <summary>
Represents a "ViewRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.ViewLeftLink">
            <summary>
Represents a "ViewLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.ViewDownLink">
            <summary>
Represents a "ViewDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.ViewUpLink">
            <summary>
Represents a "ViewUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Attack">
            <summary>
Represents a "Attack" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Carry">
            <summary>
Represents a "Carry" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Throw">
            <summary>
Represents a "Throw" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.SideToSideControls.SideToSideGenre">
            <summary>
Represents the side-to-side genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.SideToSideControls">
            <summary>
Contains action mapping constants for side-to-side arcade games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.ViewRightLink">
            <summary>
Represents a "ViewRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.ViewLeftLink">
            <summary>
Represents a "ViewLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.ViewDownLink">
            <summary>
Represents a "ViewDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.ViewUpLink">
            <summary>
Represents a "ViewUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.BackLink">
            <summary>
Represents a "Back" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Special">
            <summary>
Represents a "Special" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Crouch">
            <summary>
Represents a "Crouch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.PlatformControls.PlatformGenre">
            <summary>
Represents the platform genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.PlatformControls">
            <summary>
Contains action mapping constants for platform arcade games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.View">
            <summary>
Represents a "View" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.StepRight">
            <summary>
Represents a "StepRight" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.StepLeft">
            <summary>
Represents a "StepLeft" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Inventory">
            <summary>
Represents a "Inventory" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.TurnRightLink">
            <summary>
Represents a "TurnRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.TurnLeftLink">
            <summary>
Represents a "TurnLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.GlanceRightLink">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.GlanceLeftLink">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.GlanceUpLink">
            <summary>
Represents a "GlanceUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.GlanceDownLink">
            <summary>
Represents a "GlanceDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Dodge">
            <summary>
Represents a "Dodge" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.BackwardLink">
            <summary>
Represents a "Backward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Step">
            <summary>
Represents a "Step" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Run">
            <summary>
Represents a "Run" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Use">
            <summary>
Represents a "Use" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Action">
            <summary>
Represents a "Action" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Turn">
            <summary>
Represents a "Turn" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ThirdPersonControls.ThirdPersonGenre">
            <summary>
Represents the third person genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.ThirdPersonControls">
            <summary>
Contains action mapping constants for third person fighting games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Glance">
            <summary>
Represents a "Glance" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.RotateRightLink">
            <summary>
Represents a "RotateRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.RotateLeftLink">
            <summary>
Represents a "RotateLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.GlanceRight">
            <summary>
Represents a "GlanceRight" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.GlanceLeft">
            <summary>
Represents a "GlanceLeft" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.GlanceUpLink">
            <summary>
Represents a "GlanceUp" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.GlanceDownLink">
            <summary>
Represents a "GlanceDown" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.FireSecondary">
            <summary>
Represents a "FireSecondary" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Dodge">
            <summary>
Represents a "Dodge" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.BackwardLink">
            <summary>
Represents a "Backward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.SideStep">
            <summary>
Represents a "SideStep" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Weapons">
            <summary>
Represents a "Weapons" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Strafe">
            <summary>
Represents a "Strafe" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Fire">
            <summary>
Represents a "Fire" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Crouch">
            <summary>
Represents a "Crouch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Apply">
            <summary>
Represents a "Apply" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Rotate">
            <summary>
Represents a "Rotate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.LookUpDown">
            <summary>
Represents a "LookUpDown" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ShootingControls.ShootingGenre">
            <summary>
Represents the shooting genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.ShootingControls">
            <summary>
Contains action mapping constants for first person shooter games.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Slide">
            <summary>
Represents a "Slide" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Select">
            <summary>
Represents a "Select" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Pause">
            <summary>
Represents a "Pause" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.RightLink">
            <summary>
Represents a "Right" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.LeftLink">
            <summary>
Represents a "Left" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.ForwardLink">
            <summary>
Represents a "Forward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Dodge">
            <summary>
Represents a "Dodge" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Display">
            <summary>
Represents a "Display" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Device">
            <summary>
Represents a "Device" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.BackwardLink">
            <summary>
Represents a "Backward" link.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Rotate">
            <summary>
Represents a "Rotate" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Special2">
            <summary>
Represents a "Special2" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Special1">
            <summary>
Represents a "Special1" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Punch">
            <summary>
Represents a "Punch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Menu">
            <summary>
Represents a "Menu" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Kick">
            <summary>
Represents a "Kick" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Jump">
            <summary>
Represents a "Jump" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Crouch">
            <summary>
Represents a "Crouch" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Block">
            <summary>
Represents a "Block" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Move">
            <summary>
Represents a "Move" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.Lateral">
            <summary>
Represents a "Lateral" action.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.HandToHandControls.HandToHandGenre">
            <summary>
Represents the hand-to-hand genre.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.HandToHandControls">
            <summary>
Contains action mapping constants for Hand-To-Hand fighting games.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.FrameStatistics.Equals(SlimDX.DXGI.FrameStatistics@,SlimDX.DXGI.FrameStatistics@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.FrameStatistics.Equals(SlimDX.DXGI.FrameStatistics)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.FrameStatistics.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.FrameStatistics.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DXGI.FrameStatistics.op_Inequality(SlimDX.DXGI.FrameStatistics,SlimDX.DXGI.FrameStatistics)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.FrameStatistics.op_Equality(SlimDX.DXGI.FrameStatistics,SlimDX.DXGI.FrameStatistics)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DXGI.FrameStatistics.SyncGPUTime">
            <summary>
Reserved. Always returns 0.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.FrameStatistics.SyncQPCTime">
            <summary>
Gets a value equivalent to that returned by the unmanaged function QueryPerformanceCounter.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.FrameStatistics.SyncRefreshCount">
            <summary>
Gets the number of times a vertical blank has occured.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.FrameStatistics.PresentRefreshCount">
            <summary>
Gets the number of times a vertical blank has occured.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.FrameStatistics.PresentCount">
            <summary>
Gets the number of times an image has been presented to an output.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.FrameStatistics">
            <summary>
Provides basic rendering statistics. All counts are relative to machine boot. 
</summary>
            <unmanaged href="bb173060">DXGI_FRAME_STATISTICS</unmanaged>
        </member>
        <member name="M:SlimDX.Half4.Equals(SlimDX.Half4@,SlimDX.Half4@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half4.Equals(SlimDX.Half4)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Half4.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Half4.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Half4.op_Inequality(SlimDX.Half4,SlimDX.Half4)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half4.op_Equality(SlimDX.Half4,SlimDX.Half4)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half4.#ctor(SlimDX.Half,SlimDX.Half,SlimDX.Half,SlimDX.Half)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Half4" /> structure.
</summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:SlimDX.Half4.#ctor(SlimDX.Half)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Half4" /> structure.
</summary>
            <param name="value">The value to set for the X, Y, Z, and W components.</param>
        </member>
        <member name="F:SlimDX.Half4.W">
            <summary>
Gets or sets the W component of the vector.
</summary>
            <value>The W component of the vector.</value>
        </member>
        <member name="F:SlimDX.Half4.Z">
            <summary>
Gets or sets the Z component of the vector.
</summary>
            <value>The Z component of the vector.</value>
        </member>
        <member name="F:SlimDX.Half4.Y">
            <summary>
Gets or sets the Y component of the vector.
</summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="F:SlimDX.Half4.X">
            <summary>
Gets or sets the X component of the vector.
</summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="T:SlimDX.Half4">
            <summary>
Defines a four component vector, using half precision floating point coordinates.
</summary>
            <unmanaged>D3DXVECTOR3_16F</unmanaged>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c></returns>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Half4Converter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.Half4Converter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.Half4Converter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Half4" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.Half.Equals(SlimDX.Half@,SlimDX.Half@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half.Equals(SlimDX.Half)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Half.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Half.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Half.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Half.op_Inequality(SlimDX.Half,SlimDX.Half)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half.op_Equality(SlimDX.Half,SlimDX.Half)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Half.op_Implicit(SlimDX.Half)~System.Single">
            <summary>
Performs an implicit conversion from <see cref="T:SlimDX.Half" /> to <see cref="T:System.Single" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Half.op_Explicit(System.Single)~SlimDX.Half">
            <summary>
Performs an explicit conversion from <see cref="T:System.Single" /> to <see cref="T:SlimDX.Half" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Half.ConvertToHalf(System.Single[])">
            <summary>
Converts an array of full precision values into half precision values.
</summary>
            <param name="values">The values to be converted.</param>
            <returns>An array of converted values.</returns>
        </member>
        <member name="M:SlimDX.Half.ConvertToFloat(SlimDX.Half[])">
            <summary>
Converts an array of half precision values into full precision values.
</summary>
            <param name="values">The values to be converted.</param>
            <returns>An array of converted values.</returns>
        </member>
        <member name="P:SlimDX.Half.RawValue">
            <summary>
Gets or sets the raw 16 bit value used to back this half-float.
</summary>
        </member>
        <member name="M:SlimDX.Half.#ctor(System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Half" /> structure.
</summary>
            <param name="value">The floating point value that should be stored in 16 bit format.</param>
        </member>
        <member name="F:SlimDX.Half.MinValue">
            <summary>
Minimum value of the number.
</summary>
        </member>
        <member name="F:SlimDX.Half.MaxValue">
            <summary>
Maximum value of the number.
</summary>
        </member>
        <member name="F:SlimDX.Half.Epsilon">
            <summary>
Smallest such that 1.0 + epsilon != 1.0
</summary>
        </member>
        <member name="F:SlimDX.Half.AdditionRounding">
            <summary>
Additional rounding.
</summary>
        </member>
        <member name="F:SlimDX.Half.ExponentRadix">
            <summary>
Exponent radix.
</summary>
        </member>
        <member name="F:SlimDX.Half.MinimumBinaryExponent">
            <summary>
Minimum binary exponent.
</summary>
        </member>
        <member name="F:SlimDX.Half.MinimumDecimalExponent">
            <summary>
Minimum decimal exponent.
</summary>
        </member>
        <member name="F:SlimDX.Half.MaximumBinaryExponent">
            <summary>
Maximum binary exponent.
</summary>
        </member>
        <member name="F:SlimDX.Half.MaximumDecimalExponent">
            <summary>
Maximum decimal exponent.
</summary>
        </member>
        <member name="F:SlimDX.Half.MantissaBits">
            <summary>
Number of bits in the mantissa.
</summary>
        </member>
        <member name="F:SlimDX.Half.PrecisionDigits">
            <summary>
Number of decimal digits of precision.
</summary>
        </member>
        <member name="T:SlimDX.Half">
            <summary>
A half precision (16 bit) floating point value.
</summary>
            <unmanaged>D3DXFLOAT16</unmanaged>
        </member>
        <member name="M:SlimDX.Design.HalfConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.HalfConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.HalfConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.HalfConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.HalfConverter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.HalfConverter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.HalfConverter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Half" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceState.Equals(SlimDX.XAudio2.VoiceState@,SlimDX.XAudio2.VoiceState@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceState.Equals(SlimDX.XAudio2.VoiceState)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceState.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceState.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceState.op_Inequality(SlimDX.XAudio2.VoiceState,SlimDX.XAudio2.VoiceState)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceState.op_Equality(SlimDX.XAudio2.VoiceState,SlimDX.XAudio2.VoiceState)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:SlimDX.Direct3D9.ILoadUserData">
            <summary>
This interface is implemented by applications who wish to load additional user
data embedded in .X files. D3DX calls this interface when such data is encountered.
</summary>
            <unmanaged>ID3DXLoadUserData</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureRequirements.Equals(SlimDX.Direct3D9.TextureRequirements@,SlimDX.Direct3D9.TextureRequirements@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureRequirements.Equals(SlimDX.Direct3D9.TextureRequirements)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureRequirements.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureRequirements.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureRequirements.op_Inequality(SlimDX.Direct3D9.TextureRequirements,SlimDX.Direct3D9.TextureRequirements)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TextureRequirements.op_Equality(SlimDX.Direct3D9.TextureRequirements,SlimDX.Direct3D9.TextureRequirements)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.TextureRequirements.MipLevelCount">
            <summary>
The suggested mip level count.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TextureRequirements.Format">
            <summary>
The suggested surface format.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TextureRequirements.Height">
            <summary>
The suggest height of the texture, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TextureRequirements.Width">
            <summary>
The suggested width of the texture, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureRequirements">
            <summary>
Contains suggested texture creation parameters.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription1.Equals(SlimDX.DXGI.AdapterDescription1@,SlimDX.DXGI.AdapterDescription1@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription1.Equals(SlimDX.DXGI.AdapterDescription1)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription1.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription1.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription1.op_Inequality(SlimDX.DXGI.AdapterDescription1,SlimDX.DXGI.AdapterDescription1)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.AdapterDescription1.op_Equality(SlimDX.DXGI.AdapterDescription1,SlimDX.DXGI.AdapterDescription1)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.Flags">
            <summary>
Gets the adapter's flags, describing the adapter type.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.Luid">
            <summary>
Gets the adapter's unique identifier.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.SharedSystemMemory">
            <summary>
Gets the number of bytes of system memory shared with the CPU.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.DedicatedSystemMemory">
            <summary>
Gets the number of bytes of system memory not shared with the CPU.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.DedicatedVideoMemory">
            <summary>
Gets the number of bytes of video memory not shared with the CPU.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.Revision">
            <summary>
Gets the adapter's revision number.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.SubsystemId">
            <summary>
Gets the adapter's subsystem ID.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.DeviceId">
            <summary>
Gets the adapter's device ID.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.VendorId">
            <summary>
Gets the adapter's vendor ID.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.AdapterDescription1.Description">
            <summary>
Gets the adapter's description.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.AdapterDescription1">
            <summary>
Describes various properties of an Adapter1.
</summary>
            <unmanaged>DXGI_ADAPTER_DESC1</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexShaderWrapper.Get">
            <summary>
Gets the vertex shader assigned to the device.
</summary>
            <returns>The vertex shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexShaderWrapper.Set(SlimDX.Direct3D10.VertexShader)">
            <summary>
Assigns a vertex shader to the device.
</summary>
            <param name="shader">The shader to assign to the device. Assign null to disable the vertex shader.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.ShaderResourceView.FromFile(SlimDX.Direct3D10.Device,System.String,SlimDX.Direct3D10.ImageLoadInformation)">
            <summary>
Creates a shader resource view from a file.
</summary>
            <param name="device">The device that will own the resource.</param>
            <param name="fileName">The name of the file that contains the shader resource view.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.ShaderResourceView.FromFile(SlimDX.Direct3D10.Device,System.String)">
            <summary>
Creates a shader resource view from a file.
</summary>
            <param name="device">The device that will own the resource.</param>
            <param name="fileName">The name of the file that contains the shader resource view.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.ResourceView.Resource">
            <summary>Gets the resource that is accessed through this view.</summary>
            <unmanaged>ID3D10View::GetResource</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.CompressedAnimationSet">
            <summary>
An application uses the methods of this interface to implement a key frame
animation set stored in a compressed data format.
</summary>
            <unmanaged>ID3DXCompressedAnimationSet</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentParameters.Equals(SlimDX.Direct3D9.PresentParameters,SlimDX.Direct3D9.PresentParameters)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentParameters.Equals(SlimDX.Direct3D9.PresentParameters)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentParameters.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentParameters.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentParameters.op_Inequality(SlimDX.Direct3D9.PresentParameters,SlimDX.Direct3D9.PresentParameters)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentParameters.op_Equality(SlimDX.Direct3D9.PresentParameters,SlimDX.Direct3D9.PresentParameters)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentParameters.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.Direct3D9.PresentParameters" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.PresentationInterval">
            <summary>
Gets or sets the presentation interval.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.FullScreenRefreshRateInHertz">
            <summary>
Gets or sets the fullscreen refresh rate, in hertz.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.PresentFlags">
            <summary>
Gets or sets flags describing how the device should present its data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.AutoDepthStencilFormat">
            <summary>
Gets or sets the format of the automatic depth-stencil buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.EnableAutoDepthStencil">
            <summary>
Gets or sets a value indicating whether a depth-stencil surface should be automatically created for the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.Windowed">
            <summary>
Gets or sets a value indicating whether the device will run in windowed or fullscreen mode.
</summary>
            <value>
                <c>true</c> to run in windowed mode, <c>false</c> to run in fullscreen mode.</value>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.DeviceWindowHandle">
            <summary>
Gets or sets the device's window handle.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.SwapEffect">
            <summary>
Gets or sets the swap effect.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.MultisampleQuality">
            <summary>
Gets or sets the quality of the multisampling.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.Multisample">
            <summary>
Gets or sets the multisampling type.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.BackBufferCount">
            <summary>
Gets or sets the number of back buffers that will be created.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.BackBufferFormat">
            <summary>
The back buffer format.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.BackBufferHeight">
            <summary>
Gets or sets the height of the back buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentParameters.BackBufferWidth">
            <summary>
Gets or sets the width of the back buffer.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentParameters.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.PresentParameters" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PresentParameters">
            <summary>Describes the presentation parameters of a device.</summary>
            <unmanaged>D3DPRESENT_PARAMETERS</unmanaged>
        </member>
        <member name="M:SlimDX.DirectInput.CustomDevice`1.GetObjectPropertiesByName(System.String)">
            <summary>
Gets properties about a single object on an input device.
</summary>
            <param name="name">The name of the object whose properties are to be retrieved.</param>
            <returns>The properties of the desired object.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.CustomDevice`1.GetBufferedData">
            <summary>
Retrieves buffered data from the device.
</summary>
            <returns>A collection of buffered input events.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.CustomDevice`1.GetCurrentState(`0@)">
            <summary>
Retrieves the current device state.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.CustomDevice`1.GetCurrentState">
            <summary>
Retrieves the current device state.
</summary>
            <returns>The current device state.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.CustomDevice`1.#ctor(SlimDX.DirectInput.DirectInput,System.Guid)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectInput.Device" /> class.
</summary>
            <param name="subsystem">The subsystem identifier.</param>
        </member>
        <member name="P:SlimDX.DirectInput.Device.Information">
            <summary>
Gets information about the device's identity.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Device.Capabilities">
            <summary>
Gets the capabilities of the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Device.Properties">
            <summary>
Gets a set of properties that control the behavior of the device.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.Device.Escape(System.Int32,System.Byte[],System.Int32)">
            <summary>
Sends a hardware-specific command to the force-feedback driver.
</summary>
            <param name="command">The command to be sent.</param>
            <param name="data">The data to be sent to the device.</param>
            <param name="outputSize">The expected size of the output buffer.</param>
            <returns>The output data of the command.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.GetObjectPropertiesById(System.Int32)">
            <summary>
Gets properties about a single object on an input device.
</summary>
            <param name="objectId">The identifier of the object whose properties are to be retrieved.</param>
            <returns>The properties of the desired object.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.GetObjectPropertiesByUsage(System.Int32)">
            <summary>
Gets properties about a single object on an input device.
</summary>
            <param name="usageCode">The usageCode of the object whose properties are to be retrieved.</param>
            <returns>The properties of the desired object.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.GetObjects">
            <summary>
Retrieves a collection of objects on the device.
</summary>
            <returns>A collection of all device objects on the device.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.GetObjects(SlimDX.DirectInput.ObjectDeviceType)">
            <summary>
Retrieves a collection of objects on the device.
</summary>
            <param name="objectType">A filter for the returned device objects collection.</param>
            <returns>A collection of device objects matching the specified filter.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.Poll">
            <summary>
Retrieves data from polled objects on a DirectInput device.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.RunControlPanel(System.Windows.Forms.Control)">
            <summary>
Runs the DirectInput control panel associated with this device. If the
device does not have a control panel associated with it, the default
device control panel is launched.
</summary>
            <param name="parent">The parent control.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.RunControlPanel">
            <summary>
Runs the DirectInput control panel associated with this device. If the
device does not have a control panel associated with it, the default
device control panel is launched.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.SetCooperativeLevel(System.Windows.Forms.Control,SlimDX.DirectInput.CooperativeLevel)">
            <summary>
Sets the device's cooperative level.
</summary>
            <param name="control">A control to associate with the device.</param>
            <param name="flags">Flags that describe the cooperative level of the device.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.SetCooperativeLevel(System.IntPtr,SlimDX.DirectInput.CooperativeLevel)">
            <summary>
Sets the device's cooperative level.
</summary>
            <param name="handle">A handle of a window to associate with the device.</param>
            <param name="flags">Flags that describe the cooperative level of the device.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.Unacquire">
            <summary>
Releases access to the device.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Device.Acquire">
            <summary>
Obtains access to the input device.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.RawBufferedData.Equals(SlimDX.DirectInput.RawBufferedData@,SlimDX.DirectInput.RawBufferedData@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.RawBufferedData.Equals(SlimDX.DirectInput.RawBufferedData)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.RawBufferedData.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.RawBufferedData.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.RawBufferedData.op_Inequality(SlimDX.DirectInput.RawBufferedData,SlimDX.DirectInput.RawBufferedData)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.RawBufferedData.op_Equality(SlimDX.DirectInput.RawBufferedData,SlimDX.DirectInput.RawBufferedData)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.ObjectData.Equals(SlimDX.DirectInput.ObjectData@,SlimDX.DirectInput.ObjectData@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.ObjectData.Equals(SlimDX.DirectInput.ObjectData)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.ObjectData.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.ObjectData.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.ObjectData.op_Inequality(SlimDX.DirectInput.ObjectData,SlimDX.DirectInput.ObjectData)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.ObjectData.op_Equality(SlimDX.DirectInput.ObjectData,SlimDX.DirectInput.ObjectData)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Envelope.Equals(SlimDX.DirectInput.Envelope@,SlimDX.DirectInput.Envelope@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Envelope.Equals(SlimDX.DirectInput.Envelope)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Envelope.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Envelope.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Envelope.op_Inequality(SlimDX.DirectInput.Envelope,SlimDX.DirectInput.Envelope)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.Envelope.op_Equality(SlimDX.DirectInput.Envelope,SlimDX.DirectInput.Envelope)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.EffectInfo.Equals(SlimDX.DirectInput.EffectInfo@,SlimDX.DirectInput.EffectInfo@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.EffectInfo.Equals(SlimDX.DirectInput.EffectInfo)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.EffectInfo.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.EffectInfo.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.EffectInfo.op_Inequality(SlimDX.DirectInput.EffectInfo,SlimDX.DirectInput.EffectInfo)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectInput.EffectInfo.op_Equality(SlimDX.DirectInput.EffectInfo,SlimDX.DirectInput.EffectInfo)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.HumanInterfaceDevice">
            <summary>
Gets a value indicating whether the device is a Human Interface Device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.HardwareRevision">
            <summary>
Gets the hardware revision number.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.FirmwareRevision">
            <summary>
Gets the firmware revision number.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.DriverVersion">
            <summary>
Gets the driver version number.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.ForceFeedbackMinimumTimeResolution">
            <summary>
Gets the minimum time, in microseconds, that the device can resolve. The device
rounds any times to the nearest supported increment.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.ForceFeedbackSamplePeriod">
            <summary>
Gets the minimum time between playback of consecutive raw force commands, in microseconds.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.PovCount">
            <summary>
Gets the number of Point-Of-View controllers available on the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.ButtonCount">
            <summary>
Gets the number of buttons available on the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.AxesCount">
            <summary>
Gets the number of axes available on the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.Subtype">
            <summary>
Gets the device sub-type specifier.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.Type">
            <summary>
Gets the device type specifier.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.Capabilities.Flags">
            <summary>
Gets the flags associated with the device.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.Capabilities">
            <summary>
Describes a DirectInput device's capabilities.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.ObjectProperties.PhysicalRange">
            <summary>
Gets the range of data returned from axis as suggested by the manufacturer.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.ObjectProperties.LogicalRange">
            <summary>
Gets the range of raw data returned from the object.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.ObjectProperties.Saturation">
            <summary>
Gets or sets the saturation zone of the object.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.ObjectProperties.LowerRange">
            <summary>
Gets the lower range of values that the object can possibly report.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.ObjectProperties.UpperRange">
            <summary>
Gets the upper range of values that the object can possibly report.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.ObjectProperties.Granularity">
            <summary>
Gets the granularity of the object.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.ObjectProperties.DeadZone">
            <summary>
Gets or sets the dead zone for the object.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.ObjectProperties.ApplicationData">
            <summary>
Gets or sets an application-defined value associated with the object.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.ObjectProperties.SetRange(System.Int32,System.Int32)">
            <summary>
Sets the object's data range.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.ObjectProperties">
            <summary>
Contains properties that define object behavior.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.ProductId">
            <summary>
Gets the product identifer.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.VendorId">
            <summary>
Gets the vendor identifier.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.UserName">
            <summary>
Gets the user name for a user currently assigned to the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.TypeName">
            <summary>
Gets the type name of the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.Saturation">
            <summary>
Gets or sets the saturation zone of a joystick device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.LowerRange">
            <summary>
Gets or sets the lower range of values that the device can possibly report.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.UpperRange">
            <summary>
Gets or sets the upper range of values that the device can possibly report.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.ProductName">
            <summary>
Gets or sets the friendly product name of the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.JoystickId">
            <summary>
Gets the instance number of a joystick device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.InstanceName">
            <summary>
Gets or sets the friendly instance name of the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.InterfacePath">
            <summary>
Gets the physical interface path to which the device is connected.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.ClassGuid">
            <summary>
Gets the class identifier for the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.Granularity">
            <summary>
Gets the input granularity for the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.PortDisplayName">
            <summary>
Gets the human-readable display name of the port to which the device is connected.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.MemoryLoad">
            <summary>
Gets the memory load for the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.ForceFeedbackGain">
            <summary>
Gets or sets the gain of the device for force-feedback effects.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.DeadZone">
            <summary>
Gets or sets the dead zone for a joystick device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.BufferSize">
            <summary>
Gets or sets the buffer input size.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.AxisMode">
            <summary>
Gets or sets the axis mode for the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.AutoCenter">
            <summary>
Gets or sets a value indicating whether device objects are self centering.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceProperties.ApplicationData">
            <summary>
Gets or sets an application-defined value associated with the device.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.DeviceProperties.SetRange(System.Int32,System.Int32)">
            <summary>
Sets the data range for the device.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.DeviceProperties.GetKeyCode(SlimDX.DirectInput.Key)">
            <summary>
Retrieves the scan code for the specified keyboard key.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.DeviceProperties.GetKeyName(SlimDX.DirectInput.Key)">
            <summary>
Retrieves the localized key name for the specified keyboard key.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceProperties">
            <summary>
Contains properties that define device behavior. These
properties include input buffer size and axis mode.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DataObjectAttribute.Flags">
            <summary>
Gets or sets extra flags for the object data format.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DataObjectAttribute.Type">
            <summary>
Gets or sets the device type that describes the object.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DataObjectAttribute.InstanceNumber">
            <summary>
Gets or sets the object instance number. Setting this value to -1
indicates that any object instance is permissible.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DataObjectAttribute.SourceGuid">
            <summary>
Gets or sets the unique identifier for the axis, button, or other input
source. When requesting a data format, making this member equal to
<see cref="F:System.Guid.Empty" /> indicates that any type of object
is permissible.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.DataObjectAttribute.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectInput.DataObjectAttribute" /> class.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DataObjectAttribute">
            <summary>
Indicates that a type is a data format specification for DirectInput.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DataFormatAttribute.Flags">
            <summary>
Gets or sets the flags describing other attributes of the data format.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.DataFormatAttribute.#ctor(SlimDX.DirectInput.DataFormatFlag)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DirectInput.DataFormatAttribute" /> class.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DataFormatAttribute">
            <summary>
Indicates that a type is a data format specification for DirectInput.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DirectInputException">
            <summary>
Represents errors that occur in the XInput subsystem.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.DirectInput.FindDevice(System.Guid,System.String)">
            <summary>
Retrieves the instance identifier of a device that
has been newly attached to the system.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.DirectInput.IsDeviceAttached(System.Guid)">
            <summary>
Gets a value indicating whether the specified device is
attached to the user's system.
</summary>
        </member>
        <member name="M:SlimDX.DirectInput.DirectInput.RunControlPanel(System.IntPtr)">
            <summary>
Runs Control Panel to enable the user to install a new
input device or modify configurations.
</summary>
            <param name="parent">The parent control.</param>
        </member>
        <member name="M:SlimDX.DirectInput.DirectInput.RunControlPanel">
            <summary>
Runs Control Panel to enable the user to install a new
input device or modify configurations.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DirectInput">
            <summary>
Provides an interface to DirectInput.
</summary>
            <unmanaged>IDirectInput8W</unmanaged>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.HumanInterfaceDevice">
            <summary>
Gets a value indicating whether the device is a Human Interface Device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.UsagePage">
            <summary>
If the device is a Human Interface Device, this member contains
the HID usage page code.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.UsageId">
            <summary>
If the device is a Human Interface Device, this member contains
the HID usage code.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.ProductName">
            <summary>
Gets the friendly name for the product.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.InstanceName">
            <summary>
Gets the friendly name for the instance.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.Subtype">
            <summary>
Gets the secondary device type specifier.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.Type">
            <summary>
Gets the main device type specifier.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.ForceFeedbackDriverGuid">
            <summary>
Gets the unique identifier for the driver being used for force-feedback. The
driver's manufacturer establishes this identifier.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.ProductGuid">
            <summary>
Gets the unique identifier for the product. This identifier is established
by the manufacturer of the device.
</summary>
        </member>
        <member name="P:SlimDX.DirectInput.DeviceInstance.InstanceGuid">
            <summary>
Gets the unique identifier for the instance of the device. Instance Guids are
specific to a particular computer.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceInstance">
            <summary>
Contains information about a device's identity.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.ObjectDeviceType">
            <summary>
Specifies the device type of an object data format.
</summary>
            <unmanaged>DIDFT</unmanaged>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.VendorDefined">
            <summary>
The object must be a type defined by the manufacturer.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.ToggleButton">
            <summary>
The object must be a toggle button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.PushButton">
            <summary>
The object must be a push button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.PointOfViewController">
            <summary>
The object must be a Point-Of-View controller.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.ForceFeedbackEffectTrigger">
            <summary>
The object must be a valid force-feedback effect trigger.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.ForceFeedbackActuator">
            <summary>
The object must contain a force-feedback actuator.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.Button">
            <summary>
The object must be a toggle or push button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.RelativeAxis">
            <summary>
The object must be a relative axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.Axis">
            <summary>
The object must be an absolute or relative axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDeviceType.AbsoluteAxis">
            <summary>
The object must be an absolute axis.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.ObjectDataFormatFlags">
            <summary>
Specifies other attributes of an object data format.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDataFormatFlags.Velocity">
            <summary>
The object must report velocity information.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDataFormatFlags.Position">
            <summary>
The object must report position information.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDataFormatFlags.Force">
            <summary>
The object must report force information.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDataFormatFlags.Acceleration">
            <summary>
The object must report acceleration information.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.ObjectDataFormatFlags.None">
            <summary>
No extra flags specified.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.ObjectAspect">
            <unmanaged>DIDOI</unmanaged>
        </member>
        <member name="T:SlimDX.DirectInput.MouseObject">
            <summary>
Defines possible mouse object codes.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.ZAxis">
            <summary>
The Z axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.YAxis">
            <summary>
The Y axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.XAxis">
            <summary>
The X axis.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.Button8">
            <summary>
The eighth button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.Button7">
            <summary>
The seventh button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.Button6">
            <summary>
The sixth button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.Button5">
            <summary>
The fifth button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.Button4">
            <summary>
The fourth button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.Button3">
            <summary>
The third button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.Button2">
            <summary>
The second button.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.MouseObject.Button1">
            <summary>
The first button.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.Key">
            <summary>
Defines possible keyboard key codes.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Yen">
            <summary>
The Japanese Yen key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.WebStop">
            <summary>
The Web Stop key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.WebSearch">
            <summary>
The Web Search key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.WebRefresh">
            <summary>
The Web Refresh key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.WebHome">
            <summary>
The Web Home key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.WebForward">
            <summary>
The Web Forwards key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.WebFavorites">
            <summary>
The Web Favorites key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.WebBack">
            <summary>
The Web Backwards key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Wake">
            <summary>
The Wake key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.VolumeUp">
            <summary>
The Volume Up key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.VolumeDown">
            <summary>
The Volume Down key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.UpArrow">
            <summary>
The Up Arrow key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Unlabeled">
            <summary>
An unlabeled key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Underline">
            <summary>
The Japanese Underline key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Tab">
            <summary>
The Tab key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.PrintScreen">
            <summary>
The Print Screen key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Stop">
            <summary>
The Stop key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Space">
            <summary>
The Spacebar.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Sleep">
            <summary>
The Sleep key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Slash">
            <summary>
The slash key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Semicolon">
            <summary>
The semicolon key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.ScrollLock">
            <summary>
The Scroll Lock key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.RightWindowsKey">
            <summary>
The right Windows key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.RightShift">
            <summary>
The right Shift key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.RightAlt">
            <summary>
The right Alt key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.RightArrow">
            <summary>
The Right Arrow key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Return">
            <summary>
The Return/Enter key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.RightControl">
            <summary>
The right Ctrl key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.RightBracket">
            <summary>
The right square bracket key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.PreviousTrack">
            <summary>
The Previous Track key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Power">
            <summary>
The Power key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.PlayPause">
            <summary>
The Play/Pause key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Period">
            <summary>
The period key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Pause">
            <summary>
The Pause key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.PageUp">
            <summary>
The Page Up key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.PageDown">
            <summary>
The Page Down key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Oem102">
            <summary>
The British and German OEM102 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPadStar">
            <summary>
The asterisk key on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPadSlash">
            <summary>
The slash key on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPadPlus">
            <summary>
The plus key on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPadPeriod">
            <summary>
The period key on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPadMinus">
            <summary>
The minus key on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPadEquals">
            <summary>
The equals key on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPadEnter">
            <summary>
The Enter key on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPadComma">
            <summary>
The comma key on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad9">
            <summary>
The number 9 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad8">
            <summary>
The number 8 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad7">
            <summary>
The number 7 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad6">
            <summary>
The number 6 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad5">
            <summary>
The number 5 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad4">
            <summary>
The number 4 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad3">
            <summary>
The number 3 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad2">
            <summary>
The number 2 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad1">
            <summary>
The number 1 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberPad0">
            <summary>
The number 0 on the NumberPad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NumberLock">
            <summary>
The NumberLock key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NoConvert">
            <summary>
The Japanese No Convert key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.NextTrack">
            <summary>
The Next Track key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.MyComputer">
            <summary>
The My Computer key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Mute">
            <summary>
The Mute key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Minus">
            <summary>
The minus key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.MediaStop">
            <summary>
The Media Stop key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.MediaSelect">
            <summary>
The Media Select key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Mail">
            <summary>
The Mail key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.LeftWindowsKey">
            <summary>
The left Windows key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.LeftShift">
            <summary>
The left Shift key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.LeftAlt">
            <summary>
The left Alt key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.LeftArrow">
            <summary>
The Left Arrow key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.LeftControl">
            <summary>
The left Ctrl key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.LeftBracket">
            <summary>
The left square bracket key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Kanji">
            <summary>
The Japanese Kanji key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Kana">
            <summary>
The Japanese Kana key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Insert">
            <summary>
The Insert key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Home">
            <summary>
The Home key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Grave">
            <summary>
The grav accent (`) key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F15">
            <summary>
The F15 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F14">
            <summary>
The F14 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F13">
            <summary>
The F13 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F12">
            <summary>
The F12 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F11">
            <summary>
The F11 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F10">
            <summary>
The F10 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F9">
            <summary>
The F9 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F8">
            <summary>
The F8 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F7">
            <summary>
The F7 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F6">
            <summary>
The F6 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F5">
            <summary>
The F5 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F4">
            <summary>
The F4 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F3">
            <summary>
The F3 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F2">
            <summary>
The F2 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F1">
            <summary>
The F1 key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Escape">
            <summary>
The Escape key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Equals">
            <summary>
The equals key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.End">
            <summary>
The End key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.DownArrow">
            <summary>
The Down Arrow key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Delete">
            <summary>
The Delete key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Convert">
            <summary>
The Japanese Convert key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Comma">
            <summary>
The comma key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Colon">
            <summary>
The colon key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.CapsLock">
            <summary>
The Caps Lock key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Calculator">
            <summary>
The calculator key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Backslash">
            <summary>
The back slash key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Backspace">
            <summary>
The Backspace.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.AX">
            <summary>
The Japanese Ax key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.AT">
            <summary>
The Japanese At key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Applications">
            <summary>
The Applications key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Apostrophe">
            <summary>
The apostrophe key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.AbntC2">
            <summary>
The AbntC2 key on Brazillian keyboards.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.AbntC1">
            <summary>
The AbntC1 key on Brazillian keyboards.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Z">
            <summary>
The letter Z.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Y">
            <summary>
The letter Y.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.X">
            <summary>
The letter X.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.W">
            <summary>
The letter W.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.V">
            <summary>
The letter V.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.U">
            <summary>
The letter U.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.T">
            <summary>
The letter T.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.S">
            <summary>
The letter S.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.R">
            <summary>
The letter R.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.Q">
            <summary>
The letter Q.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.P">
            <summary>
The letter P.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.O">
            <summary>
The letter O.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.N">
            <summary>
The letter N.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.M">
            <summary>
The letter M.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.L">
            <summary>
The letter L.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.K">
            <summary>
The letter K.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.J">
            <summary>
The letter J.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.I">
            <summary>
The letter I.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.H">
            <summary>
The letter H.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.G">
            <summary>
The letter G.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.F">
            <summary>
The letter F.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.E">
            <summary>
The letter E.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D">
            <summary>
The letter D.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.C">
            <summary>
The letter C.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.B">
            <summary>
The letter B.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.A">
            <summary>
The letter A.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D9">
            <summary>
The number 9.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D8">
            <summary>
The number 8.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D7">
            <summary>
The number 7.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D6">
            <summary>
The number 6.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D5">
            <summary>
The number 5.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D4">
            <summary>
The number 4.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D3">
            <summary>
The number 3.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D2">
            <summary>
The number 2.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D1">
            <summary>
The number 1.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.Key.D0">
            <summary>
The number 0.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceType">
            <summary>
Specifies the main type of a DirectInput device.
</summary>
            <unmanaged>DI8DEVTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Supplemental">
            <summary>
A specialized device with functionality unsuitable for main control of an application,
such as pedals with a wheel.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.ScreenPointer">
            <summary>
A screen pointer device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Remote">
            <summary>
A remote-control device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Mouse">
            <summary>
A mouse or mouse-like device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Keyboard">
            <summary>
A keyboard or keyboard-like device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Joystick">
            <summary>
A generic joystick.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Gamepad">
            <summary>
A console game pad.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Flight">
            <summary>
Controller for a flight simulation.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Driving">
            <summary>
A device for steering.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.ControlDevice">
            <summary>
Input device used to control another type of device from within the context of
the application.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.Other">
            <summary>
A device that does not fall into any other category.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceType.FirstPerson">
            <summary>
A first-person action game device.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceFlags">
            <summary>
Specifies the flags that can be associated with a DirectInput device.
</summary>
            <unmanaged>DIDC</unmanaged>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.StartDelay">
            <summary>
The force-feedback system supports the start delay parameter for at least one effect.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.Saturation">
            <summary>
The force-feedback system supports the saturation of condition effects for at least
one condition.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.PositiveNegativeSaturation">
            <summary>
The force-feedback system supports a maximum saturation for both positive and negative
force output for at least one condition.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.PositiveNegativeCoefficients">
            <summary>
The force-feedback system supports two coefficient values for conditions.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.PolledDevice">
            <summary>
At least one object on the device is polled, rather than interrupt driven.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.PolledDataFormat">
            <summary>
At least one object in the current data format is polled, rather than interrupt driven.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.Phantom">
            <summary>
The device is a placeholder.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.Hidden">
            <summary>
The device is a fictious device created by a device driver so that is can generate
mouse and keyboard events.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.ForceFeedbackAttack">
            <summary>
The force-feedback system supports the attack parameter for at least one effect.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.ForceFeedbackFade">
            <summary>
The force-feedback system supports the fade parameter for at least one effect.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.ForceFeedback">
            <summary>
The device supports force-feedback.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.Emulated">
            <summary>
Specifies that the device's data is coming from a user mode device interface.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.DeadBand">
            <summary>
The device supports deadband for at least one force-feedback condition.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.Attached">
            <summary>
The device is physically attached to the user's computer.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceFlags.Alias">
            <summary>
The device is a duplicate of another DirectInput device.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceEnumerationFlags">
            <unmanaged>DIEDFL</unmanaged>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceDataFormat">
            <summary>
The data format for a DirectInput device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceDataFormat.Joystick">
            <summary>
Joystick data.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceDataFormat.Mouse">
            <summary>
Mouse data.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceDataFormat.Keyboard">
            <summary>
Keyboard data.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceClass">
            <unmanaged>DI8DEVCLASS</unmanaged>
        </member>
        <member name="T:SlimDX.DirectInput.DeviceAxisMode">
            <summary>
Specifies the axis mode for the device.
</summary>
            <unmanaged>DIPROPAXISMODE</unmanaged>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceAxisMode.Relative">
            <summary>
The axis works with relative data.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DeviceAxisMode.Absolute">
            <summary>
The axis works with absolute data.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.DataFormatFlag">
            <summary>
Specifies other attributes of a data format.
</summary>
            <unmanaged>DIDF</unmanaged>
        </member>
        <member name="F:SlimDX.DirectInput.DataFormatFlag.RelativeAxis">
            <summary>
The axes are in relative mode.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.DataFormatFlag.AbsoluteAxis">
            <summary>
The axes are in absolute mode.
</summary>
        </member>
        <member name="T:SlimDX.DirectInput.CooperativeLevel">
            <summary>
Specifies the cooperative level for a DirectInput device.
</summary>
            <unmanaged>DISCL</unmanaged>
        </member>
        <member name="F:SlimDX.DirectInput.CooperativeLevel.NoWinKey">
            <summary>
Disables the Windows logo key.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CooperativeLevel.Background">
            <summary>
Background operation of the device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CooperativeLevel.Foreground">
            <summary>
Foreground operation of the device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CooperativeLevel.Nonexclusive">
            <summary>
Non exclusive access to the device.
</summary>
        </member>
        <member name="F:SlimDX.DirectInput.CooperativeLevel.Exclusive">
            <summary>
Exclusive access to the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PixelShader.Function">
            <summary>
Gets the shader function stream.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PixelShader.Device">
            <summary>
Gets the device associated with the shader.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShader.MinInstructionSlots">
            <summary>
The minimum number of instructions slots supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShader.MaxInstructionSlots">
            <summary>
The maximum number of instruction slots supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShader.MinStaticFlowControlDepth">
            <summary>
The minimum level of nesting of static flow control instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShader.MaxStaticFlowControlDepth">
            <summary>
The maximum level of nesting of static flow control instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShader.MinTemps">
            <summary>
The minimum number of temporary registers supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShader.MaxTemps">
            <summary>
The maximum number of temporary registers supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShader.MinDynamicFlowControlDepth">
            <summary>
The minimum level of nesting of dynamic flow control instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShader.MaxDynamicFlowControlDepth">
            <summary>
The maximum level of nesting of dynamic flow control instructions.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.PixelShader.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.Direct3D9.PixelShader" />.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.PixelShader.#ctor(SlimDX.Direct3D9.Device,SlimDX.Direct3D9.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.PixelShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="function">The shader function stream.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.PixelShader">
            <summary>
Represents a pixel shader.
</summary>
            <unmanaged>IDirect3DPixelShader9</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.ShaderBytecode.Version">
            <summary>
Gets the version of the shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ShaderBytecode.ConstantTable">
            <summary>
Gets the shader constant table.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ShaderBytecode.Data">
            <summary>
Gets the raw shader function stream.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.GetSamplers">
            <summary>
Gets the sampler names references in the shader.
</summary>
            <returns>The set of referenced sampler names.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.GetOutputSemantics">
            <summary>
Gets the set of semantics for shader outputs.
</summary>
            <returns>The set of semantics for shader outputs.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.GetInputSemantics">
            <summary>
Gets the set of semantics for shader inputs.
</summary>
            <returns>The set of semantics for shader inputs.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.FindComment(SlimDX.Direct3D9.Format)">
            <summary>
Searches through the shader for the specified comment.
</summary>
            <param name="fourCC">A FOURCC code used to identify the comment.</param>
            <returns>The comment data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Disassemble">
            <summary>
Disassembles the shader bytecode.
</summary>
            <returns>The disassembled shader.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Disassemble(System.Boolean)">
            <summary>
Disassembles the shader bytecode.
</summary>
            <param name="enableColorCode">Determines whether the disassembly should be color coded for easier reading.</param>
            <returns>The disassembled shader.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Disassemble(System.Boolean,System.String)">
            <summary>
Disassembles the shader bytecode.
</summary>
            <param name="enableColorCode">Determines whether the disassembly should be color coded for easier reading.</param>
            <param name="comments">A shader comment string.</param>
            <returns>The disassembled shader.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.ParseVersion(System.Int32)">
            <summary>
Converts a shader version number into a managed <see cref="T:System.Version" /> object.
</summary>
            <param name="version">The shader version number.</param>
            <returns>The parsed shader version information.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.MinorVersion(System.Int32)">
            <summary>
Extracts the minor version component of a shader version number.
</summary>
            <param name="version">The shader version number.</param>
            <returns>The minor version component.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.MajorVersion(System.Int32)">
            <summary>
Extracts the major version component of a shader version number.
</summary>
            <param name="version">The shader version number.</param>
            <returns>The major version component.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.PreprocessFromFile(System.String)">
            <summary>
Preprocesses a shader file without performing compilation.
</summary>
            <param name="fileName">Name of the shader source file.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.PreprocessFromFile(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include)">
            <summary>
Preprocesses a shader file without performing compilation.
</summary>
            <param name="fileName">Name of the shader source file.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.PreprocessFromFile(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String@)">
            <summary>
Preprocesses a shader file without performing compilation.
</summary>
            <param name="fileName">Name of the shader source file.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Preprocess(System.String)">
            <summary>
Preprocesses a shader without performing compilation.
</summary>
            <param name="sourceData">The source shader data.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Preprocess(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include)">
            <summary>
Preprocesses a shader without performing compilation.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Preprocess(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String@)">
            <summary>
Preprocesses a shader without performing compilation.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Preprocess(System.Byte[])">
            <summary>
Preprocesses a shader without performing compilation.
</summary>
            <param name="sourceData">The source shader data.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Preprocess(System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include)">
            <summary>
Preprocesses a shader without performing compilation.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Preprocess(System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String@)">
            <summary>
Preprocesses a shader without performing compilation.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.CompileFromFile(System.String,System.String,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Compiles a shader from file.
</summary>
            <param name="fileName">Name of the shader source file.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.CompileFromFile(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Compiles a shader from file.
</summary>
            <param name="fileName">Name of the shader source file.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.CompileFromFile(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,System.String,SlimDX.Direct3D9.ShaderFlags,System.String@)">
            <summary>
Compiles a shader from file.
</summary>
            <param name="fileName">Name of the shader source file.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Compile(System.String,System.String,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Compiles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Compile(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Compiles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Compile(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,System.String,SlimDX.Direct3D9.ShaderFlags,System.String@)">
            <summary>
Compiles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Compile(System.Byte[],System.String,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Compiles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Compile(System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Compiles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Compile(System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,System.String,System.String,SlimDX.Direct3D9.ShaderFlags,System.String@)">
            <summary>
Compiles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="functionName">The name of the shader entry point.</param>
            <param name="profile">The shader profile that determines the shader instruction set.</param>
            <param name="flags">Compilation options.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.AssembleFromFile(System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Assembles a shader from file.
</summary>
            <param name="fileName">Name of the shader file.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.AssembleFromFile(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Assembles a shader from file.
</summary>
            <param name="fileName">Name of the shader file.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.AssembleFromFile(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,SlimDX.Direct3D9.ShaderFlags,System.String@)">
            <summary>
Assembles a shader from file.
</summary>
            <param name="fileName">Name of the shader file.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="flags">Compilation options.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Assemble(System.String,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Assembles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Assemble(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Assembles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Assemble(System.String,SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,SlimDX.Direct3D9.ShaderFlags,System.String@)">
            <summary>
Assembles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="flags">Compilation options.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Assemble(System.Byte[],SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Assembles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Assemble(System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,SlimDX.Direct3D9.ShaderFlags)">
            <summary>
Assembles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="flags">Compilation options.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Assemble(System.Byte[],SlimDX.Direct3D9.Macro[],SlimDX.Direct3D9.Include,SlimDX.Direct3D9.ShaderFlags,System.String@)">
            <summary>
Assembles a shader from the given source data.
</summary>
            <param name="sourceData">The source shader data.</param>
            <param name="defines">Macro definitions.</param>
            <param name="includeFile">An <see cref="T:SlimDX.Direct3D9.Include" /> interface to use for handling #include directives.</param>
            <param name="flags">Compilation options.</param>
            <param name="errors">When the method completes, contains any compilation errors and warnings.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.ShaderBytecode" /> object representing the raw shader stream.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderBytecode.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.Direct3D9.ShaderBytecode" />.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ShaderBytecode">
            <summary>
Represents a raw shader function stream.
</summary>
            <unmanaged>ID3DXBuffer</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Macro.Equals(SlimDX.Direct3D9.Macro@,SlimDX.Direct3D9.Macro@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Macro.Equals(SlimDX.Direct3D9.Macro)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Macro.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Macro.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Macro.op_Inequality(SlimDX.Direct3D9.Macro,SlimDX.Direct3D9.Macro)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Macro.op_Equality(SlimDX.Direct3D9.Macro,SlimDX.Direct3D9.Macro)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.Macro.Definition">
            <summary>
The definition of the preprocessor symbol.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Macro.Name">
            <summary>
The name of the preprocessor symbol.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Macro">
            <summary>
Describes preprocessor definitions used by an effect object.
</summary>
            <unmanaged>D3DXMACRO</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Include.Close(System.IO.Stream)">
            <summary>
Closes a shader #include file.
</summary>
            <param name="stream">The previously opened include stream.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Include.Open(SlimDX.Direct3D9.IncludeType,System.String,System.IO.Stream,System.IO.Stream@)">
            <summary>
Opens and reads the contents of a shader #include file.
</summary>
            <param name="includeType">Flags specifying the type of the include file.</param>
            <param name="fileName">Name of the include file to open.</param>
            <param name="parentStream">The parent include file.</param>
            <param name="stream">When the method completes, contains a stream pointing to the include file.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.Include">
            <summary>
Specifies an interface for handling #include directives.
</summary>
            <unmanaged>ID3DXInclude</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.ConstantTable.SetValue``1(SlimDX.Direct3D9.Device,SlimDX.Direct3D9.EffectHandle,``0[])">
            <summary>
Sets the value of a parameter using the specified data.
</summary>
            <param name="parameter">The array parameter whose value is to be set.</param>
            <param name="values">The array of new values for the array parameter.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ConstantTable.SetValue``1(SlimDX.Direct3D9.Device,SlimDX.Direct3D9.EffectHandle,``0)">
            <summary>
Sets the value of a parameter using the specified data.
</summary>
            <param name="parameter">The parameter whose value is to be set.</param>
            <param name="value">The new value for the parameter.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="T:SlimDX.Direct3D9.ConstantTable">
            <summary>
Used to access the constant table. This table contains the variables that are used by high-level language shaders and effects.
</summary>
            <unmanaged>ID3DXConstantTable</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.ConstantDescription">
            <summary>A description of a constant in a constant table.</summary>
            <unmanaged>D3DXCONSTANT_DESC</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.ConstantTableDescription">
            <summary>A description of the constant table.</summary>
            <unmanaged>D3DXCONSTANTTABLE_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderSemantic.Equals(SlimDX.Direct3D9.ShaderSemantic@,SlimDX.Direct3D9.ShaderSemantic@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderSemantic.Equals(SlimDX.Direct3D9.ShaderSemantic)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderSemantic.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderSemantic.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderSemantic.op_Inequality(SlimDX.Direct3D9.ShaderSemantic,SlimDX.Direct3D9.ShaderSemantic)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ShaderSemantic.op_Equality(SlimDX.Direct3D9.ShaderSemantic,SlimDX.Direct3D9.ShaderSemantic)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.ShaderSemantic.UsageIndex">
            <summary>
Options that modify how the usage is interpreted.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ShaderSemantic.Usage">
            <summary>
Options that identify how the parameter will be used.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ShaderSemantic">
            <summary>
Describes the semantics of a shader parameter.
</summary>
            <unmanaged>D3DXSEMANTIC</unmanaged>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.HFReferenceMin">
            <summary>
Minimum reference high frequency, in hertz.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.HFReferenceMax">
            <summary>
Maximum reference high frequency, in hertz.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.HFReferenceDefault">
            <summary>
Default reference high frequency, in hertz.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DiffusionMin">
            <summary>
Minimum echo density in the late reverberation decay, in percent.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DiffusionMax">
            <summary>
Maximum echo density in the late reverberation decay, in percent.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DiffusionDefault">
            <summary>
Default echo density in the late reverberation decay, in percent.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DensityMin">
            <summary>
Minimum modal density in the late reverberation decay, in percent.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DensityMax">
            <summary>
Maximum modal density in the late reverberation decay, in percent.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DensityDefault">
            <summary>
Default modal density in the late reverberation decay, in percent.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReverbDelayMin">
            <summary>
Minimum time limit between the early reflections and the late reverberation relative to the time of the first reflection, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReverbDelayMax">
            <summary>
Maximum time limit between the early reflections and the late reverberation relative to the time of the first reflection, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReverbDelayDefault">
            <summary>
Default time limit between the early reflections and the late reverberation relative to the time of the first reflection, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReverbMin">
            <summary>
Minimum attenuation of late reverberation relative to Room, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReverbMax">
            <summary>
Maximum attenuation of late reverberation relative to Room, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReverbDefault">
            <summary>
Default attenuation of late reverberation relative to Room, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReflectionsDelayMin">
            <summary>
Minimum delay time of the first reflection relative to the direct path, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReflectionsDelayMax">
            <summary>
Maximum delay time of the first reflection relative to the direct path, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReflectionsDelayDefault">
            <summary>
Default delay time of the first reflection relative to the direct path, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReflectionsMin">
            <summary>
Minimum attenuation of early reflections relative to Room, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReflectionsMax">
            <summary>
Maximum attenuation of early reflections relative to Room, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.ReflectionsDefault">
            <summary>
Default attenuation of early reflections relative to Room, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DecayHFRatioMin">
            <summary>
Minimum ratio of the decay time at high frequencies to the decay time at low frequencies.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DecayHFRatioMax">
            <summary>
Maximum ratio of the decay time at high frequencies to the decay time at low frequencies.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DecayHFRatioDefault">
            <summary>
Default ratio of the decay time at high frequencies to the decay time at low frequencies.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DecayTimeMin">
            <summary>
Minimum decay time, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DecayTimeMax">
            <summary>
Maximum decay time, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.DecayTimeDefault">
            <summary>
Default decay time, in seconds.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomRolloffFactorMin">
            <summary>
Minimum rolloff factor for the reflected signals. The rolloff factor for the direct path is controlled by the DirectSound listener.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomRolloffFactorMax">
            <summary>
Maximum rolloff factor for the reflected signals. The rolloff factor for the direct path is controlled by the DirectSound listener.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomRolloffFactorDefault">
            <summary>
Default rolloff factor for the reflected signals. The rolloff factor for the direct path is controlled by the DirectSound listener.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomHFMin">
            <summary>
Minimum attenuation of the room high-frequency effect, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomHFMax">
            <summary>
Maximum attenuation of the room high-frequency effect, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomHFDefault">
            <summary>
Default attenuation of the room high-frequency effect, in mB.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomMin">
            <summary>
Minimum attenuation of the room effect, in millibels (mB).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomMax">
            <summary>
Maximum attenuation of the room effect, in millibels (mB).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2Reverb.RoomDefault">
            <summary>
Default attenuation of the room effect, in millibels (mB).
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.Preset">
            <summary>
Gets or sets the standard reverberation parameters of a buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.Quality">
            <summary>
Gets or sets the quality of the environmental reverberation effect.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.HFReference">
            <summary>
Reference high frequency, in hertz.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.Density">
            <summary>
Modal density in the late reverberation decay, in percent.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.Diffusion">
            <summary>
Echo density in the late reverberation decay, in percent.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.ReverbDelay">
            <summary>
Time limit between the early reflections and the late reverberation relative to the time of the first reflection, in seconds.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.Reverb">
            <summary>
Attenuation of late reverberation relative to Room, in mB.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.ReflectionsDelay">
            <summary>
Delay time of the first reflection relative to the direct path, in seconds.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.Reflections">
            <summary>
Attenuation of early reflections relative to Room, in mB.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.DecayHFRatio">
            <summary>
Ratio of the decay time at high frequencies to the decay time at low frequencies.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.DecayTime">
            <summary>
Decay time, in seconds.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.RoomRolloffFactor">
            <summary>
Rolloff factor for the reflected signals.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.RoomHF">
            <summary>
Attenuation of the room high-frequency effect, in mB.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.I3DL2Reverb.Room">
            <summary>
Attenuation of the room effect, in millibels (mB).
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.I3DL2Reverb">
            <summary>
The SoundEffectI3DL2Reverb object is used to set and retrieve effect parameters on a buffer that supports I3DL2 (Interactive 3D Audio Level 2) reverberation effects.
</summary>
            <unmanaged>IDirectSoundFXI3DL2Reverb</unmanaged>
        </member>
        <member name="M:SlimDX.DirectWrite.IFontCollectionLoader.CreateEnumeratorFromKey(SlimDX.DirectWrite.Factory,System.IntPtr,System.Int32)">
            <summary>
Creates a font file enumerator object that encapsulates a collection of font files.
The font system calls back to this interface to create a font collection.
</summary>
            <param name="factory">Factory associated with the loader.</param>
            <param name="collectionKey">Font collection key that uniquely identifies the collection of font files within
the scope of the font collection loader being used.</param>
            <param name="collectionKeySize">Size of the font collection key in bytes.</param>
            <returns>
Pointer to the newly created font file enumerator.
</returns>
        </member>
        <member name="T:SlimDX.DirectWrite.IFontCollectionLoader">
            <summary>
The font collection loader interface is used to construct a collection of fonts given a particular type of key.
The font collection loader interface is recommended to be implemented by a singleton object.
IMPORTANT: font collection loader implementations must not register themselves with a DirectWrite factory
inside their constructors and must not unregister themselves in their destructors, because
registration and unregistraton operations increment and decrement the object reference count respectively.
Instead, registration and unregistration of font file loaders with DirectWrite factory should be performed
outside of the font file loader implementation as a separate step.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.WordWrapping">
            <summary>
Specifies the word wrapping to be used in a particular multiline paragraph.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.TrimmingGranularity">
            <summary>
Specifies the text granularity used to trim text overflowing the layout box.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.MeasuringMethod">
            <summary>
Specifies the measuring method used for text layout.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.TextAlignment">
            <summary>
Specifies alignment of paragraph text along the reading direction axis relative to the leading and trailing edge of the layout box.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.ScriptShapes">
            <summary>
Indicates additional shaping requirements for text.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.RenderingMode">
            <summary>
Represents a method of rendering glyphs. 
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.ReadingDirection">
            <summary>
Specifies the direction in which reading progresses. 
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.PixelGeometry">
            <summary>
Represents the internal structure of a device pixel (that is the physical arrangement of red, green,
and blue color components) that is assumed for purposes of rendering text. 
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.ParagraphAlignment">
            <summary>
Specifies alignment of paragraph text along the flow direction axis, relative to the flow's beginning and trailing edge of the layout box.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.NumberSubstitutionMethod">
            <summary>
Specifies how to apply number substitution on digits and related punctuation.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.LineSpacingMethod">
            <summary>
The method used for line spacing in a text layout.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.InformationalStringId">
            <summary>
The informational string enumeration which identifies a string embedded in a font file.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FontWeight">
            <summary>
Describes common values for degree of blackness, or thickness of strokes of characters in a font.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FontStyle">
            <summary>
Represents the style of a font face as normal, italic, or oblique.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FontStretch">
            <summary>
Represents the degree to which a font has been stretched compared to a font's normal aspect ratio.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FontSimulations">
            <summary>
Specifies algorithmic style simulations to be applied to the font face.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FontFileType">
            <summary>
The type of font represented by a single font file.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FontFeatureTag">
            <summary>
Indicates the typographic feature of text supplied by the font.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FontFaceType">
            <summary>
Indicates the file format of a font face.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FlowDirection">
            <summary>
Indicates the direction of flow for placing lines of text in a paragraph.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.FactoryType">
            <summary>
Specifies the type of the DirectWrite factory object.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.BreakCondition">
            <summary>
Indicates the condition at the edges of inline objects or text used to determine line-breaking behavior.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.InputBindingDescription.SampleCount">
            <summary>
The number of samples for a multisampled texture; otherwise 0.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.InputBindingDescription.Dimension">
            <summary>
Identifies the amount of data in the resource.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.InputBindingDescription.ReturnType">
            <summary>
If the input is a texture, the return type.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.InputBindingDescription.Flags">
            <summary>
Shader input-parameter options.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.InputBindingDescription.BindCount">
            <summary>
Number of contiguous bind points for arrays.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.InputBindingDescription.BindPoint">
            <summary>
Starting bind point.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.InputBindingDescription.Type">
            <summary>
Identifies the type of data in the resource.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.InputBindingDescription.Name">
            <summary>
Name of the shader resource.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.InputBindingDescription">
            <summary>
Describes how a shader resource is bound to a shader input.
</summary>
            <unmanaged>D3D11_SHADER_INPUT_BIND_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputBufferBinding.Equals(SlimDX.Direct3D11.StreamOutputBufferBinding@,SlimDX.Direct3D11.StreamOutputBufferBinding@)">
            <summary>
Returns a value indicating whether the two objects are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputBufferBinding.Equals(SlimDX.Direct3D11.StreamOutputBufferBinding)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.StreamOutputBufferBinding" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputBufferBinding.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputBufferBinding.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputBufferBinding.op_Inequality(SlimDX.Direct3D11.StreamOutputBufferBinding,SlimDX.Direct3D11.StreamOutputBufferBinding)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputBufferBinding.op_Equality(SlimDX.Direct3D11.StreamOutputBufferBinding,SlimDX.Direct3D11.StreamOutputBufferBinding)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputBufferBinding.#ctor(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.StreamOutputBufferBinding" /> struct.
</summary>
            <param name="buffer">The buffer being bound.</param>
            <param name="offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputBufferBinding.Offset">
            <summary>
Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputBufferBinding.Buffer">
            <summary>
Gets or sets the buffer being bound.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.StreamOutputBufferBinding">
            <summary>
Properties defining the way a buffer is bound to the pipeline as a target for stream output operations.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Buffer.#ctor(SlimDX.Direct3D11.Device,SlimDX.DataStream,System.Int32,SlimDX.Direct3D11.ResourceUsage,SlimDX.Direct3D11.BindFlags,SlimDX.Direct3D11.CpuAccessFlags,SlimDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Buffer" /> class.
</summary>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name="usage">The usage pattern for the buffer.</param>
            <param name="bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name="accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Miscellaneous resource options.</param>
            <param name="structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Buffer.#ctor(SlimDX.Direct3D11.Device,System.Int32,SlimDX.Direct3D11.ResourceUsage,SlimDX.Direct3D11.BindFlags,SlimDX.Direct3D11.CpuAccessFlags,SlimDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Buffer" /> class.
</summary>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name="usage">The usage pattern for the buffer.</param>
            <param name="bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name="accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Miscellaneous resource options.</param>
            <param name="structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Buffer.#ctor(SlimDX.Direct3D11.Device,SlimDX.DataStream,SlimDX.Direct3D11.BufferDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Buffer" /> class.
</summary>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="description">The description of the buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Buffer.#ctor(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.BufferDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Buffer" /> class.
</summary>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="description">The description of the buffer.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.Buffer.Description">
            <summary>
Gets the buffer's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Buffer">
            <summary>
Represents a sequential collection of typed data elements,
typically used to contain vertices, indices, or shader constant data.
</summary>
            <unmanaged>ID3D11Buffer</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Resource.FilterTexture(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Resource,System.Int32,SlimDX.Direct3D11.FilterFlags)">
            <summary>
Generates a mipmap chain using a particular texture filter.
</summary>
            <param name="context">The device context used to generate the mipmaps.</param>
            <param name="texture">The texture to be filtered.</param>
            <param name="sourceLevel">The mipmap level whose data is used to generate the rest of the mipmap chain.</param>
            <param name="mipFilter">Flags controlling how each miplevel is filtered.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Resource.LoadTextureFromTexture(SlimDX.Direct3D11.DeviceContext,SlimDX.Direct3D11.Resource,SlimDX.Direct3D11.Resource,SlimDX.Direct3D11.TextureLoadInformation)">
            <summary>
Loads a texture from a texture.
</summary>
            <param name="context">The device context used to load the texture.</param>
            <param name="source">The source texture.</param>
            <param name="destination">The destination texture.</param>
            <param name="loadInformation">Texture loading parameters.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Resource.CalculateSubresourceIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
Calculates a subresource index.
</summary>
            <param name="mipSlice">The index of the desired mip slice.</param>
            <param name="arraySlice">The index of the desired array slice.</param>
            <param name="mipLevels">The total number of mip levels.</param>
            <returns>The subresource index (equivalent to mipSlice + (arraySlice * mipLevels)).</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.Resource.Dimension">
            <summary>
Gets the resource's dimension (type).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Resource.EvictionPriority">
            <summary>
Gets or sets the resource's eviction priority.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Resource.FromPointer(System.IntPtr)">
            <summary>
Constructs a new instance of the <see cref="T:SlimDX.Direct3D11.Resource" /> class using the specified pointer to a
previously constructed unmanaged object.
</summary>
            <param name="pointer">The unmanaged resource pointer.</param>
            <returns>The newly constructed object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Resource.FromSwapChain``1(SlimDX.DXGI.SwapChain,System.Int32)">
            <summary>
Gets a swap chain back buffer.
</summary>
            <typeparam name="T">The type of the buffer.</typeparam>
            <param name="swapChain">The swap chain to get the buffer from.</param>
            <param name="index">The index of the desired buffer.</param>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Resource.AsSurface">
            <summary>
Returns a DXGI Surface for this resource.
</summary>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="T:SlimDX.Direct3D11.Resource">
            <summary>
A base class for all resource objects.
</summary>
            <unmanaged>ID3D11Resource</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.MipFilter">
            <summary>
Filtering options when generating mip levels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.Filter">
            <summary>
Filtering options during resampling.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.ElementCount">
            <summary>
Number of elements to load.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.FirstDestinationElement">
            <summary>
First element of the destination texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.FirstSourceElement">
            <summary>
First element of the source texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.MipCount">
            <summary>
Number of mipmap levels in the source texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.FirstDestinationMip">
            <summary>
Destination texture mipmap level.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.FirstSourceMip">
            <summary>
Source texture mipmap level.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.DestinationRegion">
            <summary>
Destination texture region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.TextureLoadInformation.SourceRegion">
            <summary>
Source texture region. 
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.TextureLoadInformation">
            <summary>
Describes parameters used to load a texture from another texture.
</summary>
            <unmanaged>D3DX11_TEXTURE_LOAD_INFO</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ResourceRegion.Equals(SlimDX.Direct3D11.ResourceRegion@,SlimDX.Direct3D11.ResourceRegion@)">
            <summary>
Returns a value indicating whether the two ResourceRegions are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ResourceRegion.Equals(SlimDX.Direct3D11.ResourceRegion)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.ResourceRegion" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ResourceRegion.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ResourceRegion.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ResourceRegion.op_Inequality(SlimDX.Direct3D11.ResourceRegion,SlimDX.Direct3D11.ResourceRegion)">
            <summary>
Tests for inequality between two ResourceRegions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ResourceRegion.op_Equality(SlimDX.Direct3D11.ResourceRegion,SlimDX.Direct3D11.ResourceRegion)">
            <summary>
Tests for equality between two ResourceRegions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ResourceRegion.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.ResourceRegion" /> struct.
</summary>
            <param name="left">The left boundary of the region.</param>
            <param name="top">The top boundary of the region.</param>
            <param name="front">The front boundary of the region.</param>
            <param name="right">The right boundary of the region.</param>
            <param name="bottom">The bottom boundary of the region.</param>
            <param name="back">The back boundary of the region.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.ResourceRegion.Back">
            <summary>
Gets or sets the back boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ResourceRegion.Bottom">
            <summary>
Gets or sets the bottom boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ResourceRegion.Right">
            <summary>
Gets or sets the right boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ResourceRegion.Front">
            <summary>
Gets or sets the front boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ResourceRegion.Top">
            <summary>
Gets or sets the top boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.ResourceRegion.Left">
            <summary>
Gets or sets the left boundary of the region.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ResourceRegion">
            <summary>
Represents a 3D region of a resource's data.
</summary>
            <unmanaged>D3D11_BOX</unmanaged>
        </member>
        <member name="M:SlimDX.DirectSound.BufferCapabilities.Equals(SlimDX.DirectSound.BufferCapabilities@,SlimDX.DirectSound.BufferCapabilities@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.BufferCapabilities.Equals(SlimDX.DirectSound.BufferCapabilities)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.BufferCapabilities.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.BufferCapabilities.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.BufferCapabilities.op_Inequality(SlimDX.DirectSound.BufferCapabilities,SlimDX.DirectSound.BufferCapabilities)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DirectSound.BufferCapabilities.op_Equality(SlimDX.DirectSound.BufferCapabilities,SlimDX.DirectSound.BufferCapabilities)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.StickyFocus">
            <summary>
Gets or Sets whether the buffer has sticky focus.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.StaticBuffer">
            <summary>
Gets or Sets whether the buffer is in on-board hardware memory.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.PrimaryBuffer">
            <summary>
Gets or Sets whether the buffer is a primary buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.Mute3DAtMaximumDistance">
            <summary>
Gets or Sets whether the sound is reduced to silence at the maximum distance. The buffer will stop playing when the maximum distance is exceeded, so that processor time is not wasted. Applies only to software buffers.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.LocationDefer">
            <summary>
Gets or Sets whether the buffer can be assigned to a hardware or software resource at play time.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.LocateInSoftware">
            <summary>
Gets or Sets whether the buffer is in software memory and uses software mixing.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.LocateInHardware">
            <summary>
Gets or Sets whether the buffer uses hardware mixing.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.GlobalFocus">
            <summary>
Gets or Sets whether the buffer is a global sound buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.ControlEffects">
            <summary>
Gets or Sets whether the buffer supports effects processing.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.ControlPositionNotify">
            <summary>
Gets or Sets whether the buffer has position notification capability.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.ControlPan">
            <summary>
Gets or Sets whether the buffer has pan control capability.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.ControlVolume">
            <summary>
Gets or Sets whether the buffer has volume control capability.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.ControlFrequency">
            <summary>
Gets or Sets whether the buffer has frequency control capability.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.Control3D">
            <summary>
Gets or Sets whether the buffer has 3D control capability.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.CanGetCurrentPosition">
            <summary>
Gets or Sets whether the buffer uses the new behavior of the play cursor when retrieving the current position.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.PlayCpuOverhead">
            <summary>
The processing overhead as a percentage of main processor cycles needed to mix this sound buffer.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.UnlockTransferRate">
            <summary>
The rate, in kilobytes per second, at which data is transferred to the buffer memory when <see cref="T:SlimDX.DirectSound.SoundBuffer">SoundBuffer.Unlock</see> is called.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.BufferCapabilities.BufferSize">
            <summary>
Size of this buffer, in bytes.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.BufferCapabilities">
            <summary>
Describes the capabilities of a DirectSound buffer object.
</summary>
            <unmanaged>DSBCAPS</unmanaged>
        </member>
        <member name="M:SlimDX.XInput.State.Equals(SlimDX.XInput.State@,SlimDX.XInput.State@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.State.Equals(SlimDX.XInput.State)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.State.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.State.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XInput.State.op_Inequality(SlimDX.XInput.State,SlimDX.XInput.State)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.State.op_Equality(SlimDX.XInput.State,SlimDX.XInput.State)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.XInput.State.Gamepad">
            <summary>
Gets a <see cref="T:SlimDX.XInput.Gamepad" /> structure describing the current state of the gamepad.
</summary>
        </member>
        <member name="P:SlimDX.XInput.State.PacketNumber">
            <summary>
Gets the state packet number.
</summary>
            <remarks>
The packet number indicates whether there have been any changes in the state of the controller. If the value
does not change in sequentially returned State structures, the controller state has not changed. 
</remarks>
        </member>
        <member name="T:SlimDX.XInput.State">
            <summary>
Represents the state of a controller.
</summary>
            <unmanaged>XINPUT_STATE</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassLinkage.GetInstance(System.String,System.Int32)">
            <summary>
Gets the class-instance object that represents the specified HLSL class.
</summary>
            <param name="name">The name of a class for which to get the class instance.</param>
            <param name="index">The index of the class instance.</param>
            <returns>The specified class instance.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.ClassLinkage.#ctor(SlimDX.Direct3D11.Device)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.ClassLinkage" /> class.
</summary>
            <param name="device">The device used to create the class linkage object.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.ClassLinkage">
            <summary>
Encapsulates HLSL dynamic class linkage.
</summary>
            <unmanaged>ID3D11ClassLinkage</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode,SlimDX.Direct3D11.ClassLinkage)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.VertexShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
            <param name="linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.VertexShader.#ctor(SlimDX.Direct3D11.Device,SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.VertexShader" /> class.
</summary>
            <param name="device">The device used to create the shader.</param>
            <param name="shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.VertexShader">
            <summary>
Represents a vertex shader.
</summary>
            <unmanaged>ID3D11VertexShader</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2DDescription.Equals(SlimDX.Direct3D11.Texture2DDescription@,SlimDX.Direct3D11.Texture2DDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2DDescription.Equals(SlimDX.Direct3D11.Texture2DDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2DDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2DDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2DDescription.op_Inequality(SlimDX.Direct3D11.Texture2DDescription,SlimDX.Direct3D11.Texture2DDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Texture2DDescription.op_Equality(SlimDX.Direct3D11.Texture2DDescription,SlimDX.Direct3D11.Texture2DDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.OptionFlags">
            <summary>
Flags that identifies other, less common resource options.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.CpuAccessFlags">
            <summary>
Flags that specify how the CPU may access the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.BindFlags">
            <summary>
Flags that describe how the texture can be bound to the pipeline.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.Usage">
            <summary>
Value that identifies how the texture is to be read from and written to.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.SampleDescription">
            <summary>
Gets or sets multisampling parameters for the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.Format">
            <summary>
Format of the data in the texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.ArraySize">
            <summary>
Number of textures in the array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.MipLevels">
            <summary>
The maximum number of mipmap levels in the texture. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.Height">
            <summary>
Texture height (in texels).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Texture2DDescription.Width">
            <summary>
Texture width (in texels).
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Texture2DDescription">
            <summary>
Describes a two-dimensional texture.
</summary>
            <unmanaged>D3D11_TEXTURE2D_DESC</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefWarning">
            <summary>RefWarning message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewCounterUnsupported">
            <summary>DeviceUnorderedAccessViewCounterUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ClearUnorderedAccessViewFloatInvalidFormat">
            <summary>ClearUnorderedAccessViewFloatInvalidFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetUnorderedAccessViewsTooManyViews">
            <summary>DeviceCSSetUnorderedAccessViewsTooManyViews message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetUnorderedAccessViewsInvalidOffset">
            <summary>DeviceCSSetUnorderedAccessViewsInvalidOffset message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetUnorderedAccessViewsInvalidView">
            <summary>DeviceCSSetUnorderedAccessViewsInvalidView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CheckFormatSupportFormatNotSupported">
            <summary>CheckFormatSupportFormatNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyStructureCountInvalidSourceState">
            <summary>CopyStructureCountInvalidSourceState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyStructureCountInvalidDestinationState">
            <summary>CopyStructureCountInvalidDestinationState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyStructureCountLargeOffset">
            <summary>CopyStructureCountLargeOffset message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyStructureCountInvalidOffset">
            <summary>CopyStructureCountInvalidOffset message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDispatchIndirectUnsupported">
            <summary>DeviceDispatchIndirectUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDispatchUnsupported">
            <summary>DeviceDispatchUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderResourceViewRawUnsupported">
            <summary>DeviceShaderResourceViewRawUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderResourceViewBufferTypeMismatch">
            <summary>DeviceShaderResourceViewBufferTypeMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderResourceViewStructureStrideMismatch">
            <summary>DeviceShaderResourceViewStructureStrideMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDispatchThreadGroupCountZero">
            <summary>DeviceDispatchThreadGroupCountZero message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDispatchThreadGroupCountOverflow">
            <summary>DeviceDispatchThreadGroupCountOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDispatchBoundResourceMapped">
            <summary>DeviceDispatchBoundResourceMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewAtomicUnsignedMinmaxUnsupported">
            <summary>DeviceUnorderedAccessViewAtomicUnsignedMinmaxUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewAtomicSignedMinmaxUnsupported">
            <summary>DeviceUnorderedAccessViewAtomicSignedMinmaxUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewAtomicExchangeUnsupported">
            <summary>DeviceUnorderedAccessViewAtomicExchangeUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewAtomicCmpStoreCmpExchangeUnsupported">
            <summary>DeviceUnorderedAccessViewAtomicCmpStoreCmpExchangeUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewAtomicBitwiseOpsUnsupported">
            <summary>DeviceUnorderedAccessViewAtomicBitwiseOpsUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewAtomicAddUnsupported">
            <summary>DeviceUnorderedAccessViewAtomicAddUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewFormatStoreUnsupported">
            <summary>DeviceUnorderedAccessViewFormatStoreUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewFormatLdUnsupported">
            <summary>DeviceUnorderedAccessViewFormatLdUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewRawUnsupported">
            <summary>DeviceUnorderedAccessViewRawUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewBufferTypeMismatch">
            <summary>DeviceUnorderedAccessViewBufferTypeMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewStructureStrideMismatch">
            <summary>DeviceUnorderedAccessViewStructureStrideMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewAtomicsUnsupported">
            <summary>DeviceUnorderedAccessViewAtomicsUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewAppendUnsupported">
            <summary>DeviceUnorderedAccessViewAppendUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewDimensionMismatch">
            <summary>DeviceUnorderedAccessViewDimensionMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawUnorderedAccessViewRenderTargetViewOverlap">
            <summary>DeviceDrawUnorderedAccessViewRenderTargetViewOverlap message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewNotSet">
            <summary>DeviceUnorderedAccessViewNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceUnorderedAccessViewReturnTypeMismatch">
            <summary>DeviceUnorderedAccessViewReturnTypeMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CheckFeatureSupportFormatDeprecated">
            <summary>CheckFeatureSupportFormatDeprecated message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ClearDepthStencilViewStencilReadOnly">
            <summary>ClearDepthStencilViewStencilReadOnly message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ClearDepthStencilViewDepthReadOnly">
            <summary>ClearDepthStencilViewDepthReadOnly message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.OMSetDepthStencilUnbindDeletingObject">
            <summary>OMSetDepthStencilUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGetResourceMinLodInvalidResource">
            <summary>DeviceGetResourceMinLodInvalidResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGetResourceMinLodInvalidContext">
            <summary>DeviceGetResourceMinLodInvalidContext message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetResourceMinLodInvalidMinLod">
            <summary>DeviceSetResourceMinLodInvalidMinLod message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetResourceMinLodInvalidResource">
            <summary>DeviceSetResourceMinLodInvalidResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetResourceMinLodInvalidContext">
            <summary>DeviceSetResourceMinLodInvalidContext message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDispatchIndirectOffsetOverflow">
            <summary>DeviceDispatchIndirectOffsetOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDispatchIndirectOffsetUnaligned">
            <summary>DeviceDispatchIndirectOffsetUnaligned message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDispatchIndirectInvalidArgBuffer">
            <summary>DeviceDispatchIndirectInvalidArgBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewInvalidFlags">
            <summary>CreateUnorderedAccessViewInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSGetUnorderedAccessViewsEmpty">
            <summary>DeviceCSGetUnorderedAccessViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetUnorderedAccessViewsEmpty">
            <summary>DeviceCSSetUnorderedAccessViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ClearUnorderedAccessViewDenormalizeFlush">
            <summary>ClearUnorderedAccessViewDenormalizeFlush message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetUnorderedAccessViewsHazard">
            <summary>DeviceCSSetUnorderedAccessViewsHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewTooManyObjects">
            <summary>CreateUnorderedAccessViewTooManyObjects message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewOutOfMemoryReturn">
            <summary>CreateUnorderedAccessViewOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewInvalidArgumentReturn">
            <summary>CreateUnorderedAccessViewInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PSSetUnorderedAccessViewsUnbindDeletingObject">
            <summary>PSSetUnorderedAccessViewsUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CSSetUnorderedAccessViewsUnbindDeletingObject">
            <summary>CSSetUnorderedAccessViewsUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceOMSetRenderTargetsAndUnorderedAccessViewsNoOp">
            <summary>DeviceOMSetRenderTargetsAndUnorderedAccessViewsNoOp message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceOMSetRenderTargetsAndUnorderedAccessViewsOverlappingOldSlots">
            <summary>DeviceOMSetRenderTargetsAndUnorderedAccessViewsOverlappingOldSlots message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceOMSetRenderTargetsAndUnorderedAccessViewsHazard">
            <summary>DeviceOMSetRenderTargetsAndUnorderedAccessViewsHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewUnrecognizedFormat">
            <summary>CreateUnorderedAccessViewUnrecognizedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewInvalidDimensions">
            <summary>CreateUnorderedAccessViewInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewInvalidFormat">
            <summary>CreateUnorderedAccessViewInvalidFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewInvalidDescription">
            <summary>CreateUnorderedAccessViewInvalidDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessViewInvalidResource">
            <summary>CreateUnorderedAccessViewInvalidResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewInvalidFlags">
            <summary>CreateShaderResourceViewInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidStructureStride">
            <summary>CreateBufferInvalidStructureStride message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCreateComputeShaderDoubleFloatOpsNotSupported">
            <summary>DeviceCreateComputeShaderDoubleFloatOpsNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCreatePixelShaderDoubleFloatOpsNotSupported">
            <summary>DeviceCreatePixelShaderDoubleFloatOpsNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCreateGeometryShaderWithStreamOutputDoubleFloatOpsNotSupported">
            <summary>DeviceCreateGeometryShaderWithStreamOutputDoubleFloatOpsNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCreateGeometryShaderDoubleFloatOpsNotSupported">
            <summary>DeviceCreateGeometryShaderDoubleFloatOpsNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCreateDomainShaderDoubleFloatOpsNotSupported">
            <summary>DeviceCreateDomainShaderDoubleFloatOpsNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCreateHullShaderDoubleFloatOpsNotSupported">
            <summary>DeviceCreateHullShaderDoubleFloatOpsNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCreateVertexShaderDoubleFloatOpsNotSupported">
            <summary>DeviceCreateVertexShaderDoubleFloatOpsNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSGetSamplersSamplersEmpty">
            <summary>DeviceCSGetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSGetConstantBuffersBuffersEmpty">
            <summary>DeviceCSGetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSGetShaderResourcesViewsEmpty">
            <summary>DeviceCSGetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetSamplersSamplersEmpty">
            <summary>DeviceCSSetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetConstantBuffersBuffersEmpty">
            <summary>DeviceCSSetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CSSetConstantBuffersInvalidBuffer">
            <summary>CSSetConstantBuffersInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetShaderResourcesViewsEmpty">
            <summary>DeviceCSSetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateComputeShaderInvalidClassLinkage">
            <summary>CreateComputeShaderInvalidClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateComputeShaderInvalidShaderType">
            <summary>CreateComputeShaderInvalidShaderType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateComputeShaderInvalidShaderBytecode">
            <summary>CreateComputeShaderInvalidShaderBytecode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateComputeShaderOutOfMemory">
            <summary>CreateComputeShaderOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateComputeShaderInvalidCall">
            <summary>CreateComputeShaderInvalidCall message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CSSetConstantBuffersUnbindDeletingObject">
            <summary>CSSetConstantBuffersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CSSetShaderResourcesUnbindDeletingObject">
            <summary>CSSetShaderResourcesUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetConstantBuffersHazard">
            <summary>DeviceCSSetConstantBuffersHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCSSetShaderResourcesHazard">
            <summary>DeviceCSSetShaderResourcesHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCheckFeatureSupportInvalidArgumentReturn">
            <summary>DeviceCheckFeatureSupportInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCheckFeatureSupportMismatchedDataSize">
            <summary>DeviceCheckFeatureSupportMismatchedDataSize message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCheckFeatureSupportUnrecognizedFeature">
            <summary>DeviceCheckFeatureSupportUnrecognizedFeature message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceCreateShaderClassLinkageFull">
            <summary>DeviceCreateShaderClassLinkageFull message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetShaderInstanceDataBindings">
            <summary>DeviceSetShaderInstanceDataBindings message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetShaderUnboundInstanceData">
            <summary>DeviceSetShaderUnboundInstanceData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetShaderInvalidInstanceData">
            <summary>DeviceSetShaderInvalidInstanceData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetShaderInvalidInstanceType">
            <summary>DeviceSetShaderInvalidInstanceType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetShaderInvalidInstanceIndex">
            <summary>DeviceSetShaderInvalidInstanceIndex message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetShaderInvalidInstance">
            <summary>DeviceSetShaderInvalidInstance message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetShaderInterfaceCountMismatch">
            <summary>DeviceSetShaderInterfaceCountMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetShaderInterfacesFeatureLevel">
            <summary>DeviceSetShaderInterfacesFeatureLevel message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyUnorderedAccessView">
            <summary>DestroyUnorderedAccessView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveUnorderedAccessView">
            <summary>LiveUnorderedAccessView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateUnorderedAccessView">
            <summary>CreateUnorderedAccessView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyComputeShader">
            <summary>DestroyComputeShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveComputeShader">
            <summary>LiveComputeShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateComputeShader">
            <summary>CreateComputeShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveObjectSummary">
            <summary>LiveObjectSummary message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveDevice">
            <summary>LiveDevice message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyClassLinkage">
            <summary>DestroyClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveClassLinkage">
            <summary>LiveClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateClassLinkage">
            <summary>CreateClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyClassInstance">
            <summary>DestroyClassInstance message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveClassInstance">
            <summary>LiveClassInstance message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateClassInstance">
            <summary>CreateClassInstance message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyCommandList">
            <summary>DestroyCommandList message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveCommandList">
            <summary>LiveCommandList message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateCommandList">
            <summary>CreateCommandList message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyCounter">
            <summary>DestroyCounter message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveCounter">
            <summary>LiveCounter message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateCounter">
            <summary>CreateCounter message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyPredicate">
            <summary>DestroyPredicate message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LivePredicate">
            <summary>LivePredicate message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreatePredicate">
            <summary>CreatePredicate message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyQuery">
            <summary>DestroyQuery message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveQuery">
            <summary>LiveQuery message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateQuery">
            <summary>CreateQuery message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyRasterizerState">
            <summary>DestroyRasterizerState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveRasterizerState">
            <summary>LiveRasterizerState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerState">
            <summary>CreateRasterizerState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyDepthStencilState">
            <summary>DestroyDepthStencilState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveDepthStencilState">
            <summary>LiveDepthStencilState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilState">
            <summary>CreateDepthStencilState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyBlendState">
            <summary>DestroyBlendState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveBlendState">
            <summary>LiveBlendState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendState">
            <summary>CreateBlendState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroySampler">
            <summary>DestroySampler message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveSampler">
            <summary>LiveSampler message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSampler">
            <summary>CreateSampler message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyInputLayout">
            <summary>DestroyInputLayout message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveInputLayout">
            <summary>LiveInputLayout message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayout">
            <summary>CreateInputLayout message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyPixelShader">
            <summary>DestroyPixelShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LivePixelShader">
            <summary>LivePixelShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreatePixelShader">
            <summary>CreatePixelShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyGeometryShader">
            <summary>DestroyGeometryShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveGeometryShader">
            <summary>LiveGeometryShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShader">
            <summary>CreateGeometryShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyDomainShader">
            <summary>DestroyDomainShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveDomainShader">
            <summary>LiveDomainShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDomainShader">
            <summary>CreateDomainShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyHullShader">
            <summary>DestroyHullShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveHullShader">
            <summary>LiveHullShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateHullShader">
            <summary>CreateHullShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyVertexShader">
            <summary>DestroyVertexShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveVertexShader">
            <summary>LiveVertexShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateVertexShader">
            <summary>CreateVertexShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyDepthStencilView">
            <summary>DestroyDepthStencilView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveDepthStencilView">
            <summary>LiveDepthStencilView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilView">
            <summary>CreateDepthStencilView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyRenderTargetView">
            <summary>DestroyRenderTargetView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveRenderTargetView">
            <summary>LiveRenderTargetView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetView">
            <summary>CreateRenderTargetView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyShaderResourceView">
            <summary>DestroyShaderResourceView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveShaderResourceView">
            <summary>LiveShaderResourceView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceView">
            <summary>CreateShaderResourceView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyTexture3D">
            <summary>DestroyTexture3D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveTexture3D">
            <summary>LiveTexture3D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3D">
            <summary>CreateTexture3D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyTexture2D">
            <summary>DestroyTexture2D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveTexture2D">
            <summary>LiveTexture2D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2D">
            <summary>CreateTexture2D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyTexture1D">
            <summary>DestroyTexture1D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveTexture1D">
            <summary>LiveTexture1D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1D">
            <summary>CreateTexture1D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyBuffer">
            <summary>DestroyBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveBuffer">
            <summary>LiveBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBuffer">
            <summary>CreateBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DestroyContext">
            <summary>DestroyContext message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.LiveContext">
            <summary>LiveContext message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateContext">
            <summary>CreateContext message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawHsDsTessellatorDomainMismatch">
            <summary>DeviceDrawHsDsTessellatorDomainMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawHsDsControlPointCountMismatch">
            <summary>DeviceDrawHsDsControlPointCountMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawHullShaderInputTopologyMismatch">
            <summary>DeviceDrawHullShaderInputTopologyMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawHsDsSignatureMismatch">
            <summary>DeviceDrawHsDsSignatureMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetPrimitiveTopologyUnsupported">
            <summary>DeviceIASetPrimitiveTopologyUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawRasterizingControlPoints">
            <summary>DeviceDrawRasterizingControlPoints message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceUnmapNotMapped">
            <summary>ResourceUnmapNotMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceUnmapInvalidSubresource">
            <summary>ResourceUnmapInvalidSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceMapWithoutInitialDiscard">
            <summary>ResourceMapWithoutInitialDiscard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceMapOutOfMemoryReturn">
            <summary>ResourceMapOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceMapDeviceRemovedReturn">
            <summary>ResourceMapDeviceRemovedReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceMapAlreadyMapped">
            <summary>ResourceMapAlreadyMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceMapInvalidFlags">
            <summary>ResourceMapInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceMapInvalidSubresource">
            <summary>ResourceMapInvalidSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ResourceMapInvalidMapType">
            <summary>ResourceMapInvalidMapType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndirectOffsetOverflow">
            <summary>DeviceDrawIndirectOffsetOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndirectOffsetUnaligned">
            <summary>DeviceDrawIndirectOffsetUnaligned message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndirectInvalidArgBuffer">
            <summary>DeviceDrawIndirectInvalidArgBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeferredContextRemovalProcessAtFault">
            <summary>DeferredContextRemovalProcessAtFault message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawHsXorDsMismatch">
            <summary>DeviceDrawHsXorDsMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDSGetSamplersSamplersEmpty">
            <summary>DeviceDSGetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDSGetConstantBuffersBuffersEmpty">
            <summary>DeviceDSGetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDSGetShaderResourcesViewsEmpty">
            <summary>DeviceDSGetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDSSetSamplersSamplersEmpty">
            <summary>DeviceDSSetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDSSetConstantBuffersBuffersEmpty">
            <summary>DeviceDSSetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DSSetConstantBuffersInvalidBuffer">
            <summary>DSSetConstantBuffersInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDSSetShaderResourcesViewsEmpty">
            <summary>DeviceDSSetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDomainShaderInvalidClassLinkage">
            <summary>CreateDomainShaderInvalidClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDomainShaderInvalidShaderType">
            <summary>CreateDomainShaderInvalidShaderType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDomainShaderInvalidShaderBytecode">
            <summary>CreateDomainShaderInvalidShaderBytecode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDomainShaderOutOfMemory">
            <summary>CreateDomainShaderOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDomainShaderInvalidCall">
            <summary>CreateDomainShaderInvalidCall message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DSSetConstantBuffersUnbindDeletingObject">
            <summary>DSSetConstantBuffersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DSSetShaderResourcesUnbindDeletingObject">
            <summary>DSSetShaderResourcesUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDSSetConstantBuffersHazard">
            <summary>DeviceDSSetConstantBuffersHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDSSetShaderResourcesHazard">
            <summary>DeviceDSSetShaderResourcesHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceHSGetSamplersSamplersEmpty">
            <summary>DeviceHSGetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceHSGetConstantBuffersBuffersEmpty">
            <summary>DeviceHSGetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceHSGetShaderResourcesViewsEmpty">
            <summary>DeviceHSGetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceHSSetSamplersSamplersEmpty">
            <summary>DeviceHSSetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceHSSetConstantBuffersBuffersEmpty">
            <summary>DeviceHSSetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.HSSetConstantBuffersInvalidBuffer">
            <summary>HSSetConstantBuffersInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceHSSetShaderResourcesViewsEmpty">
            <summary>DeviceHSSetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateHullShaderInvalidClassLinkage">
            <summary>CreateHullShaderInvalidClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateHullShaderInvalidShaderType">
            <summary>CreateHullShaderInvalidShaderType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateHullShaderInvalidShaderBytecode">
            <summary>CreateHullShaderInvalidShaderBytecode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateHullShaderOutOfMemory">
            <summary>CreateHullShaderOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateHullShaderInvalidCall">
            <summary>CreateHullShaderInvalidCall message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.HSSetConstantBuffersUnbindDeletingObject">
            <summary>HSSetConstantBuffersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.HSSetShaderResourcesUnbindDeletingObject">
            <summary>HSSetShaderResourcesUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceHSSetConstantBuffersHazard">
            <summary>DeviceHSSetConstantBuffersHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceHSSetShaderResourcesHazard">
            <summary>DeviceHSSetShaderResourcesHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidStrideCount">
            <summary>CreateGeometryShaderWithStreamOutputInvalidStrideCount message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputUnexpectedStrides">
            <summary>CreateGeometryShaderWithStreamOutputUnexpectedStrides message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputUnexpectedEntries">
            <summary>CreateGeometryShaderWithStreamOutputUnexpectedEntries message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidStream">
            <summary>CreateGeometryShaderWithStreamOutputInvalidStream message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.FinishDisplayListInvalidCallReturn">
            <summary>FinishDisplayListInvalidCallReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.FinishDisplayListOutOfMemoryReturn">
            <summary>FinishDisplayListOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.FinishDisplayListOnImmediateContext">
            <summary>FinishDisplayListOnImmediateContext message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDeferredContextOutOfMemoryReturn">
            <summary>CreateDeferredContextOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDeferredContextInvalidCallReturn">
            <summary>CreateDeferredContextInvalidCallReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDeferredContextInvalidArgumentReturn">
            <summary>CreateDeferredContextInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDeferredContextSingleThreaded">
            <summary>CreateDeferredContextSingleThreaded message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDeferredContextInvalidCommandListFlags">
            <summary>CreateDeferredContextInvalidCommandListFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreatePixelShaderInvalidClassLinkage">
            <summary>CreatePixelShaderInvalidClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidClassLinkage">
            <summary>CreateGeometryShaderWithStreamOutputInvalidClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputUnexpectedStreams">
            <summary>CreateGeometryShaderWithStreamOutputUnexpectedStreams message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidStreamToRasterizer">
            <summary>CreateGeometryShaderWithStreamOutputInvalidStreamToRasterizer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidStreamCount">
            <summary>CreateGeometryShaderWithStreamOutputInvalidStreamCount message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderInvalidClassLinkage">
            <summary>CreateGeometryShaderInvalidClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateVertexShaderInvalidClassLinkage">
            <summary>CreateVertexShaderInvalidClassLinkage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewInvalidFlags">
            <summary>CreateDepthStencilViewInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.OMSetRenderTargetsNoSrgbMrt">
            <summary>OMSetRenderTargetsNoSrgbMrt message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateBorderNotSupported">
            <summary>CreateSamplerStateBorderNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNonPow2MipMap">
            <summary>CreateResourceNonPow2MipMap message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SlotZeroMustBeD3D10InputPerVertexData">
            <summary>SlotZeroMustBeD3D10InputPerVertexData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRSSetScissorRectanglesNegativeScissor">
            <summary>DeviceRSSetScissorRectanglesNegativeScissor message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceOnlySingleMipLevelDepthStencilSupported">
            <summary>CreateResourceOnlySingleMipLevelDepthStencilSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceDimensionExceedsFeatureLevelDefinition">
            <summary>CreateResourceDimensionExceedsFeatureLevelDefinition message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetBlendStateSampleMaskCannotBeZero">
            <summary>SetBlendStateSampleMaskCannotBeZero message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DrawIndexedPointListUnsupported">
            <summary>DrawIndexedPointListUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DrawIndexedInstancedNotSupportedBelow93">
            <summary>DrawIndexedInstancedNotSupportedBelow93 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DrawInstancedNotSupported">
            <summary>DrawInstancedNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateNoMirrorOnce">
            <summary>CreateSamplerStateNoMirrorOnce message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateOperationNotSupported">
            <summary>CreateBlendStateOperationNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateNoMrtBlend">
            <summary>CreateBlendStateNoMrtBlend message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateNoSeparateAlphaBlend">
            <summary>CreateBlendStateNoSeparateAlphaBlend message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.TextFilterNotSupported">
            <summary>TextFilterNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.StreamOutNotSupported">
            <summary>StreamOutNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.GeometryShaderNotSupported">
            <summary>GeometryShaderNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.VSShaderResourcesNotSupported">
            <summary>VSShaderResourcesNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceDxgiFormatR8G8B8A8CannotBeShared">
            <summary>CreateResourceDxgiFormatR8G8B8A8CannotBeShared message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNoAutogenForVolumes">
            <summary>CreateResourceNoAutogenForVolumes message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceOnlyVbIbForBuffers">
            <summary>CreateResourceOnlyVbIbForBuffers message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNoStreamOut">
            <summary>CreateResourceNoStreamOut message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateNoIndependentWriteMasks">
            <summary>CreateBlendStateNoIndependentWriteMasks message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateNoIndependentBlendEnable">
            <summary>CreateBlendStateNoIndependentBlendEnable message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourcePresentationPrecludesShaderResource">
            <summary>CreateResourcePresentationPrecludesShaderResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceMsaaPrecludesShaderResource">
            <summary>CreateResourceMsaaPrecludesShaderResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNoDwordIndexBuffer">
            <summary>CreateResourceNoDwordIndexBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNotBindableAsRenderTarget">
            <summary>CreateResourceNotBindableAsRenderTarget message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewCubesMustHave6Sides">
            <summary>CreateShaderResourceViewCubesMustHave6Sides message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewFirstArraySliceMustBeZero">
            <summary>CreateShaderResourceViewFirstArraySliceMustBeZero message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateMaxLodMustBeFltMax">
            <summary>CreateSamplerStateMaxLodMustBeFltMax message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateMinLodMustNotBeFractional">
            <summary>CreateSamplerStateMinLodMustNotBeFractional message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewMustUseLowestLod">
            <summary>CreateShaderResourceViewMustUseLowestLod message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DrawIndexedStartIndexLocationMustBePositive">
            <summary>DrawIndexedStartIndexLocationMustBePositive message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerStateDepthClipEnableMustBeTrue">
            <summary>CreateRasterizerStateDepthClipEnableMustBeTrue message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateNoAlphaToCoverage">
            <summary>CreateBlendStateNoAlphaToCoverage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutUnsupportedFormat">
            <summary>CreateInputLayoutUnsupportedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyResourceNoTextureOnlyReadBack">
            <summary>CopyResourceNoTextureOnlyReadBack message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyResourceNoTexture3DReadBack">
            <summary>CopyResourceNoTexture3DReadBack message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyResourceOnlyTexture2DWithinGpuMemory">
            <summary>CopyResourceOnlyTexture2DWithinGpuMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRSSetScissorRectanglesTooManyScissors">
            <summary>DeviceRSSetScissorRectanglesTooManyScissors message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetPrimitiveTopologyAdjacencyUnsupported">
            <summary>DeviceIASetPrimitiveTopologyAdjacencyUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRSSetViewportsTooManyViewports">
            <summary>DeviceRSSetViewportsTooManyViewports message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.IASetVertexBuffersBadBufferIndex">
            <summary>IASetVertexBuffersBadBufferIndex message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.OMSetRenderTargetsNoDifferingBitDepths">
            <summary>OMSetRenderTargetsNoDifferingBitDepths message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.OMSetRenderTargetsTooManyRenderTargets">
            <summary>OMSetRenderTargetsTooManyRenderTargets message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNotBindableAsShaderResource">
            <summary>CreateResourceNotBindableAsShaderResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceDimensionOutOfRange">
            <summary>CreateResourceDimensionOutOfRange message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNoTexture1D">
            <summary>CreateResourceNoTexture1D message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNoVBAndIBBind">
            <summary>CreateResourceNoVBAndIBBind message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateResourceNoArrays">
            <summary>CreateResourceNoArrays message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PSSetSamplersTooManySamplers">
            <summary>PSSetSamplersTooManySamplers message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.VSSetSamplersTooManySamplers">
            <summary>VSSetSamplersTooManySamplers message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.VSSetSamplersNotSupported">
            <summary>VSSetSamplersNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateBorderOutOfRange">
            <summary>CreateSamplerStateBorderOutOfRange message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateExcessiveAnisotropy">
            <summary>CreateSamplerStateExcessiveAnisotropy message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateNoComparisonSupport">
            <summary>CreateSamplerStateNoComparisonSupport message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerStateDepthBiasClampNotSupported">
            <summary>CreateRasterizerStateDepthBiasClampNotSupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateStencilNoTwoSided">
            <summary>CreateDepthStencilStateStencilNoTwoSided message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawResourceSampleCountMismatch">
            <summary>DeviceDrawResourceSampleCountMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutEmptyLayout">
            <summary>CreateInputLayoutEmptyLayout message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetVertexBuffersInvalidRange">
            <summary>DeviceIASetVertexBuffersInvalidRange message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetVertexBuffersStrideTooLarge">
            <summary>DeviceIASetVertexBuffersStrideTooLarge message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawInvalidUseOfCenterMultisamplePattern">
            <summary>DeviceDrawInvalidUseOfCenterMultisamplePattern message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawResourceFormatGatherUnsupported">
            <summary>DeviceDrawResourceFormatGatherUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawPSOutputTypeMismatch">
            <summary>DeviceDrawPSOutputTypeMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.QueryGetDataInvalidCall">
            <summary>QueryGetDataInvalidCall message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.QueryGetDataInvalidFlags">
            <summary>QueryGetDataInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.QueryGetDataInvalidDataSize">
            <summary>QueryGetDataInvalidDataSize message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.QueryEndWithoutBegin">
            <summary>QueryEndWithoutBegin message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.QueryEndAbandoningPreviousResults">
            <summary>QueryEndAbandoningPreviousResults message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PredicateEndDuringPredication">
            <summary>PredicateEndDuringPredication message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.QueryBeginAbandoningPreviousResults">
            <summary>QueryBeginAbandoningPreviousResults message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.QueryBeginDuplicate">
            <summary>QueryBeginDuplicate message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PredicateBeginDuringPredication">
            <summary>PredicateBeginDuringPredication message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.QueryBeginUnsupported">
            <summary>QueryBeginUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetPredicationInvalidPredicateState">
            <summary>SetPredicationInvalidPredicateState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CheckCounterUnsupportedWellKnownCounter">
            <summary>CheckCounterUnsupportedWellKnownCounter message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CheckCounterOutOfRangeCounter">
            <summary>CheckCounterOutOfRangeCounter message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateCounterNullDescription">
            <summary>CreateCounterNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateCounterNonexclusiveReturn">
            <summary>CreateCounterNonexclusiveReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateCounterOutOfMemoryReturn">
            <summary>CreateCounterOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateCounterUnsupportedWellKnownCounter">
            <summary>CreateCounterUnsupportedWellKnownCounter message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateCounterSimultaneousActiveCountersExhausted">
            <summary>CreateCounterSimultaneousActiveCountersExhausted message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateCounterOutOfRangeCounter">
            <summary>CreateCounterOutOfRangeCounter message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreatePredicateOutOfMemoryReturn">
            <summary>CreatePredicateOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateQueryOutOfMemoryReturn">
            <summary>CreateQueryOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ShaderResourceViewGetDescriptionLegacy">
            <summary>ShaderResourceViewGetDescriptionLegacy message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.BlendStateGetDescriptionLegacy">
            <summary>BlendStateGetDescriptionLegacy message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutTypeMismatch">
            <summary>CreateInputLayoutTypeMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawSamplerMismatch">
            <summary>DeviceDrawSamplerMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSetTextFilterSizeInvalidDimensions">
            <summary>DeviceSetTextFilterSizeInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.OMSetRenderTargetsInvalidView">
            <summary>OMSetRenderTargetsInvalidView message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRSSetViewportsDenormalizeFlush">
            <summary>DeviceRSSetViewportsDenormalizeFlush message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputTrailingDigitInSemantic">
            <summary>CreateGeometryShaderWithStreamOutputTrailingDigitInSemantic message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutTrailingDigitInSemantic">
            <summary>CreateInputLayoutTrailingDigitInSemantic message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawViewportNotSet">
            <summary>DeviceDrawViewportNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceOpenSharedResourceBadInterfaceReturn">
            <summary>DeviceOpenSharedResourceBadInterfaceReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceOpenSharedResourceOutOfMemoryReturn">
            <summary>DeviceOpenSharedResourceOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceOpenSharedResourceInvalidArgumentReturn">
            <summary>DeviceOpenSharedResourceInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRemovalProcessNotAtFault">
            <summary>DeviceRemovalProcessNotAtFault message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRemovalProcessPossiblyAtFault">
            <summary>DeviceRemovalProcessPossiblyAtFault message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRemovalProcessAtFault">
            <summary>DeviceRemovalProcessAtFault message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawOMDualSourceBlendingCanOnlyHaveRenderTarget0">
            <summary>DeviceDrawOMDualSourceBlendingCanOnlyHaveRenderTarget0 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawOMRenderTargetDoesNotSupportBlending">
            <summary>DeviceDrawOMRenderTargetDoesNotSupportBlending message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawSOStrideLargerThanBuffer">
            <summary>DeviceDrawSOStrideLargerThanBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawSOTargetsBoundWithoutSource">
            <summary>DeviceDrawSOTargetsBoundWithoutSource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawResourceMultisampleUnsupported">
            <summary>DeviceDrawResourceMultisampleUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawResourceFormatSampleCUnsupported">
            <summary>DeviceDrawResourceFormatSampleCUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawResourceFormatSampleUnsupported">
            <summary>DeviceDrawResourceFormatSampleUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawResourceFormatLdUnsupported">
            <summary>DeviceDrawResourceFormatLdUnsupported message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawOutputStreamOffsetUnaligned">
            <summary>DeviceDrawOutputStreamOffsetUnaligned message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndexOffsetUnaligned">
            <summary>DeviceDrawIndexOffsetUnaligned message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawVertexStrideUnaligned">
            <summary>DeviceDrawVertexStrideUnaligned message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawVertexOffsetUnaligned">
            <summary>DeviceDrawVertexOffsetUnaligned message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawInvalidPrimitiveTopology">
            <summary>DeviceDrawInvalidPrimitiveTopology message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawBoundResourceMapped">
            <summary>DeviceDrawBoundResourceMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawOutputStreamNotSet">
            <summary>DeviceDrawOutputStreamNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawPositionNotPresent">
            <summary>DeviceDrawPositionNotPresent message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawResourceReturnTypeMismatch">
            <summary>DeviceDrawResourceReturnTypeMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawGSInputPrimitiveMismatch">
            <summary>DeviceDrawGSInputPrimitiveMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndexBufferTooSmall">
            <summary>DeviceDrawIndexBufferTooSmall message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndexBufferFormatInvalid">
            <summary>DeviceDrawIndexBufferFormatInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndexBufferNotSet">
            <summary>DeviceDrawIndexBufferNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawVertexBufferTooSmall">
            <summary>DeviceDrawVertexBufferTooSmall message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawVertexBufferStrideTooSmall">
            <summary>DeviceDrawVertexBufferStrideTooSmall message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawViewDimensionMismatch">
            <summary>DeviceDrawViewDimensionMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawShaderResourceViewNotSet">
            <summary>DeviceDrawShaderResourceViewNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawSamplerNotSet">
            <summary>DeviceDrawSamplerNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawConstantBufferTooSmall">
            <summary>DeviceDrawConstantBufferTooSmall message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawConstantBufferNotSet">
            <summary>DeviceDrawConstantBufferNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawInputLayoutNotSet">
            <summary>DeviceDrawInputLayoutNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawVertexBufferNotSet">
            <summary>DeviceDrawVertexBufferNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderLinkageNeverWrittenAlwaysReads">
            <summary>DeviceShaderLinkageNeverWrittenAlwaysReads message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderLinkageSystemValue">
            <summary>DeviceShaderLinkageSystemValue message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderLinkageRegisterMask">
            <summary>DeviceShaderLinkageRegisterMask message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderLinkageComponentType">
            <summary>DeviceShaderLinkageComponentType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderLinkageRegisterIndex">
            <summary>DeviceShaderLinkageRegisterIndex message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceShaderLinkageSemanticNameNotFound">
            <summary>DeviceShaderLinkageSemanticNameNotFound message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawVertexShaderNotSet">
            <summary>DeviceDrawVertexShaderNotSet message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndexedInstancedIndexPositionOverflow">
            <summary>DeviceDrawIndexedInstancedIndexPositionOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndexedInstancedInstancePositionOverflow">
            <summary>DeviceDrawIndexedInstancedInstancePositionOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawInstancedInstancePositionOverflow">
            <summary>DeviceDrawInstancedInstancePositionOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawInstancedVertexPositionOverflow">
            <summary>DeviceDrawInstancedVertexPositionOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawIndexedIndexPositionOverflow">
            <summary>DeviceDrawIndexedIndexPositionOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceDrawVertexPositionOverflow">
            <summary>DeviceDrawVertexPositionOverflow message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefInfo">
            <summary>RefInfo message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefOutOfMemory">
            <summary>RefOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefProblemParsingShader">
            <summary>RefProblemParsingShader message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefAccessingIndexableTempOutOfRange">
            <summary>RefAccessingIndexableTempOutOfRange message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefHardwareException">
            <summary>RefHardwareException message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefKmDriverException">
            <summary>RefKmDriverException message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefUmDriverException">
            <summary>RefUmDriverException message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefThreadingMode">
            <summary>RefThreadingMode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RefSimulatingInfinitelyFastHardware">
            <summary>RefSimulatingInfinitelyFastHardware message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetExceptionModeDeviceRemovedReturn">
            <summary>SetExceptionModeDeviceRemovedReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetExceptionModeInvalidArgumentReturn">
            <summary>SetExceptionModeInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetExceptionModeUnrecognizedFlags">
            <summary>SetExceptionModeUnrecognizedFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CheckMultisampleQualityLevelsFormatDeprecated">
            <summary>CheckMultisampleQualityLevelsFormatDeprecated message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CheckFormatSupportFormatDeprecated">
            <summary>CheckFormatSupportFormatDeprecated message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture3DUnmapNotMapped">
            <summary>Texture3DUnmapNotMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture3DUnmapInvalidSubresource">
            <summary>Texture3DUnmapInvalidSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture3DMapDeviceRemovedReturn">
            <summary>Texture3DMapDeviceRemovedReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture3DMapAlreadyMapped">
            <summary>Texture3DMapAlreadyMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture3DMapInvalidFlags">
            <summary>Texture3DMapInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture3DMapInvalidSubresource">
            <summary>Texture3DMapInvalidSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture3DMapInvalidMapType">
            <summary>Texture3DMapInvalidMapType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture2DUnmapNotMapped">
            <summary>Texture2DUnmapNotMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture2DUnmapInvalidSubresource">
            <summary>Texture2DUnmapInvalidSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture2DMapDeviceRemovedReturn">
            <summary>Texture2DMapDeviceRemovedReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture2DMapAlreadyMapped">
            <summary>Texture2DMapAlreadyMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture2DMapInvalidFlags">
            <summary>Texture2DMapInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture2DMapInvalidSubresource">
            <summary>Texture2DMapInvalidSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture2DMapInvalidMapType">
            <summary>Texture2DMapInvalidMapType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture1DUnmapNotMapped">
            <summary>Texture1DUnmapNotMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture1DUnmapInvalidSubresource">
            <summary>Texture1DUnmapInvalidSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture1DMapDeviceRemovedReturn">
            <summary>Texture1DMapDeviceRemovedReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture1DMapAlreadyMapped">
            <summary>Texture1DMapAlreadyMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture1DMapInvalidFlags">
            <summary>Texture1DMapInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture1DMapInvalidSubresource">
            <summary>Texture1DMapInvalidSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Texture1DMapInvalidMapType">
            <summary>Texture1DMapInvalidMapType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.BufferUnmapNotMapped">
            <summary>BufferUnmapNotMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.BufferMapDeviceRemovedReturn">
            <summary>BufferMapDeviceRemovedReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.BufferMapAlreadyMapped">
            <summary>BufferMapAlreadyMapped message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.BufferMapInvalidFlags">
            <summary>BufferMapInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.BufferMapInvalidMapType">
            <summary>BufferMapInvalidMapType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceResolveSubresourceFormatInvalid">
            <summary>DeviceResolveSubresourceFormatInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceResolveSubresourceSourceSubresourceInvalid">
            <summary>DeviceResolveSubresourceSourceSubresourceInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceResolveSubresourceSourceInvalid">
            <summary>DeviceResolveSubresourceSourceInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceResolveSubresourceDestinationSubresourceInvalid">
            <summary>DeviceResolveSubresourceDestinationSubresourceInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceResolveSubresourceDestinationInvalid">
            <summary>DeviceResolveSubresourceDestinationInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.UpdateSubresourceInvalidDestinationState">
            <summary>UpdateSubresourceInvalidDestinationState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.UpdateSubresourceInvalidDestinationBox">
            <summary>UpdateSubresourceInvalidDestinationBox message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.UpdateSubresourceInvalidDestinationSubresource">
            <summary>UpdateSubresourceInvalidDestinationSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyResourceInvalidSourceState">
            <summary>CopyResourceInvalidSourceState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyResourceInvalidDestinationState">
            <summary>CopyResourceInvalidDestinationState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopyResourceInvalidSource">
            <summary>CopyResourceInvalidSource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopySubresourceRegionInvalidSourceState">
            <summary>CopySubresourceRegionInvalidSourceState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopySubresourceRegionInvalidDestinationState">
            <summary>CopySubresourceRegionInvalidDestinationState message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopySubresourceRegionInvalidSource">
            <summary>CopySubresourceRegionInvalidSource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopySubresourceRegionInvalidSourceBox">
            <summary>CopySubresourceRegionInvalidSourceBox message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopySubresourceRegionInvalidSourceSubresource">
            <summary>CopySubresourceRegionInvalidSourceSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CopySubresourceRegionInvalidDestinationSubresource">
            <summary>CopySubresourceRegionInvalidDestinationSubresource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGenerateMipsResourceInvalid">
            <summary>DeviceGenerateMipsResourceInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRSGetScissorRectanglesRectsEmpty">
            <summary>DeviceRSGetScissorRectanglesRectsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRSGetViewportsViewportsEmpty">
            <summary>DeviceRSGetViewportsViewportsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DevicePSGetSamplersSamplersEmpty">
            <summary>DevicePSGetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DevicePSGetConstantBuffersBuffersEmpty">
            <summary>DevicePSGetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DevicePSGetShaderResourcesViewsEmpty">
            <summary>DevicePSGetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSOGetTargetsBuffersEmpty">
            <summary>DeviceSOGetTargetsBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGSGetSamplersSamplersEmpty">
            <summary>DeviceGSGetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGSGetConstantBuffersBuffersEmpty">
            <summary>DeviceGSGetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGSGetShaderResourcesViewsEmpty">
            <summary>DeviceGSGetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceVSGetSamplersSamplersEmpty">
            <summary>DeviceVSGetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceVSGetConstantBuffersBuffersEmpty">
            <summary>DeviceVSGetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceVSGetShaderResourcesViewsEmpty">
            <summary>DeviceVSGetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIAGetVertexBuffersBuffersEmpty">
            <summary>DeviceIAGetVertexBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ClearDepthStencilViewInvalid">
            <summary>ClearDepthStencilViewInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ClearDepthStencilViewDenormalizeFlush">
            <summary>ClearDepthStencilViewDenormalizeFlush message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.ClearRenderTargetViewDenormalizeFlush">
            <summary>ClearRenderTargetViewDenormalizeFlush message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRSSetScissorRectanglesInvalidScissor">
            <summary>DeviceRSSetScissorRectanglesInvalidScissor message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceRSSetViewportsInvalidViewport">
            <summary>DeviceRSSetViewportsInvalidViewport message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DevicePSSetSamplersSamplersEmpty">
            <summary>DevicePSSetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DevicePSSetConstantBuffersBuffersEmpty">
            <summary>DevicePSSetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PSSetConstantBuffersInvalidBuffer">
            <summary>PSSetConstantBuffersInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DevicePSSetShaderResourcesViewsEmpty">
            <summary>DevicePSSetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSOSetTargetsOffsetUnaligned">
            <summary>DeviceSOSetTargetsOffsetUnaligned message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SOSetTargetsInvalidBuffer">
            <summary>SOSetTargetsInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGSSetSamplersSamplersEmpty">
            <summary>DeviceGSSetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGSSetConstantBuffersBuffersEmpty">
            <summary>DeviceGSSetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.GSSetConstantBuffersInvalidBuffer">
            <summary>GSSetConstantBuffersInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGSSetShaderResourcesViewsEmpty">
            <summary>DeviceGSSetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceVSSetSamplersSamplersEmpty">
            <summary>DeviceVSSetSamplersSamplersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceVSSetConstantBuffersBuffersEmpty">
            <summary>DeviceVSSetConstantBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.VSSetConstantBuffersInvalidBuffer">
            <summary>VSSetConstantBuffersInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceVSSetShaderResourcesViewsEmpty">
            <summary>DeviceVSSetShaderResourcesViewsEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetIndexBufferOffsetUnaligned">
            <summary>DeviceIASetIndexBufferOffsetUnaligned message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetIndexBufferOffsetTooLarge">
            <summary>DeviceIASetIndexBufferOffsetTooLarge message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetIndexBufferFormatInvalid">
            <summary>DeviceIASetIndexBufferFormatInvalid message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.IASetIndexBufferInvalidBuffer">
            <summary>IASetIndexBufferInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetVertexBuffersBuffersEmpty">
            <summary>DeviceIASetVertexBuffersBuffersEmpty message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetVertexBuffersOffsetTooLarge">
            <summary>DeviceIASetVertexBuffersOffsetTooLarge message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.IASetVertexBuffersInvalidBuffer">
            <summary>IASetVertexBuffersInvalidBuffer message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetPrimitiveTopologyUndefined">
            <summary>DeviceIASetPrimitiveTopologyUndefined message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetPrimitiveTopologyUnrecognized">
            <summary>DeviceIASetPrimitiveTopologyUnrecognized message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateQueryOrPredicateNullDescription">
            <summary>CreateQueryOrPredicateNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateQueryOrPredicateUnexpectedMiscellaneousFlag">
            <summary>CreateQueryOrPredicateUnexpectedMiscellaneousFlag message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateQueryOrPredicateInvalidMiscellaneousFlags">
            <summary>CreateQueryOrPredicateInvalidMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateQueryOrPredicateInvalidQuery">
            <summary>CreateQueryOrPredicateInvalidQuery message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateNullDescription">
            <summary>CreateSamplerStateNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateTooManyObjects">
            <summary>CreateSamplerStateTooManyObjects message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidMaxLod">
            <summary>CreateSamplerStateInvalidMaxLod message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidMinLod">
            <summary>CreateSamplerStateInvalidMinLod message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidComparisonFunction">
            <summary>CreateSamplerStateInvalidComparisonFunction message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidMaxAnisotropy">
            <summary>CreateSamplerStateInvalidMaxAnisotropy message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidMipLodBias">
            <summary>CreateSamplerStateInvalidMipLodBias message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidAddressW">
            <summary>CreateSamplerStateInvalidAddressW message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidAddressV">
            <summary>CreateSamplerStateInvalidAddressV message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidAddressU">
            <summary>CreateSamplerStateInvalidAddressU message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateSamplerStateInvalidFilter">
            <summary>CreateSamplerStateInvalidFilter message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateNullDescription">
            <summary>CreateBlendStateNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateTooManyObjects">
            <summary>CreateBlendStateTooManyObjects message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateInvalidRenderTargetWriteMask">
            <summary>CreateBlendStateInvalidRenderTargetWriteMask message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateInvalidBlendOperationAlpha">
            <summary>CreateBlendStateInvalidBlendOperationAlpha message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateInvalidDestinationBlendAlpha">
            <summary>CreateBlendStateInvalidDestinationBlendAlpha message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateInvalidSourceBlendAlpha">
            <summary>CreateBlendStateInvalidSourceBlendAlpha message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateInvalidBlendOperation">
            <summary>CreateBlendStateInvalidBlendOperation message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateInvalidDestinationBlend">
            <summary>CreateBlendStateInvalidDestinationBlend message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBlendStateInvalidSourceBlend">
            <summary>CreateBlendStateInvalidSourceBlend message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateNullDescription">
            <summary>CreateDepthStencilStateNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateTooManyObjects">
            <summary>CreateDepthStencilStateTooManyObjects message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidBackFaceStencilFunction">
            <summary>CreateDepthStencilStateInvalidBackFaceStencilFunction message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidBackFaceStencilPassOp">
            <summary>CreateDepthStencilStateInvalidBackFaceStencilPassOp message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidBackFaceStencilZFailOp">
            <summary>CreateDepthStencilStateInvalidBackFaceStencilZFailOp message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidBackFaceStencilFailOp">
            <summary>CreateDepthStencilStateInvalidBackFaceStencilFailOp message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidFrontFaceStencilFunction">
            <summary>CreateDepthStencilStateInvalidFrontFaceStencilFunction message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidFrontFaceStencilPassOp">
            <summary>CreateDepthStencilStateInvalidFrontFaceStencilPassOp message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidFrontFaceStencilZFailOp">
            <summary>CreateDepthStencilStateInvalidFrontFaceStencilZFailOp message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidFrontFaceStencilFailOp">
            <summary>CreateDepthStencilStateInvalidFrontFaceStencilFailOp message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidDepthFunction">
            <summary>CreateDepthStencilStateInvalidDepthFunction message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilStateInvalidDepthWriteMask">
            <summary>CreateDepthStencilStateInvalidDepthWriteMask message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerStateNullDescription">
            <summary>CreateRasterizerStateNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerStateTooManyObjects">
            <summary>CreateRasterizerStateTooManyObjects message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerStateInvalidSlopeScaledDepthBias">
            <summary>CreateRasterizerStateInvalidSlopeScaledDepthBias message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerStateInvalidDepthBiasClamp">
            <summary>CreateRasterizerStateInvalidDepthBiasClamp message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerStateInvalidCullMode">
            <summary>CreateRasterizerStateInvalidCullMode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRasterizerStateInvalidFillMode">
            <summary>CreateRasterizerStateInvalidFillMode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreatePixelShaderInvalidShaderType">
            <summary>CreatePixelShaderInvalidShaderType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreatePixelShaderInvalidShaderBytecode">
            <summary>CreatePixelShaderInvalidShaderBytecode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreatePixelShaderOutOfMemory">
            <summary>CreatePixelShaderOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputMissingOutputSignature">
            <summary>CreateGeometryShaderWithStreamOutputMissingOutputSignature message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputDeclarationTooComplex">
            <summary>CreateGeometryShaderWithStreamOutputDeclarationTooComplex message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputCantHaveOnlyGaps">
            <summary>CreateGeometryShaderWithStreamOutputCantHaveOnlyGaps message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputMaskMismatch">
            <summary>CreateGeometryShaderWithStreamOutputMaskMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputMissingSemantic">
            <summary>CreateGeometryShaderWithStreamOutputMissingSemantic message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidOutputStreamStride">
            <summary>CreateGeometryShaderWithStreamOutputInvalidOutputStreamStride message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputRepeatedOutput">
            <summary>CreateGeometryShaderWithStreamOutputRepeatedOutput message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidGapDefinition">
            <summary>CreateGeometryShaderWithStreamOutputInvalidGapDefinition message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidStartComponentAndComponentCount">
            <summary>CreateGeometryShaderWithStreamOutputInvalidStartComponentAndComponentCount message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidComponentCount">
            <summary>CreateGeometryShaderWithStreamOutputInvalidComponentCount message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputOnlyOneElementPerSlot">
            <summary>CreateGeometryShaderWithStreamOutputOnlyOneElementPerSlot message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidOutputSlot">
            <summary>CreateGeometryShaderWithStreamOutputInvalidOutputSlot message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputOutputSlot0Expected">
            <summary>CreateGeometryShaderWithStreamOutputOutputSlot0Expected message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputExpectedDeclaration">
            <summary>CreateGeometryShaderWithStreamOutputExpectedDeclaration message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputUnexpectedDeclaration">
            <summary>CreateGeometryShaderWithStreamOutputUnexpectedDeclaration message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputOutputStreamStrideUnused">
            <summary>CreateGeometryShaderWithStreamOutputOutputStreamStrideUnused message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidEntryCount">
            <summary>CreateGeometryShaderWithStreamOutputInvalidEntryCount message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidShaderType">
            <summary>CreateGeometryShaderWithStreamOutputInvalidShaderType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputInvalidShaderBytecode">
            <summary>CreateGeometryShaderWithStreamOutputInvalidShaderBytecode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderWithStreamOutputOutOfMemory">
            <summary>CreateGeometryShaderWithStreamOutputOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderInvalidShaderType">
            <summary>CreateGeometryShaderInvalidShaderType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderInvalidShaderBytecode">
            <summary>CreateGeometryShaderInvalidShaderBytecode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateGeometryShaderOutOfMemory">
            <summary>CreateGeometryShaderOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateVertexShaderInvalidShaderType">
            <summary>CreateVertexShaderInvalidShaderType message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateVertexShaderInvalidShaderBytecode">
            <summary>CreateVertexShaderInvalidShaderBytecode message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateVertexShaderOutOfMemory">
            <summary>CreateVertexShaderOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutNullDescription">
            <summary>CreateInputLayoutNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutMissingElement">
            <summary>CreateInputLayoutMissingElement message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutNullSemantic">
            <summary>CreateInputLayoutNullSemantic message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutUnparseableInputSignature">
            <summary>CreateInputLayoutUnparseableInputSignature message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutDuplicateSemantic">
            <summary>CreateInputLayoutDuplicateSemantic message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutInvalidAlignment">
            <summary>CreateInputLayoutInvalidAlignment message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutInvalidStepRateChange">
            <summary>CreateInputLayoutInvalidStepRateChange message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutInvalidSlotClassChange">
            <summary>CreateInputLayoutInvalidSlotClassChange message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutStepRateSlotClassMismatch">
            <summary>CreateInputLayoutStepRateSlotClassMismatch message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutInvalidInputSlotClass">
            <summary>CreateInputLayoutInvalidInputSlotClass message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutInvalidSlot">
            <summary>CreateInputLayoutInvalidSlot message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutIncompatibleFormat">
            <summary>CreateInputLayoutIncompatibleFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutInvalidFormat">
            <summary>CreateInputLayoutInvalidFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutTooManyElements">
            <summary>CreateInputLayoutTooManyElements message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateInputLayoutOutOfMemory">
            <summary>CreateInputLayoutOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewOutOfMemoryReturn">
            <summary>CreateDepthStencilViewOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewInvalidArgumentReturn">
            <summary>CreateDepthStencilViewInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewTooManyObjects">
            <summary>CreateDepthStencilViewTooManyObjects message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewInvalidResource">
            <summary>CreateDepthStencilViewInvalidResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewInvalidDimensions">
            <summary>CreateDepthStencilViewInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewInvalidFormat">
            <summary>CreateDepthStencilViewInvalidFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewInvalidDescription">
            <summary>CreateDepthStencilViewInvalidDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateDepthStencilViewUnrecognizedFormat">
            <summary>CreateDepthStencilViewUnrecognizedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewOutOfMemoryReturn">
            <summary>CreateRenderTargetViewOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewInvalidArgumentReturn">
            <summary>CreateRenderTargetViewInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewTooManyObjects">
            <summary>CreateRenderTargetViewTooManyObjects message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewInvalidResource">
            <summary>CreateRenderTargetViewInvalidResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewInvalidDimensions">
            <summary>CreateRenderTargetViewInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewInvalidFormat">
            <summary>CreateRenderTargetViewInvalidFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewInvalidDescription">
            <summary>CreateRenderTargetViewInvalidDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewUnsupportedFormat">
            <summary>CreateRenderTargetViewUnsupportedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateRenderTargetViewUnrecognizedFormat">
            <summary>CreateRenderTargetViewUnrecognizedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewOutOfMemoryReturn">
            <summary>CreateShaderResourceViewOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewInvalidArgumentReturn">
            <summary>CreateShaderResourceViewInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewTooManyObjects">
            <summary>CreateShaderResourceViewTooManyObjects message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewInvalidResource">
            <summary>CreateShaderResourceViewInvalidResource message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewInvalidDimensions">
            <summary>CreateShaderResourceViewInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewInvalidFormat">
            <summary>CreateShaderResourceViewInvalidFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewInvalidDescription">
            <summary>CreateShaderResourceViewInvalidDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateShaderResourceViewUnrecognizedFormat">
            <summary>CreateShaderResourceViewUnrecognizedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DLargeAllocation">
            <summary>CreateTexture3DLargeAllocation message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DNullDescription">
            <summary>CreateTexture3DNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DOutOfMemoryReturn">
            <summary>CreateTexture3DOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DInvalidArgumentReturn">
            <summary>CreateTexture3DInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DInvalidMiscellaneousFlags">
            <summary>CreateTexture3DInvalidMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DInvalidMipLevels">
            <summary>CreateTexture3DInvalidMipLevels message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DInvalidDimensions">
            <summary>CreateTexture3DInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DInvalidInitialData">
            <summary>CreateTexture3DInvalidInitialData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DInvalidBindFlags">
            <summary>CreateTexture3DInvalidBindFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DInvalidCPUAccessFlags">
            <summary>CreateTexture3DInvalidCPUAccessFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DUnrecognizedMiscellaneousFlags">
            <summary>CreateTexture3DUnrecognizedMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DUnrecognizedCPUAccessFlags">
            <summary>CreateTexture3DUnrecognizedCPUAccessFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DUnrecognizedBindFlags">
            <summary>CreateTexture3DUnrecognizedBindFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DUnrecognizedUsage">
            <summary>CreateTexture3DUnrecognizedUsage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DInvalidSamples">
            <summary>CreateTexture3DInvalidSamples message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DUnsupportedFormat">
            <summary>CreateTexture3DUnsupportedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture3DUnrecognizedFormat">
            <summary>CreateTexture3DUnrecognizedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DLargeAllocation">
            <summary>CreateTexture2DLargeAllocation message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DNullDescription">
            <summary>CreateTexture2DNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DOutOfMemoryReturn">
            <summary>CreateTexture2DOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DInvalidArgumentReturn">
            <summary>CreateTexture2DInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DInvalidMiscellaneousFlags">
            <summary>CreateTexture2DInvalidMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DInvalidMipLevels">
            <summary>CreateTexture2DInvalidMipLevels message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DInvalidDimensions">
            <summary>CreateTexture2DInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DInvalidInitialData">
            <summary>CreateTexture2DInvalidInitialData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DInvalidBindFlags">
            <summary>CreateTexture2DInvalidBindFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DInvalidCPUAccessFlags">
            <summary>CreateTexture2DInvalidCPUAccessFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DUnrecognizedMiscellaneousFlags">
            <summary>CreateTexture2DUnrecognizedMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DUnrecognizedCPUAccessFlags">
            <summary>CreateTexture2DUnrecognizedCPUAccessFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DUnrecognizedBindFlags">
            <summary>CreateTexture2DUnrecognizedBindFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DUnrecognizedUsage">
            <summary>CreateTexture2DUnrecognizedUsage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DInvalidSamples">
            <summary>CreateTexture2DInvalidSamples message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DUnsupportedFormat">
            <summary>CreateTexture2DUnsupportedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture2DUnrecognizedFormat">
            <summary>CreateTexture2DUnrecognizedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DLargeAllocation">
            <summary>CreateTexture1DLargeAllocation message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DNullDescription">
            <summary>CreateTexture1DNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DOutOfMemoryReturn">
            <summary>CreateTexture1DOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DInvalidArgumentReturn">
            <summary>CreateTexture1DInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DInvalidMiscellaneousFlags">
            <summary>CreateTexture1DInvalidMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DInvalidMipLevels">
            <summary>CreateTexture1DInvalidMipLevels message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DInvalidDimensions">
            <summary>CreateTexture1DInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DInvalidInitialData">
            <summary>CreateTexture1DInvalidInitialData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DInvalidBindFlags">
            <summary>CreateTexture1DInvalidBindFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DInvalidCPUAccessFlags">
            <summary>CreateTexture1DInvalidCPUAccessFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DUnrecognizedMiscellaneousFlags">
            <summary>CreateTexture1DUnrecognizedMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DUnrecognizedCPUAccessFlags">
            <summary>CreateTexture1DUnrecognizedCPUAccessFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DUnrecognizedBindFlags">
            <summary>CreateTexture1DUnrecognizedBindFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DUnrecognizedUsage">
            <summary>CreateTexture1DUnrecognizedUsage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DInvalidSamples">
            <summary>CreateTexture1DInvalidSamples message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DUnsupportedFormat">
            <summary>CreateTexture1DUnsupportedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateTexture1DUnrecognizedFormat">
            <summary>CreateTexture1DUnrecognizedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferLargeAllocation">
            <summary>CreateBufferLargeAllocation message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidConstantBufferBindings">
            <summary>CreateBufferInvalidConstantBufferBindings message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferNullDescription">
            <summary>CreateBufferNullDescription message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferOutOfMemoryReturn">
            <summary>CreateBufferOutOfMemoryReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidArgumentReturn">
            <summary>CreateBufferInvalidArgumentReturn message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidMiscellaneousFlags">
            <summary>CreateBufferInvalidMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidMipLevels">
            <summary>CreateBufferInvalidMipLevels message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidDimensions">
            <summary>CreateBufferInvalidDimensions message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidInitialData">
            <summary>CreateBufferInvalidInitialData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidBindFlags">
            <summary>CreateBufferInvalidBindFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidCPUAccessFlags">
            <summary>CreateBufferInvalidCPUAccessFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferUnrecognizedMiscellaneousFlags">
            <summary>CreateBufferUnrecognizedMiscellaneousFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferUnrecognizedCPUAccessFlags">
            <summary>CreateBufferUnrecognizedCPUAccessFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferUnrecognizedBindFlags">
            <summary>CreateBufferUnrecognizedBindFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferUnrecognizedUsage">
            <summary>CreateBufferUnrecognizedUsage message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferInvalidSamples">
            <summary>CreateBufferInvalidSamples message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CreateBufferUnrecognizedFormat">
            <summary>CreateBufferUnrecognizedFormat message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetPrivateDataOutOfMemory">
            <summary>SetPrivateDataOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetPrivateDataChangingParameters">
            <summary>SetPrivateDataChangingParameters message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetPrivateDataInvalidFlags">
            <summary>SetPrivateDataInvalidFlags message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetPrivateDataInvalidIUnknown">
            <summary>SetPrivateDataInvalidIUnknown message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetPrivateDataInvalidFreeData">
            <summary>SetPrivateDataInvalidFreeData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.GetPrivateDataMoreData">
            <summary>GetPrivateDataMoreData message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SetPredicationUnbindDeletingObject">
            <summary>SetPredicationUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.OMSetRenderTargetsUnbindDeletingObject">
            <summary>OMSetRenderTargetsUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.OMSetDepthStencilStateUnbindDeletingObject">
            <summary>OMSetDepthStencilStateUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.OMSetBlendStateUnbindDeletingObject">
            <summary>OMSetBlendStateUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.RSSetStateUnbindDeletingObject">
            <summary>RSSetStateUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PSSetSamplersUnbindDeletingObject">
            <summary>PSSetSamplersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PSSetConstantBuffersUnbindDeletingObject">
            <summary>PSSetConstantBuffersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PSSetShaderResourcesUnbindDeletingObject">
            <summary>PSSetShaderResourcesUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.PSSetShaderUnbindDeletingObject">
            <summary>PSSetShaderUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.SOSetTargetsUnbindDeletingObject">
            <summary>SOSetTargetsUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.GSSetSamplersUnbindDeletingObject">
            <summary>GSSetSamplersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.GSSetConstantBuffersUnbindDeletingObject">
            <summary>GSSetConstantBuffersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.GSSetShaderResourcesUnbindDeletingObject">
            <summary>GSSetShaderResourcesUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.GSSetShaderUnbindDeletingObject">
            <summary>GSSetShaderUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.VSSetSamplersUnbindDeletingObject">
            <summary>VSSetSamplersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.VSSetConstantBuffersUnbindDeletingObject">
            <summary>VSSetConstantBuffersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.VSSetShaderResourcesUnbindDeletingObject">
            <summary>VSSetShaderResourcesUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.VSSetShaderUnbindDeletingObject">
            <summary>VSSetShaderUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.IASetIndexBufferUnbindDeletingObject">
            <summary>IASetIndexBufferUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.IASetVertexBuffersUnbindDeletingObject">
            <summary>IASetVertexBuffersUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.IASetInputLayoutUnbindDeletingObject">
            <summary>IASetInputLayoutUnbindDeletingObject message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.MessageReportingOutOfMemory">
            <summary>MessageReportingOutOfMemory message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedMultithreading">
            <summary>CorruptedMultithreading message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter15">
            <summary>CorruptedParameter15 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter14">
            <summary>CorruptedParameter14 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter13">
            <summary>CorruptedParameter13 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter12">
            <summary>CorruptedParameter12 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter11">
            <summary>CorruptedParameter11 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter10">
            <summary>CorruptedParameter10 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter9">
            <summary>CorruptedParameter9 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter8">
            <summary>CorruptedParameter8 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter7">
            <summary>CorruptedParameter7 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter6">
            <summary>CorruptedParameter6 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter5">
            <summary>CorruptedParameter5 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter4">
            <summary>CorruptedParameter4 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter3">
            <summary>CorruptedParameter3 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter2">
            <summary>CorruptedParameter2 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedParameter1">
            <summary>CorruptedParameter1 message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.CorruptedThis">
            <summary>CorruptedThis message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.StringFromApplication">
            <summary>StringFromApplication message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceSOSetTargetsHazard">
            <summary>DeviceSOSetTargetsHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceOMSetRenderTargetsHazard">
            <summary>DeviceOMSetRenderTargetsHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DevicePSSetConstantBuffersHazard">
            <summary>DevicePSSetConstantBuffersHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DevicePSSetShaderResourcesHazard">
            <summary>DevicePSSetShaderResourcesHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGSSetConstantBuffersHazard">
            <summary>DeviceGSSetConstantBuffersHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceGSSetShaderResourcesHazard">
            <summary>DeviceGSSetShaderResourcesHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceVSSetConstantBuffersHazard">
            <summary>DeviceVSSetConstantBuffersHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceVSSetShaderResourcesHazard">
            <summary>DeviceVSSetShaderResourcesHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetIndexBufferHazard">
            <summary>DeviceIASetIndexBufferHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.DeviceIASetVertexBuffersHazard">
            <summary>DeviceIASetVertexBuffersHazard message.</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugMessageId.Unknown">
            <summary>Unknown message.</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.IndexBuffer.Description">
            <summary>
Gets a description of the buffer.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBuffer.Unlock">
            <summary>
Unlocks previously locked data.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBuffer.Lock(System.Int32,System.Int32,SlimDX.Direct3D9.LockFlags)">
            <summary>
Locks the buffer and obtains a pointer to the memory.
</summary>
            <param name="offset">Offset into the index data to lock, in bytes.</param>
            <param name="size">Size of the index data to lock, in bytes.</param>
            <param name="flags">Locking flags.</param>
            <returns>A <see cref="T:SlimDX.DataStream" /> containing the index data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBuffer.#ctor(SlimDX.Direct3D9.Device,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool,System.Boolean,System.IntPtr@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.IndexBuffer" /> class.
</summary>
            <param name="device">The device that will be used to create the buffer.</param>
            <param name="sizeInBytes">Size of the buffer, in bytes.</param>
            <param name="usage">The requested usage of the buffer.</param>
            <param name="pool">The memory class into which the resource will be placed.</param>
            <param name="sixteenBit">
                <c>true</c> to create a buffer of 16-bit indices; <c>false</c> to create a buffer of 32-bit indices.</param>
            <param name="sharedHandle">The variable that will receive the shared handle for this resource.</param>
            <remarks>This method is only available in Direct3D9 Ex.</remarks>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBuffer.#ctor(SlimDX.Direct3D9.Device,System.Int32,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.Pool,System.Boolean)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.IndexBuffer" /> class.
</summary>
            <param name="device">The device that will be used to create the buffer.</param>
            <param name="sizeInBytes">Size of the buffer, in bytes.</param>
            <param name="usage">The requested usage of the buffer.</param>
            <param name="pool">The memory class into which the resource will be placed.</param>
            <param name="sixteenBit">
                <c>true</c> to create a buffer of 16-bit indices; <c>false</c> to create a buffer of 32-bit indices.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.IndexBuffer">
            <summary>Represents a buffer of index data.</summary>
            <unmanaged href="bb205865">IDirect3DIndexBuffer9</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBufferDescription.Equals(SlimDX.Direct3D9.IndexBufferDescription@,SlimDX.Direct3D9.IndexBufferDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBufferDescription.Equals(SlimDX.Direct3D9.IndexBufferDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBufferDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBufferDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBufferDescription.op_Inequality(SlimDX.Direct3D9.IndexBufferDescription,SlimDX.Direct3D9.IndexBufferDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.IndexBufferDescription.op_Equality(SlimDX.Direct3D9.IndexBufferDescription,SlimDX.Direct3D9.IndexBufferDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.IndexBufferDescription.SizeInBytes">
            <summary>
The size of the buffer data, in bytes.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.IndexBufferDescription.Pool">
            <summary>
The memory class allocated for the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.IndexBufferDescription.Usage">
            <summary>
The intended usage of the resource.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.IndexBufferDescription.Type">
            <summary>
Identifies the resource as an index buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.IndexBufferDescription.Format">
            <summary>
Surface format of the index data.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.IndexBufferDescription">
            <summary>Describes an index buffer.</summary>
            <unmanaged>D3DINDEXBUFFER_DESC</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.Resource.DebugName">
            <summary>
Gets or sets a friendly debug name for the object. This name is used in debug messages
as well as in the PIX object browser.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Resource.ResourceType">
            <summary>
Gets the type of the resource.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Resource.Priority">
            <summary>
Gets or sets the resource's priority.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Resource.Device">
            <summary>
Gets the device associated with the resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Resource.PriorityMaximum">
            <summary>
The resource has the maximum priority possible.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Resource.PriorityHigh">
            <summary>
The resource is scheduled with high priority.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Resource.PriorityNormal">
            <summary>
The resource is scheduled with normal priority.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Resource.PriorityLow">
            <summary>
The resource is scheduled with low priority.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Resource.PriorityMinimum">
            <summary>
The resource has the lowest priority possible.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Resource.Preload">
            <summary>
Preloads a managed resource.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Resource.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Resource" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Resource">
            <summary>Represents a base class for all Direct3D resources.</summary>
            <unmanaged>IDirect3DResource9</unmanaged>
        </member>
        <member name="M:SlimDX.DirectWrite.DirectWriteException.#ctor(SlimDX.Result)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.DirectWrite.DirectWriteException.#ctor(System.String,System.Exception)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.DirectWrite.DirectWriteException.#ctor(System.String)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.DirectWrite.DirectWriteException.#ctor">
            <summary>
Constructs a new exception object.
</summary>
        </member>
        <member name="T:SlimDX.DirectWrite.DirectWriteException">
            <summary>
Represents errors that occur in the DirectWrite subsystem.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.SamplerState.FromDescription(SlimDX.Direct3D11.Device,SlimDX.Direct3D11.SamplerDescription)">
            <summary>
Constructs a new sampler state based on the specified description. If the description
is identical to that of an existing SamplerState object, the existing SamplerState object
is returned instead of a new instance.
</summary>
            <param name="device">The device used to create the state.</param>
            <param name="description">The state description.</param>
            <returns>The SamplerState object.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerState.Description">
            <summary>
Gets the state's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.SamplerState">
            <summary>
A state object defining the behavior of texture sampling. 
</summary>
            <unmanaged>ID3D11SamplerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.SamplerDescription.Equals(SlimDX.Direct3D11.SamplerDescription@,SlimDX.Direct3D11.SamplerDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.SamplerDescription.Equals(SlimDX.Direct3D11.SamplerDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.SamplerDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.SamplerDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.SamplerDescription.op_Inequality(SlimDX.Direct3D11.SamplerDescription,SlimDX.Direct3D11.SamplerDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.SamplerDescription.op_Equality(SlimDX.Direct3D11.SamplerDescription,SlimDX.Direct3D11.SamplerDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.MaximumLod">
            <summary>
Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to MinimumLod. To have no upper limit on LOD set this to a large value such as float.MaxValue.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.MinimumLod">
            <summary>
Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.BorderColor">
            <summary>
Border color to use if using border addressing mode.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.ComparisonFunction">
            <summary>
A function that compares sampled data against existing sampled data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.MaximumAnisotropy">
            <summary>
Clamping value used if performing anisotropic filtering. Valid values are between 1 and 16.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.MipLodBias">
            <summary>
Offset from the calculated mipmap level. For example, if Direct3D calculates that a texture should be sampled at mipmap level 3 and MipLODBias is 2, then the texture will be sampled at mipmap level 5.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.AddressW">
            <summary>
Method to use for resolving a w texture coordinate that is outside the 0 to 1 range.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.AddressV">
            <summary>
Method to use for resolving a v texture coordinate that is outside the 0 to 1 range.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.AddressU">
            <summary>
Method to use for resolving a u texture coordinate that is outside the 0 to 1 range.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.SamplerDescription.Filter">
            <summary>
Filtering method to use when sampling a texture.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.SamplerDescription">
            <summary>
Provides a description for sampler state objects.
</summary>
            <unmanaged>D3D11_SAMPLER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.XInput.XInputException.#ctor(SlimDX.Result)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XInput.XInputException" /> class.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.XInput.XInputException.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XInput.XInputException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.XInput.XInputException.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XInput.XInputException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.XInput.XInputException.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XInput.XInputException" /> class.
</summary>
        </member>
        <member name="T:SlimDX.XInput.XInputException">
            <summary>
Represents errors that occur in the XInput subsystem.
</summary>
        </member>
        <member name="M:SlimDX.XInput.Gamepad.Equals(SlimDX.XInput.Gamepad@,SlimDX.XInput.Gamepad@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.Gamepad.Equals(SlimDX.XInput.Gamepad)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.Gamepad.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XInput.Gamepad.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XInput.Gamepad.op_Inequality(SlimDX.XInput.Gamepad,SlimDX.XInput.Gamepad)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XInput.Gamepad.op_Equality(SlimDX.XInput.Gamepad,SlimDX.XInput.Gamepad)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="F:SlimDX.XInput.Gamepad.GamepadTriggerThreshold">
            <summary>
This constant may be used as the value which <see cref="P:SlimDX.XInput.Gamepad.LeftTrigger" /> and <see cref="P:SlimDX.XInput.Gamepad.RightTrigger" /> must be greater than to register as pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.Gamepad.GamepadRightThumbDeadZone">
            <summary>
Can be used as a positive and negative value to filter the right thumbstick input.
</summary>
        </member>
        <member name="F:SlimDX.XInput.Gamepad.GamepadLeftThumbDeadZone">
            <summary>
Can be used as a positive and negative value to filter the left thumbstick input.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Gamepad.RightThumbY">
            <summary>
Gets the right thumbstick y-axis value. The value is between -32768 and 32767.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Gamepad.RightThumbX">
            <summary>
Gets the right thumbstick x-axis value. The value is between -32768 and 32767.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Gamepad.LeftThumbY">
            <summary>
Gets the left thumbstick y-axis value. The value is between -32768 and 32767.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Gamepad.LeftThumbX">
            <summary>
Gets the left thumbstick y-axis value. The value is between -32768 and 32767.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Gamepad.RightTrigger">
            <summary>
Gets the current value of the right trigger analog control. The value is between 0 and 255.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Gamepad.LeftTrigger">
            <summary>
Gets the current value of the left trigger analog control. The value is between 0 and 255.
</summary>
        </member>
        <member name="P:SlimDX.XInput.Gamepad.Buttons">
            <summary>
Gets a set of flags describing the pressed buttons on the gamepad.
</summary>
        </member>
        <member name="T:SlimDX.XInput.Gamepad">
            <summary>
Describes the current state of the Xbox 360 Controller.
</summary>
            <remarks>
Each of the thumbstick axis members is a signed value between -32768 and 32767 describing the position of the thumbstick.
A value of 0 is centered. Negative values signify down or to the left. Positive values signify up or to the right.
The constants GamepadLeftThumbDeadZone or GamepadRightThumbDeadZone can be used as a positive and negative value to filter
thumbstick input.
</remarks>
            <unmanaged>XINPUT_GAMEPAD</unmanaged>
        </member>
        <member name="T:SlimDX.XInput.UserIndex">
            <summary>
Specifies the index of a user's controller.
</summary>
        </member>
        <member name="F:SlimDX.XInput.UserIndex.Four">
            <summary>
Player four.
</summary>
        </member>
        <member name="F:SlimDX.XInput.UserIndex.Three">
            <summary>
Player three.
</summary>
        </member>
        <member name="F:SlimDX.XInput.UserIndex.Two">
            <summary>
Player two.
</summary>
        </member>
        <member name="F:SlimDX.XInput.UserIndex.One">
            <summary>
Player one.
</summary>
        </member>
        <member name="F:SlimDX.XInput.UserIndex.Any">
            <summary>
The index of the user is unimportant.
</summary>
        </member>
        <member name="T:SlimDX.XInput.KeystrokeFlags">
            <summary>
Defines flags that indicate the keyboard state at the time of an input event.
</summary>
        </member>
        <member name="F:SlimDX.XInput.KeystrokeFlags.Repeat">
            <summary>
A repeat of a held key.
</summary>
        </member>
        <member name="F:SlimDX.XInput.KeystrokeFlags.KeyUp">
            <summary>
The key was released.
</summary>
        </member>
        <member name="F:SlimDX.XInput.KeystrokeFlags.KeyDown">
            <summary>
The key was pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.KeystrokeFlags.None">
            <summary>
No extra keystroke flags.
</summary>
        </member>
        <member name="T:SlimDX.XInput.GamepadKeyCode">
            <summary>
Specifies possible key codes for gamepad buttons.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumbDownRight">
            <summary>
Pushing the right thumb stick down and to the right.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumbDownLeft">
            <summary>
Pushing the right thumb stick down and to the left.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumbUpRight">
            <summary>
Pushing the right thumb stick up and to the right.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumbUpLeft">
            <summary>
Pushing the right thumb stick up and to the left.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumbRight">
            <summary>
Pushing the right thumb stick right.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumpLeft">
            <summary>
Pushing the right thumb stick left.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumbDown">
            <summary>
Pushing the right thumb stick down.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumbUp">
            <summary>
Pushing the right thumb stick up.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbDownRight">
            <summary>
Pushing the left thumb stick down and to the right.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbDownLeft">
            <summary>
Pushing the left thumb stick down and to the left.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbUpRight">
            <summary>
Pushing the left thumb stick up and to the right.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbUpLeft">
            <summary>
Pushing the left thumb stick up and to the left.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbRight">
            <summary>
Pushing the left thumb stick right.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbLeft">
            <summary>
Pushing the left thumb stick left.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbDown">
            <summary>
Pushing the left thumb stick down.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbUp">
            <summary>
Pushing the left thumb stick up.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightThumbPress">
            <summary>
A complete press of the right thumb stick.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftThumbPress">
            <summary>
A complete press of the left thumb stick.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.Back">
            <summary>
The back button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.Start">
            <summary>
The start button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.DPadRight">
            <summary>
The Right button on the D-Pad.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.DPadLeft">
            <summary>
The Left button on the D-Pad.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.DPadDown">
            <summary>
The Down button on the D-Pad.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.DPadUp">
            <summary>
The Up button on the D-Pad.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightTrigger">
            <summary>
The right trigger button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftTrigger">
            <summary>
The left trigger button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.LeftShoulder">
            <summary>
The left shoulder button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.RightShoulder">
            <summary>
The right shoulder button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.Y">
            <summary>
The Y button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.X">
            <summary>
The X button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.B">
            <summary>
The B button.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadKeyCode.A">
            <summary>
The A button.
</summary>
        </member>
        <member name="T:SlimDX.XInput.GamepadButtonFlags">
            <summary>
Describes a set of pressed buttons on a gamepad.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.Y">
            <summary>
The Y button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.X">
            <summary>
The X button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.B">
            <summary>
The B button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.A">
            <summary>
The A button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.RightShoulder">
            <summary>
The right shoulder button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.LeftShoulder">
            <summary>
The left shoulder button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.RightThumb">
            <summary>
The right thumb button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.LeftThumb">
            <summary>
The left thumb button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.Back">
            <summary>
The back button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.Start">
            <summary>
The start button is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.DPadRight">
            <summary>
The Right button on the D-Pad is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.DPadLeft">
            <summary>
The Left button on the D-Pad is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.DPadDown">
            <summary>
The Down button on the D-Pad is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.DPadUp">
            <summary>
The Up button on the D-Pad is pressed.
</summary>
        </member>
        <member name="F:SlimDX.XInput.GamepadButtonFlags.None">
            <summary>
No buttons are pressed.
</summary>
        </member>
        <member name="T:SlimDX.XInput.DeviceSubtype">
            <summary>
Specifies possible sub-types for XInput devices.
</summary>
        </member>
        <member name="F:SlimDX.XInput.DeviceSubtype.FlightStick">
            <summary>
The device is a flight stick.
</summary>
        </member>
        <member name="F:SlimDX.XInput.DeviceSubtype.DancePad">
            <summary>
The device is a dancing pad.
</summary>
        </member>
        <member name="F:SlimDX.XInput.DeviceSubtype.Wheel">
            <summary>
The device is a racing wheel.
</summary>
        </member>
        <member name="F:SlimDX.XInput.DeviceSubtype.Gamepad">
            <summary>
The device is a generic gamepad.
</summary>
        </member>
        <member name="F:SlimDX.XInput.DeviceSubtype.ArcadeStick">
            <summary>
The device is an arcade stick.
</summary>
        </member>
        <member name="T:SlimDX.XInput.DeviceQueryType">
            <summary>
Defines the type of devices that will be returned by a query.
</summary>
        </member>
        <member name="F:SlimDX.XInput.DeviceQueryType.Gamepad">
            <summary>
Query for gamepads only.
</summary>
        </member>
        <member name="F:SlimDX.XInput.DeviceQueryType.Any">
            <summary>
Return any and all devices.
</summary>
        </member>
        <member name="T:SlimDX.XInput.DeviceType">
            <summary>
Specifies possible controller types.
</summary>
        </member>
        <member name="F:SlimDX.XInput.DeviceType.Gamepad">
            <summary>
The device is a game controller.
</summary>
        </member>
        <member name="T:SlimDX.XInput.CapabilityFlags">
            <summary>
Specifies capabilities for XInput devices.
</summary>
        </member>
        <member name="F:SlimDX.XInput.CapabilityFlags.VoiceSupported">
            <summary>
The device has an integrated voice device.
</summary>
        </member>
        <member name="F:SlimDX.XInput.CapabilityFlags.None">
            <summary>
No extra capabilities specfied.
</summary>
        </member>
        <member name="T:SlimDX.XInput.BatteryType">
            <summary>
Specifies possible battery types.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryType.Unknown">
            <summary>
The device's battery type is unknown.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryType.NickelMetalHydride">
            <summary>
The device is using a Nickel Metal Hydride battery.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryType.Alkaline">
            <summary>
The device is using an Alkaline battery.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryType.Wired">
            <summary>
The device is wired, and therefore does not have a battery.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryType.Disconnected">
            <summary>
The device is disconnected, and therefore the battery type cannot be determined.
</summary>
        </member>
        <member name="T:SlimDX.XInput.BatteryLevel">
            <summary>
Specifies possible values indicating the amount of charge remaining in a battery.
</summary>
            <remarks>
These are only valid for wireless, connected devices, with known battery types. The amount of use time remaining depends on the type of device.
</remarks>
        </member>
        <member name="F:SlimDX.XInput.BatteryLevel.Full">
            <summary>
The battery is fully charged.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryLevel.Medium">
            <summary>
The battery is at a medium charge.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryLevel.Low">
            <summary>
The battery is running low.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryLevel.Empty">
            <summary>
The battery is completely empty.
</summary>
        </member>
        <member name="T:SlimDX.XInput.BatteryDeviceType">
            <summary>
Specifies possible XInput devices that can use batteries.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryDeviceType.Headset">
            <summary>
An XInput headset.
</summary>
        </member>
        <member name="F:SlimDX.XInput.BatteryDeviceType.Gamepad">
            <summary>
An XInput gamepad.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputElement.Equals(SlimDX.Direct3D11.StreamOutputElement@,SlimDX.Direct3D11.StreamOutputElement@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputElement.Equals(SlimDX.Direct3D11.StreamOutputElement)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputElement.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputElement.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputElement.op_Inequality(SlimDX.Direct3D11.StreamOutputElement,SlimDX.Direct3D11.StreamOutputElement)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputElement.op_Equality(SlimDX.Direct3D11.StreamOutputElement,SlimDX.Direct3D11.StreamOutputElement)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.StreamOutputElement.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.StreamOutputElement" /> struct.
</summary>
            <param name="stream">Zero-based stream index.</param>
            <param name="name">Type of output element; possible values include: "POSITION", "NORMAL", or "TEXCOORD0". Note that if SemanticName is <c>null</c> then ComponentCount can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</param>
            <param name="index">Output element's zero-based index. Should be used if, for example, you have more than one texture coordinate stored in each vertex.</param>
            <param name="startComponent">Which component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components of a position, then StartComponent should be 1 and ComponentCount should be 2.</param>
            <param name="componentCount">The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components of a position, then StartComponent should be 1 and ComponentCount should be 2. Note that if SemanticName is <c>null</c> then ComponentCount can be greater than 4 and the described entry will be a gap in the stream out where no data will be written. </param>
            <param name="outputSlot">The associated stream output buffer that is bound to the pipeline. Valid values range from 0 to 3.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputElement.OutputSlot">
            <summary>
The associated stream output buffer that is bound to the pipeline. Valid values range from 0 to 3.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputElement.ComponentCount">
            <summary>
The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components of a position,
then StartComponent should be 1 and ComponentCount should be 2. Note that if SemanticName is <c>null</c> then ComponentCount can be greater than 4 and the described entry will be a gap in the stream out where no data will be written. 
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputElement.StartComponent">
            <summary>
Which component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components of a position, then StartComponent should be 1 and ComponentCount should be 2.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputElement.SemanticIndex">
            <summary>
Output element's zero-based index. Should be used if, for example, you have more than one texture coordinate stored in each vertex.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputElement.SemanticName">
            <summary>
Type of output element; possible values include: "POSITION", "NORMAL", or "TEXCOORD0". Note that if SemanticName is <c>null</c> then
ComponentCount can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StreamOutputElement.Stream">
            <summary>
Zero-based stream index.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.StreamOutputElement">
            <summary>Describes a single element in a vertex buffer in an output slot.</summary>
            <unmanaged>D3D11_SO_DECLARATION_ENTRY</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CreateWithSwapChain(SlimDX.DXGI.Adapter,SlimDX.Direct3D11.DriverType,SlimDX.Direct3D11.DeviceCreationFlags,SlimDX.Direct3D11.FeatureLevel[],SlimDX.DXGI.SwapChainDescription,SlimDX.Direct3D11.Device@,SlimDX.DXGI.SwapChain@)">
            <summary>
This overload has been deprecated. Use one of the alternatives that does not take both an adapter and a driver type.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CreateWithSwapChain(SlimDX.DXGI.Adapter,SlimDX.Direct3D11.DriverType,SlimDX.Direct3D11.DeviceCreationFlags,SlimDX.DXGI.SwapChainDescription,SlimDX.Direct3D11.Device@,SlimDX.DXGI.SwapChain@)">
            <summary>
This overload has been deprecated. Use one of the alternatives that does not take both an adapter and a driver type.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CreateWithSwapChain(SlimDX.Direct3D11.DriverType,SlimDX.Direct3D11.DeviceCreationFlags,SlimDX.Direct3D11.FeatureLevel[],SlimDX.DXGI.SwapChainDescription,SlimDX.Direct3D11.Device@,SlimDX.DXGI.SwapChain@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class along with a new <see cref="T:SlimDX.DXGI.SwapChain" /> used for rendering.
</summary>
            <param name="driverType">The type of device to create.</param>
            <param name="flags">A list of runtime layers to enable.</param>
            <param name="featureLevels">A list of feature levels which determine the order of feature levels to attempt to create.</param>
            <param name="swapChainDescription">Details used to create the swap chain.</param>
            <param name="device">When the method completes, contains the created device instance.</param>
            <param name="swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CreateWithSwapChain(SlimDX.Direct3D11.DriverType,SlimDX.Direct3D11.DeviceCreationFlags,SlimDX.DXGI.SwapChainDescription,SlimDX.Direct3D11.Device@,SlimDX.DXGI.SwapChain@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class along with a new <see cref="T:SlimDX.DXGI.SwapChain" /> used for rendering.
</summary>
            <param name="driverType">The type of device to create.</param>
            <param name="flags">A list of runtime layers to enable.</param>
            <param name="swapChainDescription">Details used to create the swap chain.</param>
            <param name="device">When the method completes, contains the created device instance.</param>
            <param name="swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CreateWithSwapChain(SlimDX.DXGI.Adapter,SlimDX.Direct3D11.DeviceCreationFlags,SlimDX.Direct3D11.FeatureLevel[],SlimDX.DXGI.SwapChainDescription,SlimDX.Direct3D11.Device@,SlimDX.DXGI.SwapChain@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class along with a new <see cref="T:SlimDX.DXGI.SwapChain" /> used for rendering.
</summary>
            <param name="adapter">The video adapter on which the device should be created.</param>
            <param name="flags">A list of runtime layers to enable.</param>
            <param name="featureLevels">A list of feature levels which determine the order of feature levels to attempt to create.</param>
            <param name="swapChainDescription">Details used to create the swap chain.</param>
            <param name="device">When the method completes, contains the created device instance.</param>
            <param name="swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CreateWithSwapChain(SlimDX.DXGI.Adapter,SlimDX.Direct3D11.DeviceCreationFlags,SlimDX.DXGI.SwapChainDescription,SlimDX.Direct3D11.Device@,SlimDX.DXGI.SwapChain@)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class along with a new <see cref="T:SlimDX.DXGI.SwapChain" /> used for rendering.
</summary>
            <param name="adapter">The video adapter on which the device should be created.</param>
            <param name="flags">A list of runtime layers to enable.</param>
            <param name="swapChainDescription">Details used to create the swap chain.</param>
            <param name="device">When the method completes, contains the created device instance.</param>
            <param name="swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.GetSupportedFeatureLevel(SlimDX.DXGI.Adapter)">
            <summary>
Gets the highest supported hardware feature level of the given adapter.
</summary>
            <param name="adapter">The adapter for which the feature level is to be retrieved.</param>
            <returns>The highest supported hardware feature level.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.GetSupportedFeatureLevel">
            <summary>
Gets the highest supported hardware feature level of the primary adapter.
</summary>
            <returns>The highest supported hardware feature level.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.OpenSharedResource``1(System.IntPtr)">
            <summary>
Gives the device access to a shared resource created on a different device.
</summary>
            <typeparam name="T">The type of the resource.</typeparam>
            <param name="handle">A handle to the shared resource.</param>
            <returns>The new reference to the shared resource.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CheckMultisampleQualityLevels(SlimDX.DXGI.Format,System.Int32)">
            <summary>
Gets the number of quality levels supported during multisampling of resources using a specified format.
</summary>
            <param name="format">The format to check support for.</param>
            <param name="sampleCount">The multisample count for which to check support.</param>
            <returns>The number of quality levels supported. 0 if an error occured or if the format/sampleCount pair is not supported.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CheckThreadingSupport(System.Boolean@,System.Boolean@)">
            <summary>
Checks the level of hardware multithreading supported by this device.
</summary>
            <param name="supportsConcurrentResources">When the method completes, contains a value indicating whether resources can be created concurrently on multiple threads while drawing.</param>
            <param name="supportCommandLists">When the method completes, contains a value indicating whether command lists are supported by the current driver.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CheckFeatureSupport(SlimDX.Direct3D11.Feature)">
            <summary>
Checks for hardware support of the specified device feature.
</summary>
            <returns>
                <c>true</c> if the specified feature is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CheckComputeShaderFormatSupport(SlimDX.DXGI.Format)">
            <summary>
Gets information about the supported compute shader applications of a specified format.
</summary>
            <param name="format">The format for which to check support.</param>
            <returns>Flags indicating usage contexts in which the specified format is supported.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.CheckFormatSupport(SlimDX.DXGI.Format)">
            <summary>
Gets information about the supported applications of a specified format.
</summary>
            <param name="format">The format for which to check support.</param>
            <returns>Flags indicating usage contexts in which the specified format is supported.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.GetCounterMetadata(SlimDX.Direct3D11.CounterKind)">
            <summary>
Gets metadata (name, type, measurement units, et cetera) for a specific counter.
</summary>
            <param name="counterKind">The type of the counter to retrieve information about.</param>
            <returns>Metadata for the specified counter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.GetCounterCapabilities">
            <summary>
Gets information about the device's performance counters.
</summary>
            <returns>Information about the device's performance counters.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.#ctor(SlimDX.Direct3D11.DriverType,SlimDX.Direct3D11.DeviceCreationFlags,SlimDX.Direct3D11.FeatureLevel[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class.
</summary>
            <param name="driverType">The type of device to create.</param>
            <param name="flags">A list of runtime layers to enable.</param>
            <param name="featureLevels">A list of feature levels which determine the order of feature levels to attempt to create.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.#ctor(SlimDX.Direct3D11.DriverType,SlimDX.Direct3D11.DeviceCreationFlags)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class using the highest supported feature level.
</summary>
            <param name="driverType">The type of device to create.</param>
            <param name="flags">A list of runtime layers to enable.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.#ctor(SlimDX.Direct3D11.DriverType)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class using the highest supported feature level.
</summary>
            <param name="driverType">The type of device to create.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.#ctor(SlimDX.DXGI.Adapter,SlimDX.Direct3D11.DeviceCreationFlags,SlimDX.Direct3D11.FeatureLevel[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class.
</summary>
            <param name="adapter">The video adapter on which the device should be created.</param>
            <param name="flags">A list of runtime layers to enable.</param>
            <param name="featureLevels">A list of feature levels which determine the order of feature levels to attempt to create.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.#ctor(SlimDX.DXGI.Adapter,SlimDX.Direct3D11.DeviceCreationFlags)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class using the highest supported feature level.
</summary>
            <param name="adapter">The video adapter on which the device should be created.</param>
            <param name="flags">A list of runtime layers to enable.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Device.#ctor(SlimDX.DXGI.Adapter)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.Device" /> class using the highest supported feature level.
</summary>
            <param name="adapter">The video adapter on which the device should be created.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.Device.DebugName">
            <summary>
Gets or sets a friendly debug name for the object. This name is used in debug messages
as well as in the PIX object browser.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Device.IsReferenceDevice">
            <summary>
Gets a value indicating whether the current device is using the reference rasterizer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Device.ImmediateContext">
            <summary>
Gets the intrinsic immediate context for the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Device.FeatureLevel">
            <summary>
Gets the feature level of the hardware device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Device.DeviceRemovedReason">
            <summary>
Gets the reason why the device was removed.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Device.CreationFlags">
            <summary>
Gets the flags used to create the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.Device.Factory">
            <summary>
Gets the parent factory associated with the device.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Device.MultisampleCountMaximum">
            <summary>
The maximum number of multisample quality levels supported.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Device">
            <summary>
Represents a virtual adapter used to perform rendering and create resources.
</summary>
            <unmanaged>ID3D11Device</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.SwapChainDescription.Flags">
            <summary>
Gets or sets swap chain options.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChainDescription.SwapEffect">
            <summary>
Gets or sets swapping effect behavior.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChainDescription.IsWindowed">
            <summary>
Gets or sets a value indicating whether or not the swap chain is in windowed mode.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChainDescription.OutputHandle">
            <summary>
Gets or sets the swap chain's output handle.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChainDescription.BufferCount">
            <summary>
Gets or sets the number of buffers in the swap chain.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChainDescription.Usage">
            <summary>
Gets or sets swap chain's surface usage.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChainDescription.SampleDescription">
            <summary>
Gets or sets the swap chain's multisampling properties.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChainDescription.ModeDescription">
            <summary>
Gets or sets the swap chain's display mode properties.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.SwapChainDescription">
            <summary>
Describes properties of a swap chain.
</summary>
            <unmanaged>DXGI_SWAP_CHAIN_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.SampleDescription.Equals(SlimDX.DXGI.SampleDescription@,SlimDX.DXGI.SampleDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SampleDescription.Equals(SlimDX.DXGI.SampleDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SampleDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SampleDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SampleDescription.op_Inequality(SlimDX.DXGI.SampleDescription,SlimDX.DXGI.SampleDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SampleDescription.op_Equality(SlimDX.DXGI.SampleDescription,SlimDX.DXGI.SampleDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SampleDescription.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SampleDescription.#ctor(System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.SampleDescription" /> structure.
</summary>
            <param name="count">The sample count.</param>
            <param name="quality">The sample quality.</param>
        </member>
        <member name="P:SlimDX.DXGI.SampleDescription.Quality">
            <summary>
Gets or sets the sample quality.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SampleDescription.Count">
            <summary>
Gets or sets the number of samples per pixel.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.SampleDescription">
            <summary>
Describes multisample parameters.
</summary>
            <unmanaged>DXGI_SAMPLE_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.ModeDescription.Equals(SlimDX.DXGI.ModeDescription@,SlimDX.DXGI.ModeDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.ModeDescription.Equals(SlimDX.DXGI.ModeDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.ModeDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.DXGI.ModeDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.DXGI.ModeDescription.op_Inequality(SlimDX.DXGI.ModeDescription,SlimDX.DXGI.ModeDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.ModeDescription.op_Equality(SlimDX.DXGI.ModeDescription,SlimDX.DXGI.ModeDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.ModeDescription.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.DXGI.ModeDescription.#ctor(System.Int32,System.Int32,SlimDX.Rational,SlimDX.DXGI.Format)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.ModeDescription" /> structure.
</summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="refreshRate">The refresh rate.</param>
            <param name="format">The format.</param>
        </member>
        <member name="P:SlimDX.DXGI.ModeDescription.Scaling">
            <summary>
Gets or sets the display mode scaling.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.ModeDescription.ScanlineOrdering">
            <summary>
Gets or sets the scanline ordering.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.ModeDescription.Format">
            <summary>
Gets or sets the display mode format.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.ModeDescription.RefreshRate">
            <summary>
Gets or sets the display mode refresh rate.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.ModeDescription.Height">
            <summary>
Gets or sets the display mode height.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.ModeDescription.Width">
            <summary>
Gets or sets the display mode width.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.ModeDescription">
            <summary>
Describes a display mode.
</summary>
            <unmanaged>DXGI_MODE_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Rational.Equals(SlimDX.Rational@,SlimDX.Rational@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Rational.Equals(SlimDX.Rational)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Rational.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Rational.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Rational.op_Inequality(SlimDX.Rational,SlimDX.Rational)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Rational.op_Equality(SlimDX.Rational,SlimDX.Rational)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Rational.#ctor(System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Rational" /> structure.
</summary>
            <param name="numerator">The numerator of the rational pair.</param>
            <param name="denominator">The denominator of the rational pair.</param>
        </member>
        <member name="F:SlimDX.Rational.Denominator">
            <summary>
Gets or sets the denominator of the rational pair.
</summary>
        </member>
        <member name="F:SlimDX.Rational.Numerator">
            <summary>
Gets or sets the numerator of the rational pair.
</summary>
        </member>
        <member name="T:SlimDX.Rational">
            <summary>
Defines a rational number as a numerator / denominator pair.
</summary>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.RationalConverter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.RationalConverter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.RationalConverter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Rational" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.AnimationSet">
            <summary>
This interface encapsulates the minimum functionality required of an animation set by an animation
controller. Advanced users might want to implement this interface themselves to suit their
specialized needs; for most users, however, the derived CompressedAnimationSet and
KeyframedAnimationSet interfaces should suffice.
</summary>
            <unmanaged>ID3DXAnimationSet</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.TranslationKey">
            <summary>Describes a vector translation key for use in key frame animation.</summary>
            <unmanaged>D3DXKEY_VECTOR3</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.ScaleKey">
            <summary>Describes a vector scale key for use in key frame animation.</summary>
            <unmanaged>D3DXKEY_VECTOR3</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.RotationKey">
            <summary>Describes a quaternion rotation key for use in key frame animation.</summary>
            <unmanaged>D3DXKEY_QUATERNION</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.CallbackKey">
            <summary>Describes a callback key for use in key frame animation.</summary>
            <unmanaged>D3DXKEY_CALLBACK</unmanaged>
        </member>
        <member name="M:SlimDX.Quaternion.Equals(SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Equals(SlimDX.Quaternion)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_Inequality(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_Equality(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_UnaryNegation(SlimDX.Quaternion)">
            <summary>
Reverses the direction of a given quaternion.
</summary>
            <param name="quaternion">The quaternion to negate.</param>
            <returns>A quaternion facing in the opposite direction.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_Subtraction(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Subtracts two quaternions.
</summary>
            <param name="left">The first quaternion to subtract.</param>
            <param name="right">The second quaternion to subtract.</param>
            <returns>The difference of the two quaternions.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_Addition(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Adds two quaternions.
</summary>
            <param name="left">The first quaternion to add.</param>
            <param name="right">The second quaternion to add.</param>
            <returns>The sum of the two quaternions.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_Division(SlimDX.Quaternion,System.Single)">
            <summary>
Divides a quaternion by another.
</summary>
            <param name="left">The first quaternion to divide.</param>
            <param name="right">The second quaternion to divide.</param>
            <returns>The divided quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_Multiply(System.Single,SlimDX.Quaternion)">
            <summary>
Scales a quaternion by the given value.
</summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_Multiply(SlimDX.Quaternion,System.Single)">
            <summary>
Scales a quaternion by the given value.
</summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.op_Multiply(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Multiplies a quaternion by another.
</summary>
            <param name="left">The first quaternion to multiply.</param>
            <param name="right">The second quaternion to multiply.</param>
            <returns>The multiplied quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Subtract(SlimDX.Quaternion@,SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Subtracts two quaternions.
</summary>
            <param name="left">The first quaternion to subtract.</param>
            <param name="right">The second quaternion to subtract.</param>
            <param name="result">When the method completes, contains the difference of the two quaternions.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Subtract(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Subtracts two quaternions.
</summary>
            <param name="left">The first quaternion to subtract.</param>
            <param name="right">The second quaternion to subtract.</param>
            <returns>The difference of the two quaternions.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.SquadSetup(SlimDX.Quaternion,SlimDX.Quaternion,SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Sets up control points for spherical quadrangle interpolation.
</summary>
            <param name="source1">First source quaternion.</param>
            <param name="source2">Second source quaternion.</param>
            <param name="source3">Third source quaternion.</param>
            <param name="source4">Fourth source quaternion.</param>
            <returns>An array of three quaternions that represent control points for spherical quadrangle interpolation.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Squad(SlimDX.Quaternion@,SlimDX.Quaternion@,SlimDX.Quaternion@,SlimDX.Quaternion@,System.Single,SlimDX.Quaternion@)">
            <summary>
Interpolates between quaternions, using spherical quadrangle interpolation.
</summary>
            <param name="source1">First source quaternion.</param>
            <param name="source2">Second source quaternion.</param>
            <param name="source3">Thrid source quaternion.</param>
            <param name="source4">Fourth source quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of interpolation.</param>
            <param name="result">When the method completes, contains the spherical quadrangle interpolation of the quaternions.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Squad(SlimDX.Quaternion,SlimDX.Quaternion,SlimDX.Quaternion,SlimDX.Quaternion,System.Single)">
            <summary>
Interpolates between quaternions, using spherical quadrangle interpolation.
</summary>
            <param name="source1">First source quaternion.</param>
            <param name="source2">Second source quaternion.</param>
            <param name="source3">Thrid source quaternion.</param>
            <param name="source4">Fourth source quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of interpolation.</param>
            <returns>The spherical quadrangle interpolation of the quaternions.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Slerp(SlimDX.Quaternion@,SlimDX.Quaternion@,System.Single,SlimDX.Quaternion@)">
            <summary>
Interpolates between two quaternions, using spherical linear interpolation.
</summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the spherical linear interpolation of the two quaternions.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Slerp(SlimDX.Quaternion,SlimDX.Quaternion,System.Single)">
            <summary>
Interpolates between two quaternions, using spherical linear interpolation.
</summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The spherical linear interpolation of the two quaternions.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.RotationYawPitchRoll(System.Single,System.Single,System.Single,SlimDX.Quaternion@)">
            <summary>
Creates a quaternion given a yaw, pitch, and roll value.
</summary>
            <param name="yaw">The yaw of rotation.</param>
            <param name="pitch">The pitch of rotation.</param>
            <param name="roll">The roll of rotation.</param>
            <param name="result">When the method completes, contains the newly created quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.RotationYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
Creates a quaternion given a yaw, pitch, and roll value.
</summary>
            <param name="yaw">The yaw of rotation.</param>
            <param name="pitch">The pitch of rotation.</param>
            <param name="roll">The roll of rotation.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.RotationMatrix(SlimDX.Matrix@,SlimDX.Quaternion@)">
            <summary>
Creates a quaternion given a rotation matrix.
</summary>
            <param name="matrix">The rotation matrix.</param>
            <param name="result">When the method completes, contains the newly created quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.RotationMatrix(SlimDX.Matrix)">
            <summary>
Creates a quaternion given a rotation matrix.
</summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.RotationAxis(SlimDX.Vector3@,System.Single,SlimDX.Quaternion@)">
            <summary>
Creates a quaternion given a rotation and an axis.
</summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation.</param>
            <param name="result">When the method completes, contains the newly created quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.RotationAxis(SlimDX.Vector3,System.Single)">
            <summary>
Creates a quaternion given a rotation and an axis.
</summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Normalize(SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Converts the quaternion into a unit quaternion.
</summary>
            <param name="quaternion">The quaternion to normalize.</param>
            <param name="result">When the method completes, contains the normalized quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Normalize(SlimDX.Quaternion)">
            <summary>
Converts the quaternion into a unit quaternion.
</summary>
            <param name="quaternion">The quaternion to normalize.</param>
            <returns>The normalized quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Negate(SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Reverses the direction of a given quaternion.
</summary>
            <param name="quaternion">The quaternion to negate.</param>
            <param name="result">When the method completes, contains a quaternion facing in the opposite direction.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Negate(SlimDX.Quaternion)">
            <summary>
Reverses the direction of a given quaternion.
</summary>
            <param name="quaternion">The quaternion to negate.</param>
            <returns>A quaternion facing in the opposite direction.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Multiply(SlimDX.Quaternion@,System.Single,SlimDX.Quaternion@)">
            <summary>
Scales a quaternion by the given value.
</summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <param name="result">When the method completes, contains the scaled quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Multiply(SlimDX.Quaternion,System.Single)">
            <summary>
Scales a quaternion by the given value.
</summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Multiply(SlimDX.Quaternion@,SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Modulates a quaternion by another.
</summary>
            <param name="left">The first quaternion to modulate.</param>
            <param name="right">The second quaternion to modulate.</param>
            <param name="result">When the moethod completes, contains the modulated quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Multiply(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Modulates a quaternion by another.
</summary>
            <param name="left">The first quaternion to modulate.</param>
            <param name="right">The second quaternion to modulate.</param>
            <returns>The modulated quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Logarithm(SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Calculates the natural logarithm of the specified quaternion.
</summary>
            <param name="quaternion">The quaternion whose logarithm will be calculated.</param>
            <param name="result">When the method completes, contains the natural logarithm of the quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Logarithm(SlimDX.Quaternion)">
            <summary>
Calculates the natural logarithm of the specified quaternion.
</summary>
            <param name="quaternion">The quaternion whose logarithm will be calculated.</param>
            <returns>The natural logarithm of the quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Lerp(SlimDX.Quaternion@,SlimDX.Quaternion@,System.Single,SlimDX.Quaternion@)">
            <summary>
Performs a linear interpolation between two quaternions.
</summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the linear interpolation of the two quaternions.</param>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Quaternion.Lerp(SlimDX.Quaternion,SlimDX.Quaternion,System.Single)">
            <summary>
Performs a linear interpolation between two quaternion.
</summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The linear interpolation of the two quaternions.</returns>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Quaternion.Invert(SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Conjugates and renormalizes the quaternion.
</summary>
            <param name="quaternion">The quaternion to conjugate and renormalize.</param>
            <param name="result">When the method completes, contains the conjugated and renormalized quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Invert(SlimDX.Quaternion)">
            <summary>
Conjugates and renormalizes the quaternion.
</summary>
            <param name="quaternion">The quaternion to conjugate and renormalize.</param>
            <returns>The conjugated and renormalized quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Exponential(SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Exponentiates a quaternion.
</summary>
            <param name="quaternion">The quaternion to exponentiate.</param>
            <param name="result">When the method completes, contains the exponentiated quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Exponential(SlimDX.Quaternion)">
            <summary>
Exponentiates a quaternion.
</summary>
            <param name="quaternion">The quaternion to exponentiate.</param>
            <returns>The exponentiated quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Dot(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Calculates the dot product of two quaternions.
</summary>
            <param name="left">First source quaternion.</param>
            <param name="right">Second source quaternion.</param>
            <returns>The dot product of the two quaternions.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Divide(SlimDX.Quaternion@,SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Divides a quaternion by another.
</summary>
            <param name="left">The first quaternion to divide.</param>
            <param name="right">The second quaternion to divide.</param>
            <returns>The divided quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Divide(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Divides a quaternion by another.
</summary>
            <param name="left">The first quaternion to divide.</param>
            <param name="right">The second quaternion to divide.</param>
            <returns>The divided quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Conjugate(SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Conjugates a quaternion.
</summary>
            <param name="quaternion">The quaternion to conjugate.</param>
            <param name="result">When the method completes, contains the conjugated quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Conjugate(SlimDX.Quaternion)">
            <summary>
Conjugates a quaternion.
</summary>
            <param name="quaternion">The quaternion to conjugate.</param>
            <returns>The conjugated quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Barycentric(SlimDX.Quaternion@,SlimDX.Quaternion@,SlimDX.Quaternion@,System.Single,System.Single,SlimDX.Quaternion@)">
            <summary>
Returns a <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 2D triangle.
</summary>
            <param name="source1">A <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="source2">A <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="source3">A <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="weight1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in <paramref name="source2" />).</param>
            <param name="weight2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in <paramref name="source3" />).</param>
            <param name="result">When the method completes, contains a new <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of the specified point.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Barycentric(SlimDX.Quaternion,SlimDX.Quaternion,SlimDX.Quaternion,System.Single,System.Single)">
            <summary>
Returns a <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 2D triangle.
</summary>
            <param name="source1">A <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="source2">A <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="source3">A <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="weight1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in <paramref name="source2" />).</param>
            <param name="weight2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in <paramref name="source3" />).</param>
            <returns>A new <see cref="T:SlimDX.Quaternion" /> containing the 4D Cartesian coordinates of the specified point.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Add(SlimDX.Quaternion@,SlimDX.Quaternion@,SlimDX.Quaternion@)">
            <summary>
Adds two quaternions.
</summary>
            <param name="left">The first quaternion to add.</param>
            <param name="right">The second quaternion to add.</param>
            <param name="result">When the method completes, contains the sum of the two quaternions.</param>
        </member>
        <member name="M:SlimDX.Quaternion.Add(SlimDX.Quaternion,SlimDX.Quaternion)">
            <summary>
Adds two quaternions.
</summary>
            <param name="left">The first quaternion to add.</param>
            <param name="right">The second quaternion to add.</param>
            <returns>The sum of the two quaternions.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Invert">
            <summary>
Conjugates and renormalizes the quaternion.
</summary>
        </member>
        <member name="M:SlimDX.Quaternion.Conjugate">
            <summary>
Conjugates the quaternion.
</summary>
        </member>
        <member name="M:SlimDX.Quaternion.Normalize">
            <summary>
Converts the quaternion into a unit quaternion.
</summary>
        </member>
        <member name="M:SlimDX.Quaternion.LengthSquared">
            <summary>
Calculates the squared length of the quaternion.
</summary>
            <returns>The squared length of the quaternion.</returns>
        </member>
        <member name="M:SlimDX.Quaternion.Length">
            <summary>
Calculates the length of the quaternion.
</summary>
            <returns>The length of the quaternion.</returns>
        </member>
        <member name="P:SlimDX.Quaternion.Angle">
            <summary>
Gets the angle of the quaternion. The quaternion must be normalized.
</summary>
        </member>
        <member name="P:SlimDX.Quaternion.Axis">
            <summary>
Gets the axis components of the quaternion. The quaternion must be normalized.
</summary>
        </member>
        <member name="P:SlimDX.Quaternion.IsIdentity">
            <summary>
Gets a value indicating whether this instance is an identity <see cref="T:SlimDX.Quaternion" />.
</summary>
        </member>
        <member name="P:SlimDX.Quaternion.Identity">
            <summary>
Gets the identity <see cref="T:SlimDX.Quaternion" /> (0, 0, 0, 1).
</summary>
        </member>
        <member name="M:SlimDX.Quaternion.#ctor(SlimDX.Vector3,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Quaternion" /> structure.
</summary>
            <param name="value">A <see cref="T:SlimDX.Vector3" /> containing the first three values of the quaternion.</param>
            <param name="w">The W component of the quaternion.</param>
        </member>
        <member name="M:SlimDX.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Quaternion" /> structure.
</summary>
            <param name="x">The X component of the quaternion.</param>
            <param name="y">The Y component of the quaternion.</param>
            <param name="z">The Z component of the quaternion.</param>
            <param name="w">The W component of the quaternion.</param>
        </member>
        <member name="F:SlimDX.Quaternion.W">
            <summary>
Gets or sets the W component of the quaternion.
</summary>
            <value>The W component of the quaternion.</value>
        </member>
        <member name="F:SlimDX.Quaternion.Z">
            <summary>
Gets or sets the Z component of the quaternion.
</summary>
            <value>The Z component of the quaternion.</value>
        </member>
        <member name="F:SlimDX.Quaternion.Y">
            <summary>
Gets or sets the Y component of the quaternion.
</summary>
            <value>The Y component of the quaternion.</value>
        </member>
        <member name="F:SlimDX.Quaternion.X">
            <summary>
Gets or sets the X component of the quaternion.
</summary>
            <value>The X component of the quaternion.</value>
        </member>
        <member name="T:SlimDX.Quaternion">
            <summary>
Defines a four dimensional mathematical quaternion.
</summary>
            <unmanaged>D3DXQUATERNION</unmanaged>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c></returns>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.QuaternionConverter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.QuaternionConverter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.QuaternionConverter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Quaternion" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Frame">
            <summary>Describes a transform frame in a transformation hierarchy.</summary>
            <unmanaged>D3DXFRAME</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.SoundBank.CueCount">
            <summary>
Get the number of sound cues in the sound bank.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.SoundBank.State">
            <summary>
Get a <see cref="T:SlimDX.XACT3.SoundBankState" /> value representing the current state of the sound bank.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.SoundBank.Stop(System.Int32,SlimDX.XACT3.StopFlags)">
            <summary>
Stop playback of a cue.
</summary>
            <param name="cueIndex">The index of the cue to stop.</param>
            <param name="flags">
                <see cref="T:SlimDX.XACT3.StopFlags" /> that specify how the cue is stopped.</param>
        </member>
        <member name="M:SlimDX.XACT3.SoundBank.Prepare(System.Int32,System.Int32)">
            <summary>
Prepare a cue for playback.
</summary>
            <param name="cueIndex">The index of the cue to prepare.</param>
            <param name="timeOffset">The time offset into the cue to start from, in milliseconds.</param>
            <returns>A <see cref="T:SlimDX.XACT3.Cue" /> object containing the newly prepared cue.</returns>
        </member>
        <member name="M:SlimDX.XACT3.SoundBank.Play(System.Int32,System.Int32)">
            <summary>
Play a cue.
</summary>
            <param name="cueIndex">The index of the cue to play.</param>
            <param name="timeOffset">The time offset into the cue to start from, in milliseconds.</param>
            <returns>A <see cref="T:SlimDX.XACT3.Cue" /> object containing the newly playing cue.</returns>
        </member>
        <member name="M:SlimDX.XACT3.SoundBank.GetCueProperties(System.Int32)">
            <summary>
Get the properties of a cue.
</summary>
            <param name="cueIndex">The index of the cue to get the properties of.</param>
            <returns>A <see cref="T:SlimDX.XACT3.CueProperties" /> object containing the properties of the cue.</returns>
        </member>
        <member name="M:SlimDX.XACT3.SoundBank.GetCueIndex(System.String)">
            <summary>
Get a sound cue index based on a string that represents the friendly name of the cue.
</summary>
            <param name="friendlyName">A string that contains the friendly name of the cue.</param>
            <returns>The index for the cue if it exists, otherwise -1.</returns>
        </member>
        <member name="T:SlimDX.XACT3.SoundBank">
            <summary>
Instantiate and manipulate XACT sound bank objects.
</summary>
            <unmanaged>IXACT3SoundBank</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.Cue.State">
            <summary>
Get a <see cref="T:SlimDX.XACT3.CueState" /> value representing the current state of the cue.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.Cue.Properties">
            <summary>
Gets a <see cref="T:SlimDX.XACT3.CueInstanceProperties" /> object that contains the properties of the cue instance.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.Cue.Stop(SlimDX.XACT3.StopFlags)">
            <summary>
Stop the cue.
</summary>
            <param name="flags">
                <see cref="T:SlimDX.XACT3.StopFlags" /> that specify how the cue is stopped.</param>
        </member>
        <member name="M:SlimDX.XACT3.Cue.SetVariable(System.Int32,System.Single)">
            <summary>
Set the value of a variable.
</summary>
            <param name="index">The index of the variable.</param>
            <param name="value">The new value of the variable.</param>
        </member>
        <member name="M:SlimDX.XACT3.Cue.Play">
            <summary>
Play the cue.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.Cue.Pause(System.Boolean)">
            <summary>
Pause playback of the cue.
</summary>
            <param name="pause">The action to take. If true, playback is paused, if false, playback is resumed.</param>
        </member>
        <member name="M:SlimDX.XACT3.Cue.GetVariableIndex(System.String)">
            <summary>
Get the corresponding index for a variable name string.
</summary>
            <param name="friendlyName">A string that contains the friendly name of the variable.</param>
            <returns>The index for the variable if it exists, otherwise -1.</returns>
        </member>
        <member name="M:SlimDX.XACT3.Cue.GetVariable(System.Int32)">
            <summary>
Get the value for a variable.
</summary>
            <param name="index">The index of the variable.</param>
            <returns>The value that is currently held by the variable.</returns>
        </member>
        <member name="P:SlimDX.XACT3.CueInstanceProperties.ActiveVariationProperties">
            <summary>
Gets the properties the current cue variation.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.CueInstanceProperties.CueProperties">
            <summary>
Gets the properties of a cue that are shared by all instances of the cue.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.CueInstanceProperties">
            <summary>
The properties of an active cue instance.
</summary>
            <unmanaged>XACT_CUE_INSTANCE_PROPERTIES</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.SoundVariationProperties.SoundProperties">
            <summary>
Gets the properties of the sound that the active variation references.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.SoundVariationProperties.VariationProperties">
            <summary>
Gets the properties of the currently active variation.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.SoundVariationProperties">
            <summary>
The properties of the sound variation that is currently active in a cue instance.
</summary>
            <unmanaged>XACT_SOUND_VARIATION_PROPERTIES</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.SoundProperties.Tracks">
            <summary>
Gets an array of tracks contained in this sound.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.SoundProperties.Volume">
            <summary>
Gets the current volume of the sound.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.SoundProperties.Pitch">
            <summary>
Gets the current pitch of the sound.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.SoundProperties.Priority">
            <summary>
Gets the priority that is assigned to this sound.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.SoundProperties.Category">
            <summary>
Gets the category that this sound belongs to.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.SoundProperties">
            <summary>
The properties for a sound that is referenced by the active variation.
</summary>
            <unmanaged>XACT_SOUND_PROPERTIES</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.TrackProperties.LoopCount">
            <summary>
Gets the current loop count on the track.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.TrackProperties.WaveVariation">
            <summary>
Gets the index of the currently active wave variation.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.TrackProperties.ChannelCount">
            <summary>
Gets the number of channels that are required to play the track.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.TrackProperties.VariationCount">
            <summary>
Gets the number of wave variations in the track.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.TrackProperties.Duration">
            <summary>
Gets the duration of the track in milliseconds.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.TrackProperties">
            <summary>
The properties of a track in an active sound variation in a cue instance.
</summary>
            <unmanaged>XACT_TRACK_PROPERTIES</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.VariationProperties.ShouldLinger">
            <summary>
Gets a value that indicates if the variation should linger.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.VariationProperties.VariableMax">
            <summary>
Gets the upper bound of the interactive variable that controls the variation.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.VariationProperties.VariableMin">
            <summary>
Gets the lower bound of the interactive variable that controls the variation.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.VariationProperties.Weight">
            <summary>
Gets the weight that is assigned to the variation. For non-interactive variations only.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.VariationProperties.Index">
            <summary>
Gets the index of the variation in the parent variation list.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.VariationProperties">
            <summary>
The properties for the variation that is currently active in a cue instance.
</summary>
            <unmanaged>XACT_VARIATION_PROPERTIES</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.Engine.FinalMixFormat">
            <summary>
Gets a <see cref="T:SlimDX.Multimedia.WaveFormatExtensible" /> object that represents the final mix format.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.Engine.RendererCount">
            <summary>
Gets the total number of audio rendering devices that are available in the system.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.Engine.Stop(System.Int32,SlimDX.XACT3.StopFlags)">
            <summary>
Stop a sound category.
</summary>
            <param name="category">Index of the category to stop, as returned by <see cref="M:SlimDX.XACT3.Engine.GetCategory(System.String)" />.</param>
            <param name="flags">
                <see cref="T:SlimDX.XACT3.StopFlags" /> that specify how the cetegory is stopped.</param>
        </member>
        <member name="M:SlimDX.XACT3.Engine.Shutdown">
            <summary>
Shut down the XACT engine and free any resources in use.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.Engine.SetVolume(System.Int32,System.Single)">
            <summary>
Set the volume of a sound category.
</summary>
            <param name="category">Index of the category for which to set the volume, as returned by <see cref="M:SlimDX.XACT3.Engine.GetCategory(System.String)" />.</param>
            <param name="volume">The volume level to set. This is a floating point scale where 0.0 means -96db, 1.0 means 0db and 2.0 means +6db.</param>
        </member>
        <member name="M:SlimDX.XACT3.Engine.SetGlobalVariable(System.Int32,System.Single)">
            <summary>
Set the value of a global variable.
</summary>
            <param name="index">The index of the global variable.</param>
            <param name="value">The new value of the global variable.</param>
        </member>
        <member name="M:SlimDX.XACT3.Engine.Pause(System.Int32,System.Boolean)">
            <summary>
Pause a sound category.
</summary>
            <param name="category">Index of the category to pause, as returned by <see cref="M:SlimDX.XACT3.Engine.GetCategory(System.String)" />.</param>
            <param name="pause">The action to take. If true, playback is paused, if false, playback is resumed.</param>
        </member>
        <member name="M:SlimDX.XACT3.Engine.Initialize(SlimDX.XACT3.RuntimeParameters)">
            <summary>
Initialize the XACT engine using common default settings.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.Engine.GetRendererDetails(System.Int32)">
            <summary>
Gets details about a specific renderer.
</summary>
            <param name="rendererIndex">Index of the renderer to retrieve information from.</param>
            <returns>A new <see cref="T:SlimDX.XACT3.RendererDetails" /> object that contains details of the renderer.</returns>
        </member>
        <member name="M:SlimDX.XACT3.Engine.GetGlobalVariableIndex(System.String)">
            <summary>
Get the corresponding index for a global variable name string.
</summary>
            <param name="friendlyName">A string that contains the friendly name of the global variable.</param>
            <returns>The index for the global variable if it exists, otherwise -1.</returns>
        </member>
        <member name="M:SlimDX.XACT3.Engine.GetGlobalVariable(System.Int32)">
            <summary>
Get the value for a global variable.
</summary>
            <param name="index">The index of the global variable.</param>
            <returns>The value that is currently held by the global variable.</returns>
        </member>
        <member name="M:SlimDX.XACT3.Engine.GetCategory(System.String)">
            <summary>
Get the sound category index that corresponds to a friendly name string.
</summary>
            <param name="friendlyName">A string describing the category's friendly name.</param>
            <returns>The category index for the friendly name if successful, otherwise -1.</returns>
        </member>
        <member name="M:SlimDX.XACT3.Engine.DoWork">
            <summary>
Performs periodic work that is required by the XACT engine. Typically this should be called every 30 to 100 milliseconds.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.Engine.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XACT3.Engine" /> class.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.RendererDetails.RendererId">
            <summary>
Gets the id of the renderer.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.RendererDetails.DisplayName">
            <summary>
Gets the name of the renderer.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.RendererDetails.IsDefault">
            <summary>
Gets a value that is true if this is the default audio renderer, otherwise false.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.RendererDetails">
            <summary>
Information about a particular renderer.
</summary>
            <unmanaged>XACT_RENDERER_DETAILS</unmanaged>
        </member>
        <member name="M:SlimDX.XAPO.BufferParameter.Equals(SlimDX.XAPO.BufferParameter@,SlimDX.XAPO.BufferParameter@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAPO.BufferParameter.Equals(SlimDX.XAPO.BufferParameter)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAPO.BufferParameter.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAPO.BufferParameter.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAPO.BufferParameter.op_Inequality(SlimDX.XAPO.BufferParameter,SlimDX.XAPO.BufferParameter)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAPO.BufferParameter.op_Equality(SlimDX.XAPO.BufferParameter,SlimDX.XAPO.BufferParameter)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAPO.LockParameter.Equals(SlimDX.XAPO.LockParameter@,SlimDX.XAPO.LockParameter@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAPO.LockParameter.Equals(SlimDX.XAPO.LockParameter)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAPO.LockParameter.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAPO.LockParameter.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAPO.LockParameter.op_Inequality(SlimDX.XAPO.LockParameter,SlimDX.XAPO.LockParameter)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAPO.LockParameter.op_Equality(SlimDX.XAPO.LockParameter,SlimDX.XAPO.LockParameter)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAPO.RegistrationProperties.Equals(SlimDX.XAPO.RegistrationProperties@,SlimDX.XAPO.RegistrationProperties@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAPO.RegistrationProperties.Equals(SlimDX.XAPO.RegistrationProperties)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAPO.RegistrationProperties.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAPO.RegistrationProperties.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAPO.RegistrationProperties.op_Inequality(SlimDX.XAPO.RegistrationProperties,SlimDX.XAPO.RegistrationProperties)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAPO.RegistrationProperties.op_Equality(SlimDX.XAPO.RegistrationProperties,SlimDX.XAPO.RegistrationProperties)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceSendDescriptor.Equals(SlimDX.XAudio2.VoiceSendDescriptor@,SlimDX.XAudio2.VoiceSendDescriptor@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceSendDescriptor.Equals(SlimDX.XAudio2.VoiceSendDescriptor)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceSendDescriptor.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceSendDescriptor.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceSendDescriptor.op_Inequality(SlimDX.XAudio2.VoiceSendDescriptor,SlimDX.XAudio2.VoiceSendDescriptor)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceSendDescriptor.op_Equality(SlimDX.XAudio2.VoiceSendDescriptor,SlimDX.XAudio2.VoiceSendDescriptor)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.XAudio2.VoiceSendDescriptor.Flags">
            <summary>
Gets or sets flags for the voice send target.
</summary>
        </member>
        <member name="P:SlimDX.XAudio2.VoiceSendDescriptor.OutputVoice">
            <summary>
Gets or sets the voice send target.
</summary>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceDetails.Equals(SlimDX.XAudio2.VoiceDetails@,SlimDX.XAudio2.VoiceDetails@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceDetails.Equals(SlimDX.XAudio2.VoiceDetails)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceDetails.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceDetails.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceDetails.op_Inequality(SlimDX.XAudio2.VoiceDetails,SlimDX.XAudio2.VoiceDetails)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.VoiceDetails.op_Equality(SlimDX.XAudio2.VoiceDetails,SlimDX.XAudio2.VoiceDetails)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.FilterParameters.Equals(SlimDX.XAudio2.FilterParameters@,SlimDX.XAudio2.FilterParameters@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.FilterParameters.Equals(SlimDX.XAudio2.FilterParameters)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.FilterParameters.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.FilterParameters.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.FilterParameters.op_Inequality(SlimDX.XAudio2.FilterParameters,SlimDX.XAudio2.FilterParameters)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.FilterParameters.op_Equality(SlimDX.XAudio2.FilterParameters,SlimDX.XAudio2.FilterParameters)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DebugConfiguration.Equals(SlimDX.XAudio2.DebugConfiguration@,SlimDX.XAudio2.DebugConfiguration@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DebugConfiguration.Equals(SlimDX.XAudio2.DebugConfiguration)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DebugConfiguration.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DebugConfiguration.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DebugConfiguration.op_Inequality(SlimDX.XAudio2.DebugConfiguration,SlimDX.XAudio2.DebugConfiguration)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DebugConfiguration.op_Equality(SlimDX.XAudio2.DebugConfiguration,SlimDX.XAudio2.DebugConfiguration)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.PerformanceData.Equals(SlimDX.XAudio2.PerformanceData,SlimDX.XAudio2.PerformanceData)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.PerformanceData.Equals(SlimDX.XAudio2.PerformanceData)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.PerformanceData.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.PerformanceData.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.PerformanceData.op_Inequality(SlimDX.XAudio2.PerformanceData,SlimDX.XAudio2.PerformanceData)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.PerformanceData.op_Equality(SlimDX.XAudio2.PerformanceData,SlimDX.XAudio2.PerformanceData)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.PerformanceData.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.XAudio2.PerformanceData" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DeviceDetails.Equals(SlimDX.XAudio2.DeviceDetails,SlimDX.XAudio2.DeviceDetails)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DeviceDetails.Equals(SlimDX.XAudio2.DeviceDetails)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DeviceDetails.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DeviceDetails.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DeviceDetails.op_Inequality(SlimDX.XAudio2.DeviceDetails,SlimDX.XAudio2.DeviceDetails)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DeviceDetails.op_Equality(SlimDX.XAudio2.DeviceDetails,SlimDX.XAudio2.DeviceDetails)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.XAudio2.DeviceDetails.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.XAudio2.DeviceDetails" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormatExtensible.Equals(SlimDX.Multimedia.WaveFormatExtensible,SlimDX.Multimedia.WaveFormatExtensible)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormatExtensible.Equals(SlimDX.Multimedia.WaveFormatExtensible)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormatExtensible.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormatExtensible.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormatExtensible.op_Inequality(SlimDX.Multimedia.WaveFormatExtensible,SlimDX.Multimedia.WaveFormatExtensible)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormatExtensible.op_Equality(SlimDX.Multimedia.WaveFormatExtensible,SlimDX.Multimedia.WaveFormatExtensible)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormatExtensible.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.Multimedia.WaveFormatExtensible" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormat.Equals(SlimDX.Multimedia.WaveFormat,SlimDX.Multimedia.WaveFormat)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormat.Equals(SlimDX.Multimedia.WaveFormat)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormat.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormat.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormat.op_Inequality(SlimDX.Multimedia.WaveFormat,SlimDX.Multimedia.WaveFormat)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormat.op_Equality(SlimDX.Multimedia.WaveFormat,SlimDX.Multimedia.WaveFormat)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Multimedia.WaveFormat.Clone">
            <summary>
Clones the instance and returns a new object containing the same values.
</summary>
            <returns>A new <see cref="T:SlimDX.Multimedia.WaveFormat" /> object containing the same values as the current instance.</returns>
        </member>
        <member name="T:SlimDX.Multimedia.Speakers">
            <summary>
Specifies possible speaker combinations for audio devices.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.SevenPointOneSurround">
            <summary>
A combination of speakers will be used that provides 7.1 surround sound output.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.FivePointOneSurround">
            <summary>
A combination of speakers will be used that provides 5.1 surround sound output.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.SevenPointOne">
            <summary>
A combination of speakers will be used that provides 7.1 sound output.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.FivePointOne">
            <summary>
A combination of speakers will be used that provides 5.1 sound output.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.FourPointOne">
            <summary>
A combination of speakers will be used that provides 4.1 sound output.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.Quadrophonic">
            <summary>
A combination of speakers will be used that provides quadrophonic sound output.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.Surround">
            <summary>
A combination of speakers will be used that provides surround sound output.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.TwoPointOne">
            <summary>
A combination of speakers will be used that provides 2.1 sound output.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.Stereo">
            <summary>
Two or more speakers will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.Mono">
            <summary>
A single speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.All">
            <summary>
All possible speakers will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.Reserved">
            <summary>
A reserved speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.TopBackRight">
            <summary>
A top back right speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.TopBackCenter">
            <summary>
A top back center speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.TopBackLeft">
            <summary>
A top back left speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.TopFrontRight">
            <summary>
A top front right speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.TopFrontCenter">
            <summary>
A top front center speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.TopFrontLeft">
            <summary>
A top front left speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.TopCenter">
            <summary>
A top center speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.SideRight">
            <summary>
A right side speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.SideLeft">
            <summary>
A left side speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.BackCenter">
            <summary>
A back center speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.FrontRightOfCenter">
            <summary>
A front right-of-center speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.FrontLeftOfCenter">
            <summary>
A front left-of-center speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.BackRight">
            <summary>
A back right speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.BackLeft">
            <summary>
A back left speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.LowFrequency">
            <summary>
A low frequency speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.FrontCenter">
            <summary>
A front center speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.FrontRight">
            <summary>
A front right speaker will be used.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.Speakers.FrontLeft">
            <summary>
A front left speaker will be used.
</summary>
        </member>
        <member name="T:SlimDX.Multimedia.UsagePage">
            <summary>
Represents possible usage page identifiers for human interface devices.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Msr">
            <summary>
Represents magnetic strip reading devices.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Scale">
            <summary>
Represents scale pages.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Barcode">
            <summary>
Represents bar code scanners.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.PowerPage3">
            <summary>
Represents power page 3.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.PowerPage2">
            <summary>
Represents power page 2.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.PowerPage1">
            <summary>
Represents power page 1.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.PowerPage0">
            <summary>
Represents power page 0.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.MonitorPage3">
            <summary>
Represents monitor page 3.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.MonitorPage2">
            <summary>
Represents monitor page 2.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.MonitorPage1">
            <summary>
Represents monitor page 1.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.MonitorPage0">
            <summary>
Represents monitor page 0.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Medical">
            <summary>
Represents medical instruments.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Alphanumeric">
            <summary>
Represents alphanumeric displays.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Unicode">
            <summary>
Represents Unicode devices.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Pid">
            <summary>
Represents physical interface devices.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Digitizer">
            <summary>
Represents digitizer controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Consumer">
            <summary>
Represents consumer controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Telephony">
            <summary>
Represents telephony controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Ordinal">
            <summary>
Represents ordinal controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Button">
            <summary>
Represents button controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Led">
            <summary>
Represents LED controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Keyboard">
            <summary>
Represents keyboard controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Game">
            <summary>
Represents games controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Sport">
            <summary>
Represents sports controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.VR">
            <summary>
Represents virtual reality controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Simulation">
            <summary>
Represents simulation controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Generic">
            <summary>
Represents generic desktop controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsagePage.Undefined">
            <summary>
Represents undefined devices.
</summary>
        </member>
        <member name="T:SlimDX.Multimedia.UsageId">
            <summary>
Represents possible usage identifiers for human interface devices.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SimulationThrottle">
            <summary>
Represents a throttle for a simulation device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SimulationRudder">
            <summary>
Represents a rudder for a simulation device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.TelephonyProgrammableButton">
            <summary>
Represents programmable buttons for a telephony device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.TelephonyKeypad">
            <summary>
Represents a keypad telephony device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.TelephonyHeadset">
            <summary>
Represents a headset telephony device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.TelephonyHandset">
            <summary>
Represents a handset telephony device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.TelephonyMessageControls">
            <summary>
Represents message controls for a telephony device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.TelephonyAnsweringMachine">
            <summary>
Represents an answering machine telephony device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.TelephonyPhone">
            <summary>
Represents a phone telephony device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedGenericIndicator">
            <summary>
Represents a generic indicator LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedAmber">
            <summary>
Represents an amber LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedGreen">
            <summary>
Represents a green LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedRed">
            <summary>
Represents a red LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedIndicatorColor">
            <summary>
Represents an indicator color LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedFastBlinkOffTime">
            <summary>
Represents a fast-blink-off-time LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedFastBlinkOnTime">
            <summary>
Represents a fast-blink-on-time LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSlowBlinkOffTime">
            <summary>
Represents a slow-blink-off-time LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSlowBlinkOnTime">
            <summary>
Represents a slow-blink-on-time LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedFlashOnTime">
            <summary>
Represents a flash-on-time LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedIndicatorOff">
            <summary>
Represents an indicator off LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedIndicatorFastBlink">
            <summary>
Represents an indicator fast blink LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedIndicatorSlowBlink">
            <summary>
Represents an indicator slow blink LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedIndicatorFlash">
            <summary>
Represents an indicator flash LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedIndicatorOn">
            <summary>
Represents an indicator on LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedMultimodeIndicator">
            <summary>
Represents a nmultimode indicator LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedInUseIndicator">
            <summary>
Represents an in-use indicator LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSelectedIndicator">
            <summary>
Represents a selected indicator LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedError">
            <summary>
Represents an error LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedRecord">
            <summary>
Represents a record LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedPause">
            <summary>
Represents a pause LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedPlay">
            <summary>
Represents a play LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedFastForward">
            <summary>
Represents a fast forward LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedRewind">
            <summary>
Represents a rewind LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedStop">
            <summary>
Represents a stop LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedReverse">
            <summary>
Represents a reverse LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedForward">
            <summary>
Represents a forward LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedRemote">
            <summary>
Represents a remote LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedPaperJam">
            <summary>
Represents a paper jam LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedPaperOut">
            <summary>
Represents a paper out LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedReady">
            <summary>
Represents a ready LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedBusy">
            <summary>
Represents a busy LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedOffline">
            <summary>
Represents an offline LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedOnline">
            <summary>
Represents an onlineLED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedCameraOff">
            <summary>
Represents a camera off LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedCameraOn">
            <summary>
Represents a camera on LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedStandby">
            <summary>
Represents a standby LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedConference">
            <summary>
Represents a conference LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedCallPickup">
            <summary>
Represents a call pickup LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSendCalls">
            <summary>
Represents a send calls LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedNightMode">
            <summary>
Represents a night mode LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedCoverage">
            <summary>
Represents a coverage LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedMicrophone">
            <summary>
Represents a microphone LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedHold">
            <summary>
Represents a hold LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedHeadset">
            <summary>
Represents a headset LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSpeaker">
            <summary>
Represents a speaker LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedBatteryLow">
            <summary>
Represents a battery low LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedBatteryOk">
            <summary>
Represents a battery OK LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedBatteryOperation">
            <summary>
Represents a battery operation LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedDataMode">
            <summary>
Represents a data mode LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedMessageWaiting">
            <summary>
Represents a message waiting LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedRing">
            <summary>
Represents a ring LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedOffHook">
            <summary>
Represents an off-the-hook LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedRecordingFormatDet">
            <summary>
Represents a recording format LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedClv">
            <summary>
Represents a CLV LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedCav">
            <summary>
Represents a CAV LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSpinning">
            <summary>
Represents a spinning LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSamplingRateDirect">
            <summary>
Represents a direct sampling rate LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedStereo">
            <summary>
Represents a stereo LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedRepeat">
            <summary>
Represents a repeat LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSurroundFieldOn">
            <summary>
Represents a surround field on LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedSoundFieldOn">
            <summary>
Represents a sound field on LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedEqualizerEnable">
            <summary>
Represents an equalizer enable LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedLowCutFilter">
            <summary>
Represents a low cut filter LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedHighCutFilter">
            <summary>
Represents a high cut filter LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedToneEnable">
            <summary>
Represents a tone enable LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedMute">
            <summary>
Represents a mute LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedDoNotDisturb">
            <summary>
Represents a do not disturb LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedShift">
            <summary>
Represents a shift LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedPower">
            <summary>
Represents a power LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedKana">
            <summary>
Represents a kana LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedCompose">
            <summary>
Represents a compose LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedScrollLock">
            <summary>
Represents a scroll lock LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedCapsLock">
            <summary>
Represents a number lock LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.LedNumLock">
            <summary>
Represents a number lock LED.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardPrintScreen">
            <summary>
Represents a keyboard that provides a print screen key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardDelete">
            <summary>
Represents a keyboard that provides a delete key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardEscape">
            <summary>
Represents a keyboard that provides an escape key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardReturn">
            <summary>
Represents a keyboard that provides a return key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardF12">
            <summary>
Represents a keyboard that provides an F12 key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardF1">
            <summary>
Represents a keyboard that provides an F1 key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardCapsLock">
            <summary>
Represents a keyboard that provides a caps lock key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardNumLock">
            <summary>
Represents a keyboard that provides a number lock key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardScrollLock">
            <summary>
Represents a keyboard that provides a scroll lock key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardRightGui">
            <summary>
Represents a keyboard that provides a right GUI key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardRightAlt">
            <summary>
Represents a keyboard that provides a right alt key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardRightShift">
            <summary>
Represents a keyboard that provides a right shift key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardRightControl">
            <summary>
Represents a keyboard that provides a right control key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardLeftGui">
            <summary>
Represents a keyboard that provides a left GUI key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardLeftAlt">
            <summary>
Represents a keyboard that provides a left alt key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardLeftShift">
            <summary>
Represents a keyboard that provides a left shift key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardLeftControl">
            <summary>
Represents a keyboard that provides a left control key.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Keyboard0">
            <summary>
Represents a generic keyboard device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Keyboard1">
            <summary>
Represents a generic keyboard device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardzZ">
            <summary>
Represents a device that provides keyboard alpha events.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardaA">
            <summary>
Represents a device that provides keyboard alpha events.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardUndefined">
            <summary>
Represents a device that provides keyboard undefined events.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardPostFail">
            <summary>
Represents a device that provides keyboard post fail events.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardRollover">
            <summary>
Represents a device that provides keyboard rollover events.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.KeyboardNoEvent">
            <summary>
Represents a device that provides keyboard events.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlMenuDown">
            <summary>
Represents a device that controls menu down.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlMenuUp">
            <summary>
Represents a device that controls menu up.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlMenuLeft">
            <summary>
Represents a device that controls menu left.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlMenuRight">
            <summary>
Represents a device that controls menu right.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlMenuSelect">
            <summary>
Represents a device that controls menu select.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlMenuExit">
            <summary>
Represents a device that controls menu exit.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlHelpMenu">
            <summary>
Represents a device that controls system help menus.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlApplicationMenu">
            <summary>
Represents a device that controls system application menus.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlMainMenu">
            <summary>
Represents a device that controls system menus.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlContextMenu">
            <summary>
Represents a device that controls system context menus.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlWake">
            <summary>
Represents a device that controls system wake.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlSleep">
            <summary>
Represents a device that controls system sleep.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControlPower">
            <summary>
Represents a device that controls system power.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Vno">
            <summary>
Represents a device that provides VNO controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.VbrZ">
            <summary>
Represents a device that provides VBRZ controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.VbrY">
            <summary>
Represents a device that provides VBRY controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.VbrX">
            <summary>
Represents a device that provides VBRX controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.VZ">
            <summary>
Represents a device that provides VZ controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.VY">
            <summary>
Represents a device that provides VY controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.VX">
            <summary>
Represents a device that provides VX controls.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.MotionWakeup">
            <summary>
Represents a device that provides wakeup on motion support.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.ByteCount">
            <summary>
Represents a device that maintains a byte count.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.CountedBuffer">
            <summary>
Represents a device that maintains a counted buffer.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.HatSwitch">
            <summary>
Represents a device that provides a hat switch.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Wheel">
            <summary>
Represents a wheel device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Dial">
            <summary>
Represents a device that provides a dial.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Slider">
            <summary>
Represents a device that provides a slider.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.RelativeZ">
            <summary>
Represents a device that provides relative Z coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.RelativeY">
            <summary>
Represents a device that provides relative Y coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.RelativeX">
            <summary>
Represents a device that provides relative X coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Z">
            <summary>
Represents a device that provides Z coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Y">
            <summary>
Represents a device that provides Y coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.X">
            <summary>
Represents a device that provides X coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.SystemControl">
            <summary>
Represents a system control device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Keypad">
            <summary>
Represents a keypad device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Keyboard">
            <summary>
Represents a keyboard device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Gamepad">
            <summary>
Represents a gamepad device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Joystick">
            <summary>
Represents a joystick device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Mouse">
            <summary>
Represents a mouse device.
</summary>
        </member>
        <member name="F:SlimDX.Multimedia.UsageId.Pointer">
            <summary>
Represents a pointer device.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.WaveState">
            <summary>
Flags that indicate the state of a wave.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.PrepareFailed">
            <summary>
Indicates that wave preparation failed.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.InUse">
            <summary>
Indicates that the wave is in use.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.Paused">
            <summary>
The wave is paused.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.Stopped">
            <summary>
The wave is stopped.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.Stopping">
            <summary>
The wave is stopping.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.Playing">
            <summary>
The wave is playing, but can be paused.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.Prepared">
            <summary>
The wave is prepared, but not yet played.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.Preparing">
            <summary>
The wave is preparing to play.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveState.Created">
            <summary>
The wave is created, but nothing else.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.WaveBankState">
            <summary>
Flags that indicate the state of a sound bank.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveBankState.Prepared">
            <summary>
The wave is prepared for use by a cue instance.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveBankState.InUse">
            <summary>
Indicates that the wave bank is referenced by at least one valid cue instance or other client.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.WaveBankMiniFormatTag">
            <summary>
The format types of the wave bank.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveBankMiniFormatTag.Wma">
            <summary>
WMA format.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveBankMiniFormatTag.Adpcm">
            <summary>
ADPCM wave format.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveBankMiniFormatTag.Xma">
            <summary>
XMA format.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.WaveBankMiniFormatTag.Pcm">
            <summary>
PCM wave format.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.StopFlags">
            <summary>
Flags that affect how playback is stopped.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.StopFlags.Immediate">
            <summary>
Stops playback immediately.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.StopFlags.Release">
            <summary>
Plays a sound to completion, then stops after the release (or tail) phase of a song is played.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.SoundBankState">
            <summary>
Flags that indicate the state of a sound bank.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.SoundBankState.InUse">
            <summary>
Indicates that the sound bank is referenced by at least one valid cue instance or other client.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.CueState">
            <summary>
Flags that indicate the state of a cue.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.CueState.Paused">
            <summary>
The cue is paused.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.CueState.Stopped">
            <summary>
The cue is stopped.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.CueState.Stopping">
            <summary>
The cue is stopping.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.CueState.Playing">
            <summary>
The cue is playing, but can be paused.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.CueState.Prepared">
            <summary>
The cue is prepared, but not yet played.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.CueState.Preparing">
            <summary>
The cue is preparing to play.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.CueState.Created">
            <summary>
The cue is created, but nothing else.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.ContentPreparationFlags">
            <summary>
Flags that affect content wave preparation.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.ContentPreparationFlags.UnitsSamples">
            <summary>
Indicates that the units that are passed in are in samples.
</summary>
        </member>
        <member name="F:SlimDX.XACT3.ContentPreparationFlags.UnitsMs">
            <summary>
Indicates that the units that are passed in are measured in milliseconds.
</summary>
        </member>
        <member name="M:SlimDX.XACT3.XACT3Exception.#ctor(SlimDX.Result)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XACT3.XACT3Exception" /> class.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.XACT3.XACT3Exception.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XACT3.XACT3Exception" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.XACT3.XACT3Exception.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XACT3.XACT3Exception" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.XACT3.XACT3Exception.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XACT3.XACT3Exception" /> class.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.XACT3Exception">
            <summary>
Represents errors that occur in the XACT3 subsystem.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.WetDryMixMin">
            <summary>
Minimum ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.WetDryMixMax">
            <summary>
Maximum ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.WetDryMixDefault">
            <summary>
Default ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.WaveformTriangle">
            <summary>
Triangle waveform shape of the LFO.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.WaveformSin">
            <summary>
Sine waveform shape of the LFO.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.WaveformDefault">
            <summary>
Default waveform shape of the LFO. By default, the waveform is a sine.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.PhaseZero">
            <summary>
Zero phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.PhaseNegative90">
            <summary>
Negative 90 phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.PhaseNegative180">
            <summary>
Negative 180 phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.PhaseMin">
            <summary>
Minimum phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.PhaseMax">
            <summary>
Maximum phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.PhaseDefault">
            <summary>
Default phase differential between left and right LFOs. The default value is Phase90.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.Phase90">
            <summary>
Positive 90 phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.Phase180">
            <summary>
Positive 180 phase differential between left and right LFOs.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.FrequencyMin">
            <summary>
Minimum frequency of the LFO.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.FrequencyMax">
            <summary>
Maximum frequency of the LFO.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.FrequencyDefault">
            <summary>
Default frequency of the LFO. The default value is 1.1. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.FeedbackMin">
            <summary>
Minimum percentage of output signal to feed back into the effect's input.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.FeedbackMax">
            <summary>
Maximum percentage of output signal to feed back into the effect's input.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.FeedbackDefault">
            <summary>
Default percentage of output signal to feed back into the effect's input. The default value is 25.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.DepthMin">
            <summary>
Minimum percentage by which the delay time is modulated by the low-frequency oscillator, in hundredths of a percentage point.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.DepthMax">
            <summary>
Maximum percentage by which the delay time is modulated by the low-frequency oscillator, in hundredths of a percentage point.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.DepthDefault">
            <summary>
Default percentage by which the delay time is modulated by the low-frequency oscillator, in hundredths of a percentage point. The default value is 10.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.DelayMin">
            <summary>
Minimum number of milliseconds the input is delayed before it is played back. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.DelayMax">
            <summary>
Maximum number of milliseconds the input is delayed before it is played back. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.ChorusEffect.DelayDefault">
            <summary>
Default number of milliseconds the input is delayed before it is played back. The default value is 50. 
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ChorusEffect.WetDryMix">
            <summary>
Ratio of wet (processed) signal to dry (unprocessed) signal.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ChorusEffect.Waveform">
            <summary>
Waveform shape of the LFO.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ChorusEffect.Phase">
            <summary>
Phase differential between left and right LFOs.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ChorusEffect.Frequency">
            <summary>
Frequency of the LFO.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ChorusEffect.Feedback">
            <summary>
Percentage of output signal to feed back into the effect's input.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ChorusEffect.Depth">
            <summary>
Percentage by which the delay time is modulated by the low-frequency oscillator, in hundredths of a percentage point.
</summary>
        </member>
        <member name="P:SlimDX.DirectSound.ChorusEffect.Delay">
            <summary>
Number of milliseconds the input is delayed before it is played back.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.ChorusEffect">
            <summary>
The SoundEffectChorus object is used to set and retrieve effect parameters on a buffer that supports chorus.
</summary>
            <unmanaged>IDirectSoundFXChorus</unmanaged>
        </member>
        <member name="T:SlimDX.DirectSound.Volume">
            <summary>
Predefined audio volume attenuation values.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.Volume.Maximum">
            <summary>
Represents the original, unadjusted volume of the stream.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.Volume.Minimum">
            <summary>
Indicates an audio volume attenuated by 100 dB, which, for all practical purposes, is silence.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.PlayFlags">
            <summary>
Flags specifying the play behavior of the buffer.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.PlayFlags.TerminateByPriority">
            <summary>
If the hardware has no available voices, a currently playing buffer will be stopped to make room for the new buffer. 
The buffer prematurely terminated will be the one with the lowest priority as set by the priority parameter passed to SecondarySoundBuffer::Play for the buffer.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.PlayFlags.TerminateByDistance">
            <summary>
If the hardware has no available voices, a currently playing buffer will be stopped to make room for the new buffer. 
The buffer prematurely terminated will be selected from buffers that have the buffer's BufferFlags::Mute3DAtMaxDistance flag set and are beyond their maximum distance. If there are no such buffers, the method fails.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.PlayFlags.TerminateByTime">
            <summary>
If the hardware has no available voices, a currently playing nonlooping buffer will be stopped to make room for the new buffer. 
The buffer prematurely terminated is the one with the least time left to play.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.PlayFlags.Software">
            <summary>
Play this voice in a software buffer only.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.PlayFlags.Hardware">
            <summary>
Play this voice in a hardware buffer only.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.PlayFlags.Looping">
            <summary>
Play continues until explicitly stopped. This flag must be set when playing a primary buffer.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.PlayFlags.None">
            <summary />
        </member>
        <member name="T:SlimDX.DirectSound.I3DL2ReverbPreset">
            <summary>
Values that specify a standard reverberation preset. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Plate">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.LargeHall">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.MediumHall">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.LargeRoom">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.MediumRoom">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.SmallRoom">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Underwater">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.SewerPipe">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.ParkingLot">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Plain">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Quarry">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Mountains">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.City">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Forest">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Alley">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.StoneCorridor">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Hallway">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.CarpetedHallway">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Hangar">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Arena">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Cave">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.ConcertHall">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Auditorium">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.StoneRoom">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.LivingRoom">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Bathroom">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Room">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.PaddedCell">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Generic">
            <summary />
        </member>
        <member name="F:SlimDX.DirectSound.I3DL2ReverbPreset.Default">
            <summary />
        </member>
        <member name="T:SlimDX.DirectSound.SpeakerGeometry">
            <summary>
Various speaker configurations.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerGeometry.Maximum">
            <summary>
The speakers are directed over an arc of 180 degrees.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerGeometry.Wide">
            <summary>
The speakers are directed over an arc of 20 degrees.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerGeometry.Narrow">
            <summary>
The speakers are directed over an arc of 10 degrees.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerGeometry.Minimum">
            <summary>
The speakers are directed over an arc of 5 degrees.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.SevenPointOneWide">
            <summary>
same as SevenPointOne
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.SevenPointOneSurround">
            <summary>
correct 7.1 Home Theater setting
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.SevenPointOne">
            <summary>
obsolete 7.1 setting
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.FivePointOne">
            <summary>
obsolete 5.1 setting
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.Surround">
            <summary>
The audio is played through surround speakers.
This specifies a four-channel PCM format in which the channels are 
mapped to left, right, center, and back speakers.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.Stereo">
            <summary>
The audio is played through stereo speakers (default value).
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.Quadrophonic">
            <summary>
The audio is played through quadraphonic speakers.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.Mono">
            <summary>
The audio is played through a single speaker.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.Headphone">
            <summary>
The audio is played through (stereo) headphones.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SpeakerConfiguration.DirectOut">
            <summary>
The audio is passed through directly, without being configured for 
speakers. This specifies a speakerless configuration in which the 
channels in the playback stream from the application are output 
directly to the audio adapter without being interpreted as speaker 
positions. However, the input stream can still be modified by 
sample-rate conversion, attenuation, filtering, and other types of 
processing that require no assumptions about the assignment of speakers 
to channels.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.SoundEffectResult">
            <summary>
Indicates the result of the attempt to set an effect in the buffer. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundEffectResult.Unknown">
            <summary>
Effect is not registered on the system, and the method failed as a result.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundEffectResult.Failed">
            <summary>
No effect was created because resources weren't available.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundEffectResult.Unallocated">
            <summary>
Effect has not yet been assigned to hardware or software. 
This value is returned if the buffer was created with the BufferFlags::Defer flag in <see cref="T:SlimDX.DirectSound.SoundBufferDescription" /> Flags.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundEffectResult.LocatedInSoftware">
            <summary>
Effect is instantiated in software.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundEffectResult.LocatedInHardware">
            <summary>
Effect is instantiated in hardware.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.SoundEffectResult.Present">
            <summary>
Effect is available but was not created because one of the other effects requested could not be created. 
If any of the effects requested cannot be created, none of them are, and the call fails.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.Mode3D">
            <summary>
The 3-D sound processing mode to be set.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.Mode3D.Disable">
            <summary>
Processing of 3D sound is disabled. The sound seems to originate from the center of the listener's head.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.Mode3D.HeadRelative">
            <summary>
Sound parameters (position, velocity, and orientation) are relative to the listener's parameters. 
In this mode, the absolute parameters of the sound are updated automatically as the listener's parameters change, so that the relative parameters remain constant.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.Mode3D.Normal">
            <summary>
Normal processing. This is the default mode.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.LockFlags">
            <summary>
Various sound buffer locking flags.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.LockFlags.EntireBuffer">
            <summary>
Lock the entire buffer.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.LockFlags.FromWriteCursor">
            <summary>
Start the lock at the write cursor.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.CooperativeLevel">
            <summary>
Values specifying the cooperative level of the device.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CooperativeLevel.WritePrimary">
            <summary>
Sets the write-primary level. The application has write access to the primary buffer. No secondary buffers can be played. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CooperativeLevel.Priority">
            <summary>
Sets the priority level.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CooperativeLevel.Normal">
            <summary>
Sets the normal level. 
This level has the smoothest multitasking and resource-sharing behavior, 
but because it does not allow the primary buffer format to change, output is restricted to the default 8-bit format.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.CaptureEffectResult">
            <summary>
Return values for Capture effects.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CaptureEffectResult.LocatedInSoftware">
            <summary>
Effect is instantiated in software.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.CaptureEffectResult.LocatedInHardware">
            <summary>
Effect is instantiated in hardware.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.BufferStatus">
            <summary>
Flags specifying the status of the buffer.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferStatus.Terminated">
            <summary>
The buffer was prematurely terminated by the voice manager and is not playing. 
Set only for buffers created with the BufferFlags::Defer flag.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferStatus.Software">
            <summary>
The buffer is playing in software. Set only for buffers created with the BufferFlags::Defer flag.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferStatus.Hardware">
            <summary>
The buffer is playing in hardware. Set only for buffers created with the BufferFlags::Defer flag.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferStatus.Looping">
            <summary>
The buffer is being looped. If this value is not set, the buffer will stop when it reaches the end of the sound data. 
This value is returned only in combination with BufferStatus::Playing.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferStatus.BufferLost">
            <summary>
The buffer is lost and must be restored before it can be played or locked.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferStatus.Playing">
            <summary>
The buffer is playing. If this value is not set, the buffer is stopped.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.BufferFlags">
            <summary>
Flags specifying the capabilities of the buffer.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.Defer">
            <summary>
The buffer can be assigned to a hardware or software resource at play time.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.Mute3DAtMaxDistance">
            <summary>
The sound is reduced to silence at the maximum distance. 
The buffer will stop playing when the maximum distance is exceeded, so that processor time is not wasted. 
Applies only to software buffers.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.GetCurrentPosition2">
            <summary>
The buffer uses the new behavior of the play cursor when retrieving the current position.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.GlobalFocus">
            <summary>
The buffer is a global sound buffer. 
With this flag set, an application using DirectSound can continue to play its buffers if the user switches focus to another application, 
even if the new application uses DirectSound.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.StickyFocus">
            <summary>
The buffer has sticky focus. 
If the user switches to another application not using DirectSound, the buffer is still audible. 
However, if the user switches to another DirectSound application, the buffer is muted.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.ControlEffects">
            <summary>
The buffer supports effects processing.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.ControlPositionNotify">
            <summary>
The buffer has position notification capability. 
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.ControlVolume">
            <summary>
The buffer has volume control capability.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.ControlPan">
            <summary>
The buffer has pan control capability.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.ControlFrequency">
            <summary>
The buffer has frequency control capability.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.Control3D">
            <summary>
The buffer has 3D control capability.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.Software">
            <summary>
The buffer is in software memory and uses software mixing.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.Hardware">
            <summary>
The buffer uses hardware mixing.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.Static">
            <summary>
The buffer is in on-board hardware memory.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.BufferFlags.PrimaryBuffer">
            <summary>
The buffer is a primary buffer.
</summary>
        </member>
        <member name="T:SlimDX.DirectSound.AcousticEchoCancelMode">
            <summary>
Values indicating the acoustic echo cancellation operation mode.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.AcousticEchoCancelMode.FullDuplex">
            <summary>
The effect is running in full duplex mode.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.AcousticEchoCancelMode.HalfDuplex">
            <summary>
The effect is running in half duplex mode. Not presently supported.
</summary>
        </member>
        <member name="F:SlimDX.DirectSound.AcousticEchoCancelMode.PassThrough">
            <summary>
The effect is passing capture and render data through without modifying it.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.InputLayout.#ctor(SlimDX.Direct3D10.Device,SlimDX.D3DCompiler.ShaderSignature,SlimDX.Direct3D10.InputElement[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D10.InputLayout" /> object to describe the
input-buffer data for the input-assembler stage.
</summary>
            <unmanaged>ID3D10Device::CreateInputLayout</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.InputElement.AppendAligned">
            <summary>
Returns a value that can be used for the offset parameter of an InputElement to indicate that the element
should be aligned directly after the previous element, including any packing if neccessary.
</summary>
            <returns>A value used to align input elements.</returns>
            <unmanaged>D3D10_APPEND_ALIGNED_ELEMENT</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexBufferBinding.Equals(SlimDX.Direct3D10.VertexBufferBinding@,SlimDX.Direct3D10.VertexBufferBinding@)">
            <summary>
Returns a value indicating whether the two VertexBufferBindings are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexBufferBinding.Equals(SlimDX.Direct3D10.VertexBufferBinding)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D10.VertexBufferBinding" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexBufferBinding.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexBufferBinding.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexBufferBinding.op_Inequality(SlimDX.Direct3D10.VertexBufferBinding,SlimDX.Direct3D10.VertexBufferBinding)">
            <summary>
Tests for inequality between two VertexBufferBindings.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexBufferBinding.op_Equality(SlimDX.Direct3D10.VertexBufferBinding,SlimDX.Direct3D10.VertexBufferBinding)">
            <summary>
Tests for equality between two VertexBufferBindings.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.VertexBufferBinding.#ctor(SlimDX.Direct3D10.Buffer,System.Int32,System.Int32)">
            <summary>
Constructs a new VertexBufferBinding object.
</summary>
            <param name="buffer">The buffer being bound.</param>
            <param name="stride">The stride between vertex element (in bytes).</param>
            <param name="offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SlimDX.Direct3D10.VertexBufferBinding.Offset">
            <summary>
Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.VertexBufferBinding.Stride">
            <summary>
Gets or sets the stride between vertex elements in the buffer (in bytes).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.VertexBufferBinding.Buffer">
            <summary>
Gets or sets the buffer being bound.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.VertexBufferBinding">
            <summary>
Properties defining the way a buffer (containing vertex data) is bound
to the pipeline for rendering.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.Buffer.Unmap">
            <summary>
Unmaps the buffer.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.Buffer.Map(SlimDX.Direct3D10.MapMode,SlimDX.Direct3D10.MapFlags)">
            <summary>
Maps the buffer, providing CPU access to its contents.
</summary>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU
is busy.</param>
            <returns>A data stream containing the mapped data. This data stream is invalidated
when the buffer is unmapped.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Buffer.#ctor(SlimDX.Direct3D10.Device,SlimDX.DataStream,System.Int32,SlimDX.Direct3D10.ResourceUsage,SlimDX.Direct3D10.BindFlags,SlimDX.Direct3D10.CpuAccessFlags,SlimDX.Direct3D10.ResourceOptionFlags)">
            <summary>
Constructs a new Buffer object.
</summary>
            <param name="device">The device to associate the buffer with.</param>
            <param name="data">Initial data to fill the buffer with on creation.</param>
            <param name="sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name="usage">Identifies the usage pattern for the buffer.</param>
            <param name="bindFlags">Specifies how the buffer will be bound to the pipeline.</param>
            <param name="accessFlags">Specifies how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Specifies miscellaneous resource options.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Buffer.#ctor(SlimDX.Direct3D10.Device,System.Int32,SlimDX.Direct3D10.ResourceUsage,SlimDX.Direct3D10.BindFlags,SlimDX.Direct3D10.CpuAccessFlags,SlimDX.Direct3D10.ResourceOptionFlags)">
            <summary>
Constructs a new Buffer object.
</summary>
            <param name="device">The device to associate the buffer with.</param>
            <param name="sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name="usage">Identifies the usage pattern for the buffer.</param>
            <param name="bindFlags">Specifies how the buffer will be bound to the pipeline.</param>
            <param name="accessFlags">Specifies how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Specifies miscellaneous resource options.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Buffer.#ctor(SlimDX.Direct3D10.Device,SlimDX.DataStream,SlimDX.Direct3D10.BufferDescription)">
            <summary>
Constructs a new Buffer object.
</summary>
            <param name="device">The device to associate the buffer with.</param>
            <param name="data">Initial data to fill the buffer with on creation.</param>
            <param name="description">The description of the buffer.</param>
        </member>
        <member name="M:SlimDX.Direct3D10.Buffer.#ctor(SlimDX.Direct3D10.Device,SlimDX.Direct3D10.BufferDescription)">
            <summary>
Constructs a new Buffer object.
</summary>
            <param name="device">The device to associate the buffer with.</param>
            <param name="description">The description of the buffer.</param>
        </member>
        <member name="P:SlimDX.Direct3D10.Buffer.Description">
            <summary>
Gets the buffer's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Buffer">
            <summary>
A buffer resource. A buffer is a sequential collection of typed data elements,
typically used to contain vertex, index or shader constant data.
</summary>
            <unmanaged>ID3D10Buffer</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.Resource.CalculateSubresourceIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
Calculates a subresource index.
</summary>
            <param name="mipSlice">The index of the desired mip slice.</param>
            <param name="arraySlice">The index of the desired array slice.</param>
            <param name="mipLevels">The total number of mip levels.</param>
            <returns>The subresource index (equivalent to mipSlice + (arraySlice * mipLevels)).</returns>
        </member>
        <member name="P:SlimDX.Direct3D10.Resource.Dimension">
            <summary>
Gets the resource's dimension (type).
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.Resource.EvictionPriority">
            <summary>
Gets or sets the resource's eviction priority.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D10.Resource.FromSwapChain``1(SlimDX.DXGI.SwapChain,System.Int32)">
            <summary>
Gets a swap chain back buffer.
</summary>
            <typeparam name="T">The type of the buffer.</typeparam>
            <param name="swapChain">The swap chain to get the buffer from.</param>
            <param name="index">The index of the desired buffer.</param>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.Resource.AsSurface">
            <summary>
Returns a DXGI Surface for this resource.
</summary>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="T:SlimDX.Direct3D10.Resource">
            <summary>
A resource object.
</summary>
            <unmanaged>ID3D10Resource</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D10.ResourceRegion.Equals(SlimDX.Direct3D10.ResourceRegion@,SlimDX.Direct3D10.ResourceRegion@)">
            <summary>
Returns a value indicating whether the two ResourceRegions are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ResourceRegion.Equals(SlimDX.Direct3D10.ResourceRegion)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D10.ResourceRegion" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ResourceRegion.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ResourceRegion.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ResourceRegion.op_Inequality(SlimDX.Direct3D10.ResourceRegion,SlimDX.Direct3D10.ResourceRegion)">
            <summary>
Tests for inequality between two ResourceRegions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D10.ResourceRegion.op_Equality(SlimDX.Direct3D10.ResourceRegion,SlimDX.Direct3D10.ResourceRegion)">
            <summary>
Tests for equality between two ResourceRegions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D10.ResourceRegion.Back">
            <summary>
Gets or sets the back boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ResourceRegion.Bottom">
            <summary>
Gets or sets the bottom boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ResourceRegion.Right">
            <summary>
Gets or sets the right boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ResourceRegion.Front">
            <summary>
Gets or sets the front boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ResourceRegion.Top">
            <summary>
Gets or sets the top boundary of the region.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.ResourceRegion.Left">
            <summary>
Gets or sets the left boundary of the region.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.ResourceRegion">
            <summary>
Represents a 3D region of a resource's data.
</summary>
            <unmanaged>D3D10_BOX</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.Surface.Unmap">
            <summary>
Relinquishes access to the surface data.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Surface.Map(SlimDX.DXGI.MapFlags)">
            <summary>
Acquires access to the surface data.
</summary>
            <param name="flags">Flags specifying CPU access permissions.</param>
            <returns>A <see cref="T:SlimDX.DataRectangle" /> for accessing the mapped data, or <c>null</c> on failure.</returns>.
</member>
        <member name="P:SlimDX.DXGI.Surface.Description">
            <summary>
Gets the surface's description.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.Surface.FromSwapChain(SlimDX.DXGI.SwapChain,System.Int32)">
            <summary>
Gets a swap chain back buffer.
</summary>
            <param name="swapChain">The swap chain to get the buffer from.</param>
            <param name="index">The index of the desired buffer.</param>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="T:SlimDX.DXGI.Surface">
            <summary>
A <see cref="T:SlimDX.DXGI.Surface" /> implements methods for image-data objects.
</summary>
            <unmanaged>IDXGISurface</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.SwapChain.Present(System.Int32,SlimDX.DXGI.PresentFlags)">
            <summary>
Presents a rendered image to the attached output.
</summary>
            <param name="syncInterval">Specified how to synchronize the presentation with the vertical blank interrupt. 0
indicates that presentation should occur immediately, without synchronization. Any other value indicates that
presentation should be synchonized with the specified next vertical blank.</param>
            <param name="flags">Flags controlling presentation behavior.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SwapChain.ResizeTarget(SlimDX.DXGI.ModeDescription)">
            <summary>
Changes the output target's size.
</summary>
            <param name="description">Properties of the new output display mode.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SwapChain.ResizeBuffers(System.Int32,System.Int32,System.Int32,SlimDX.DXGI.Format,SlimDX.DXGI.SwapChainFlags)">
            <summary>
Changes the swap chain's back buffer size, format, and count.
</summary>
            <param name="count">The new back buffer count.</param>
            <param name="width">The new back buffer width.</param>
            <param name="height">The new back buffer height.</param>
            <param name="format">The new back buffer format.</param>
            <param name="flags">Flags controlling swap chain functionality.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SwapChain.SetFullScreenState(System.Boolean,SlimDX.DXGI.Output)">
            <summary>
Sets the full screen state.
</summary>
            <param name="isFullScreen">Set to true for full screen mode, false for windowed mode.</param>
            <param name="target">If the current display mode is full screen, this parameter must be the
output containing the swap chain; otherwise, this parameter is ignored. If you set this parameter
to null, DXGI will choose the output based on the swap-chain's device and the output window's placement.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SwapChain.GetFullScreenState(System.Boolean@,SlimDX.DXGI.Output@)">
            <summary>
Gets the full screen state.
</summary>
            <param name="isFullScreen">Receives a value indicating if the swap chain is running in full screen mode.</param>
            <param name="target">Receives the full screen output if the swap chain is in full screen mode. Otherwise ignored.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.SwapChain.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.DXGI.SwapChain" />.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.SwapChain.#ctor(SlimDX.DXGI.Factory,SlimDX.ComObject,SlimDX.DXGI.SwapChainDescription)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.SwapChain" /> class.
</summary>
            <param name="factory">The factory used to create the swap chain.</param>
            <param name="device">The device used to present images to the swap chain.</param>
            <param name="description">Swap chain properties.</param>
        </member>
        <member name="P:SlimDX.DXGI.SwapChain.IsFullScreen">
            <summary>
Gets or sets a value indicating whether the swap chain is rendering in full screen mode.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChain.ContainingOutput">
            <summary>
Gets the output (the display monitor) that contains the majority of the client area of the target window.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChain.PresentCount">
            <summary>
Gets the number of times this swap chain's Present method has been called.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChain.FrameStatistics">
            <summary>
Get performance statistics about the last render frame.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.SwapChain.Description">
            <summary>
Gets the swap chain's description.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.SwapChain">
            <summary>
Holds one or more surfaces that store rendered data prior to presenting
that data to an output.
</summary>
            <unmanaged>IDXGISwapChain</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D10.DeviceChild.DebugName">
            <summary>
Gets or sets a friendly debug name for the object. This name is used in debug messages
as well as in the PIX object browser.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D10.DeviceChild.Device">
            <summary>
Gets the device the object is bound to.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.DeviceChild">
            <summary>
An object that is bound to a Device.
</summary>
            <unmanaged>ID3D10DeviceChild</unmanaged>
        </member>
        <member name="P:SlimDX.XACT3.CueProperties.CurrentInstances">
            <summary>
Gets the number of currently active instances of this cue.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.CueProperties.MaxInstances">
            <summary>
Gets the maximum number of instances that are allowed for this cue.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.CueProperties.VariationCount">
            <summary>
Gets the number of sound variations for this cue.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.CueProperties.VariableIndex">
            <summary>
Gets the index of the variable to control the cue. This is only relevant for interactive audio cues.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.CueProperties.IsInteractive">
            <summary>
Gets a value that is true if the cue is an interactive audio cue, otherwise false.
</summary>
        </member>
        <member name="P:SlimDX.XACT3.CueProperties.FriendlyName">
            <summary>
Gets the friendly name of the cue.
</summary>
        </member>
        <member name="T:SlimDX.XACT3.CueProperties">
            <summary>
The instance independent properties of a cue.
</summary>
            <unmanaged>XACT_CUE_PROPERTIES</unmanaged>
        </member>
        <member name="M:SlimDX.Direct2D.Direct2DException.#ctor(SlimDX.Result)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct2D.Direct2DException.#ctor(System.String,System.Exception)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct2D.Direct2DException.#ctor(System.String)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.Direct2D.Direct2DException.#ctor">
            <summary>
Constructs a new exception object.
</summary>
        </member>
        <member name="T:SlimDX.Direct2D.Direct2DException">
            <summary>
Represents errors that occur in the Direct2D subsystem.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.SwapChainEx.PresentStatistics">
            <summary>
Get presentation performance statistics.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.SwapChainEx.GetDisplayModeEx(SlimDX.Direct3D9.DisplayRotation@)">
            <summary>
Retrieves the display mode's spatial resolution, color resolution, refresh frequency, and rotation settings.
</summary>
            <param name="rotation">Receives the rotation setting of the adapter.</param>
            <returns>Extended display mode information about the adapter.</returns>
            <unmanaged>IDirect3DSwapChain9Ex::GetDisplayModeEx</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.SwapChainEx.GetDisplayModeEx">
            <summary>
Retrieves the display mode's spatial resolution, color resolution, and refresh frequency.
</summary>
            <returns>Extended display mode information about the adapter.</returns>
            <unmanaged>IDirect3DSwapChain9Ex::GetDisplayModeEx</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.SwapChainEx">
            <summary>
Provides extended support for swap chains in Direct3D9Ex.
</summary>
            <unmanaged>IDirect3DSwapChain9Ex</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentStatistics.Equals(SlimDX.Direct3D9.PresentStatistics@,SlimDX.Direct3D9.PresentStatistics@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentStatistics.Equals(SlimDX.Direct3D9.PresentStatistics)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentStatistics.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentStatistics.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentStatistics.op_Inequality(SlimDX.Direct3D9.PresentStatistics,SlimDX.Direct3D9.PresentStatistics)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PresentStatistics.op_Equality(SlimDX.Direct3D9.PresentStatistics,SlimDX.Direct3D9.PresentStatistics)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentStatistics.SyncGPUTime">
            <summary>
Reserved. Always returns 0.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentStatistics.SyncQPCTime">
            <summary>
Gets a value equivalent to that returned by the unmanaged function QueryPerformanceCounter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentStatistics.SyncRefreshCount">
            <summary>
Gets the number of times a vertical blank has occured.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentStatistics.PresentRefreshCount">
            <summary>
Gets the number of times a vertical blank has occured.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PresentStatistics.PresentCount">
            <summary>
Gets the number of times an image has been presented to an output.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PresentStatistics">
            <summary>
Provides basic rendering statistics.
</summary>
            <unmanaged>D3DPRESENTSTATS</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.SwapChain">
            <summary>Applications use the methods of the SwapChain9 class to manipulate a swap chain.</summary>
            <unmanaged>IDirect3DSwapChain9</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.KeyedMutex.Release(System.Int64)">
            <summary>
Using a key, releases exclusive rendering access to a shared resource.
</summary>
            <param name="key">A value that indicates which device to give access to. This method will succeed when the device that currently owns the surface
calls the KeyedMutex.ReleaseSync method using the same value. This key can be any arbitrary value.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.KeyedMutex.Acquire(System.Int64,System.Int32)">
            <summary>
Using a key, acquires exclusive rendering access to a shared resource.
</summary>
            <param name="key">A value that indicates which device to give access to. This method will succeed when the device that currently owns the surface
calls the KeyedMutex.Release method using the same value. This key can be any arbitrary value.</param>
            <param name="milliseconds">The time-out interval, in milliseconds. This method will return if the interval elapses, and the keyed mutex
has not been released using the specified key. If this value is set to zero, the Acquire method will test to see if the keyed mutex has been
released and returns immediately. If this value is set to the maximum integral value, the time-out interval will never elapse.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.KeyedMutex.#ctor(SlimDX.IComObject)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.KeyedMutex" /> class.
</summary>
            <param name="resource">The COM object implementing the IDXGIKeyedMutex interface.</param>
        </member>
        <member name="T:SlimDX.DXGI.KeyedMutex">
            <summary>
Represents a keyed mutex, which allows exclusive access to a shared resource that is used by multiple devices.
</summary>
            <unmanaged>IDXGIKeyedMutex</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.DeviceChild.Device">
            <summary>
Gets the device to which the object is bound.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.DeviceChild">
            <summary>
An object that is bound to a Device.
</summary>
            <unmanaged>IDXGIDeviceSubObject</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.SkinInfo">
            <summary>Applications use the methods of the SkinInfo class to manipulate bone matrices,
which are used to skin vertex data for animation.</summary>
            <unmanaged>ID3DXSkinInfo</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.BoneCombination">
            <summary>Describes a subset of the mesh that has the same attribute and bone combination.</summary>
            <unmanaged>D3DXBONECOMBINATION</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.PatchInfo.Equals(SlimDX.Direct3D9.PatchInfo@,SlimDX.Direct3D9.PatchInfo@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PatchInfo.Equals(SlimDX.Direct3D9.PatchInfo)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PatchInfo.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PatchInfo.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PatchInfo.op_Inequality(SlimDX.Direct3D9.PatchInfo,SlimDX.Direct3D9.PatchInfo)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PatchInfo.op_Equality(SlimDX.Direct3D9.PatchInfo,SlimDX.Direct3D9.PatchInfo)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.PatchInfo.Basis">
            <summary>
Gets or sets the basis of the patch.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PatchInfo.Degree">
            <summary>
Gets or sets the degree of the patch.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PatchInfo.PatchType">
            <summary>
Gets or sets the patch type.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PatchInfo">
            <summary>Structure that contains the attributes of a patch mesh.</summary>
            <unmanaged>D3DXPATCHINFO</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.Mesh">
            <summary>
Provides an interface to manipulate mesh objects.
</summary>
            <unmanaged>ID3DXMesh</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.AttributeWeights">
            <summary>Specifies mesh weight attributes.</summary>
            <unmanaged>D3DXATTRIBUTEWEIGHTS</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.GlyphMetricsFloat">
            <summary>Contains information about the placement and orientation of a glyph in a character cell.</summary>
            <unmanaged>GLYPHMETRICSFLOAT</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.EffectDefault">
            <summary>Effect default parameters.</summary>
            <unmanaged>D3DXEFFECTDEFAULT</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.BaseMesh">
            <summary>
Provides an interface to manipulate mesh and progressive mesh objects.
</summary>
            <unmanaged>ID3DXBaseMesh</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.AttributeRange">
            <summary>Stores an attribute table entry.</summary>
            <unmanaged>D3DXATTRIBUTERANGE</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.Direct3D">
            <summary>
Returns the instance of the Direct3D object that created this device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.PixelShader">
            <summary>
Gets or sets the currently active pixel shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.VertexShader">
            <summary>
Gets or sets the currently active vertex shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.Indices">
            <summary>
Gets or sets the current index data.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.DepthStencilSurface">
            <summary>
Gets or sets the current depth-stencil surface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.PixelShaderProfile">
            <summary>
Gets the pixel shader version.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.VertexShaderProfile">
            <summary>
Gets the vertex shader version.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.DriverLevel">
            <summary>
Gets the current driver version.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.CurrentTexturePalette">
            <summary>
Gets or sets the index of the current texture palette.
</summary>
            <returns>An index into the list of possible texture palettes.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.NPatchMode">
            <summary>
Gets or sets the current N-patch mode segments.
</summary>
            <value>The number of subdivision segments. If the value is less than 1.0, N-patches are disabled.</value>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.SwapChainCount">
            <summary>
Gets the number of implicitly created swap chains.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.ShowCursor">
            <summary>
Gets or sets a value indicating whether the cursor should be shown.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.AvailableTextureMemory">
            <summary>
Gets an estimate of the amount of available texture memory.
</summary>
            <value>The amount of available texture memory, rounded to the nearest MB.</value>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.ScissorRect">
            <summary>
Gets or sets the current scissor rectangle.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.Viewport">
            <summary>
Gets or sets the currently active viewport.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.Material">
            <summary>
Gets or sets the current material properties used by the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.SoftwareVertexProcessing">
            <summary>
Gets or sets the vertex processing mode.
</summary>
            <value>
                <c>true</c> if the device is using software vertex processing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.VertexDeclaration">
            <summary>
Gets or sets the current vertex declaration.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.VertexFormat">
            <summary>
Gets or sets the current fixed-function vertex format.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.ClipStatus">
            <summary>
Gets the current clip status.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.CreationParameters">
            <summary>
Gets the parameters used to create the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Device.Capabilities">
            <summary>
Gets the capabilities of the rendering device.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.RestoreVertexStream(System.Int32)">
            <summary>
Unbinds a previously bound vertex buffer as a render target.
</summary>
            <param name="stream">The vertex stream that should be unbound.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <remarks>This functionality is only available on ATI cards which support render to vertex buffer.</remarks>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.BindRenderTargetToVertexStream(SlimDX.Direct3D9.R2VBSampler,SlimDX.Direct3D9.Texture,System.Int32,System.Int32,SlimDX.Direct3D9.VertexBuffer)">
            <summary>
Binds a render target to a vertex stream.
</summary>
            <param name="sampler">The sampler that will be used to bind the render target.</param>
            <param name="r2vbTarget">The target of the binding operation.</param>
            <param name="stream">The stream index that will be bound to the texture.</param>
            <param name="stride">The stride of the vertex data.</param>
            <param name="dummyVertexBuffer">A vertex buffer that is used to fill a required parameter in <see cref="M:SlimDX.Direct3D9.Device.SetStreamSource(System.Int32,SlimDX.Direct3D9.VertexBuffer,System.Int32,System.Int32)" />.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <remarks>This functionality is only available on ATI cards which support render to vertex buffer.</remarks>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetR2VBMode(System.Boolean)">
            <summary>
Enables or disables render-to-vertex-buffer mode.
</summary>
            <param name="enableR2VB">
                <c>true</c> to enable render-to-vertex-buffer mode, <c>false</c> to disable it.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <remarks>This functionality is only available on ATI cards which support render to vertex buffer.</remarks>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.ColorFill(SlimDX.Direct3D9.Surface,SlimDX.Color4)">
            <summary>
Fills a rectangular area of a surface with the specified color.
</summary>
            <param name="destinationSurface">The surface that will be filled.</param>
            <param name="color">The color used for filling.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::ColorFill</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.ColorFill(SlimDX.Direct3D9.Surface,System.Drawing.Rectangle,SlimDX.Color4)">
            <summary>
Fills a rectangular area of a surface with the specified color.
</summary>
            <param name="destinationSurface">The surface that will be filled.</param>
            <param name="destinationRectangle">The area on the surface that will be filled.</param>
            <param name="color">The color used for filling.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::ColorFill</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.UpdateTexture(SlimDX.Direct3D9.BaseTexture,SlimDX.Direct3D9.BaseTexture)">
            <summary>
Updates the dirty portions of a texture.
</summary>
            <param name="sourceTexture">The source texture.</param>
            <param name="destinationTexture">The destination texture.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::UpdateTexture</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.UpdateSurface(SlimDX.Direct3D9.Surface,SlimDX.Direct3D9.Surface)">
            <summary>
Copies rectangular subsets of pixels from one surface to another.
</summary>
            <param name="source">The source surface.</param>
            <param name="destination">The destination surface.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::UpdateSurface</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.UpdateSurface(SlimDX.Direct3D9.Surface,System.Drawing.Rectangle,SlimDX.Direct3D9.Surface,System.Drawing.Point)">
            <summary>
Copies rectangular subsets of pixels from one surface to another.
</summary>
            <param name="source">The source surface.</param>
            <param name="sourceRectangle">The area on the source surface that is to be copied.</param>
            <param name="destination">The destination surface.</param>
            <param name="destinationPoint">The location on the destination surface where data will be copied.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::UpdateSurface</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.StretchRectangle(SlimDX.Direct3D9.Surface,SlimDX.Direct3D9.Surface,SlimDX.Direct3D9.TextureFilter)">
            <summary>
Copys the contents of the source surface to the destination surface.
</summary>
            <param name="source">The source surface.</param>
            <param name="destination">The destination surface.</param>
            <param name="filter">The filter that will be used when the data is being stretched.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::StretchRect</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.StretchRectangle(SlimDX.Direct3D9.Surface,System.Drawing.Rectangle,SlimDX.Direct3D9.Surface,System.Drawing.Rectangle,SlimDX.Direct3D9.TextureFilter)">
            <summary>
Copys the contents of the source surface to the destination surface.
</summary>
            <param name="source">The source surface.</param>
            <param name="sourceRectangle">The area on the source surface that is to be copied.</param>
            <param name="destination">The destination surface.</param>
            <param name="destinationRectangle">The area on the destination surface where data will be copied.</param>
            <param name="filter">The filter that will be used when the data is being stretched.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::StretchRect</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DeletePatch(System.Int32)">
            <summary>
Frees a cached high-order patch.
</summary>
            <param name="handle">Handle of the cached high-order patch to delete.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DeletePatch</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawRectanglePatch(System.Int32,System.Single[])">
            <summary>
Draws a rectangular patch using the currently set streams.
</summary>
            <param name="handle">Handle to the rectangular patch to draw.</param>
            <param name="segmentCounts">An array of four floating point values that identify the number of segments on each edge of the rectangular patch.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawRectPatch</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawRectanglePatch(System.Int32,System.Single[],SlimDX.Direct3D9.RectanglePatchInfo)">
            <summary>
Draws a rectangular patch using the currently set streams.
</summary>
            <param name="handle">Handle to the rectangular patch to draw.</param>
            <param name="segmentCounts">An array of four floating point values that identify the number of segments on each edge of the rectangular patch.</param>
            <param name="info">Information on how to draw the rectangular patch.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawRectPatch</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawTrianglePatch(System.Int32,System.Single[])">
            <summary>
Draws a triangular patch using the currently set streams.
</summary>
            <param name="handle">Handle to the triangular patch to draw.</param>
            <param name="segmentCounts">An array of three floating point values that identify the number of segments on each edge of the triangular patch.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawTriPatch</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawTrianglePatch(System.Int32,System.Single[],SlimDX.Direct3D9.TrianglePatchInfo)">
            <summary>
Draws a triangular patch using the currently set streams.
</summary>
            <param name="handle">Handle to the triangular patch to draw.</param>
            <param name="segmentCounts">An array of three floating point values that identify the number of segments on each edge of the triangular patch.</param>
            <param name="info">Information on how to draw the triangular patch.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawTriPatch</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawIndexedUserPrimitives``2(SlimDX.Direct3D9.PrimitiveType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],SlimDX.Direct3D9.Format,``1[],System.Int32)">
            <summary>
Renders the specified geometric primitive using user-supplied data.
</summary>
            <typeparam name="S">The type of the data contained in the index data.</typeparam>
            <typeparam name="T">The type of the data contained in the vertex data.</typeparam>
            <param name="primitiveType">Specifies the type of primitive to render.</param>
            <param name="startIndex">Index of the first index in the array to use.</param>
            <param name="startVertex">Index of the first vertex in the array to use.</param>
            <param name="minimumVertexIndex">Minimum vertex index for vertices used during this call.</param>
            <param name="vertexCount">The number of vertices to render.</param>
            <param name="primitiveCount">The number of primitives to render. The number of vertices used is a function of the primitive count and the primitive type.</param>
            <param name="indexData">User-supplied index data.</param>
            <param name="indexDataFormat">The format of the supplied index data.</param>
            <param name="vertexData">User-supplied vertex data.</param>
            <param name="vertexStride">The number of bytes of data for each vertex.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawIndexedPrimitiveUP</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawIndexedUserPrimitives``2(SlimDX.Direct3D9.PrimitiveType,System.Int32,System.Int32,System.Int32,System.Int32,``0[],SlimDX.Direct3D9.Format,``1[],System.Int32)">
            <summary>
Renders the specified geometric primitive using user-supplied data.
</summary>
            <typeparam name="S">The type of the data contained in the index data.</typeparam>
            <typeparam name="T">The type of the data contained in the vertex data.</typeparam>
            <param name="primitiveType">Specifies the type of primitive to render.</param>
            <param name="startIndex">Index of the first index in the array to use.</param>
            <param name="minimumVertexIndex">Minimum vertex index for vertices used during this call.</param>
            <param name="vertexCount">The number of vertices to render.</param>
            <param name="primitiveCount">The number of primitives to render. The number of vertices used is a function of the primitive count and the primitive type.</param>
            <param name="indexData">User-supplied index data.</param>
            <param name="indexDataFormat">The format of the supplied index data.</param>
            <param name="vertexData">User-supplied vertex data.</param>
            <param name="vertexStride">The number of bytes of data for each vertex.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawIndexedPrimitiveUP</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawIndexedUserPrimitives``2(SlimDX.Direct3D9.PrimitiveType,System.Int32,System.Int32,System.Int32,``0[],SlimDX.Direct3D9.Format,``1[],System.Int32)">
            <summary>
Renders the specified geometric primitive using user-supplied data.
</summary>
            <typeparam name="S">The type of the data contained in the index data.</typeparam>
            <typeparam name="T">The type of the data contained in the vertex data.</typeparam>
            <param name="primitiveType">Specifies the type of primitive to render.</param>
            <param name="minimumVertexIndex">Minimum vertex index for vertices used during this call.</param>
            <param name="vertexCount">The number of vertices to render.</param>
            <param name="primitiveCount">The number of primitives to render. The number of vertices used is a function of the primitive count and the primitive type.</param>
            <param name="indexData">User-supplied index data.</param>
            <param name="indexDataFormat">The format of the supplied index data.</param>
            <param name="vertexData">User-supplied vertex data.</param>
            <param name="vertexStride">The number of bytes of data for each vertex.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawIndexedPrimitiveUP</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawUserPrimitives``1(SlimDX.Direct3D9.PrimitiveType,System.Int32,System.Int32,``0[])">
            <summary>
Renders non-indexed geometric primitives using user-supplied data.
</summary>
            <typeparam name="T">The type of the user-supplied vertices.</typeparam>
            <param name="primitiveType">Specifies the type of primitive to render.</param>
            <param name="startIndex">Index of the first vertex in the array to use.</param>
            <param name="primitiveCount">The number of primitives to render. The number of vertices used is a function of the primitive count and the primitive type.</param>
            <param name="data">User-supplied vertex data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawPrimitiveUP</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawUserPrimitives``1(SlimDX.Direct3D9.PrimitiveType,System.Int32,``0[])">
            <summary>
Renders non-indexed geometric primitives using user-supplied data.
</summary>
            <typeparam name="T">The type of the user-supplied vertices.</typeparam>
            <param name="primitiveType">Specifies the type of primitive to render.</param>
            <param name="primitiveCount">The number of primitives to render. The number of vertices used is a function of the primitive count and the primitive type.</param>
            <param name="data">User-supplied vertex data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawPrimitiveUP</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawIndexedPrimitives(SlimDX.Direct3D9.PrimitiveType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Renders the specified geometric primitive using data from the current input streams.
</summary>
            <param name="primitiveType">Specifies the type of primitive to render.</param>
            <param name="baseVertexIndex">Offset from the start of the vertex buffer to the first vertex.</param>
            <param name="minimumVertexIndex">Minimum vertex index for vertices used during this call. This is a zero-based index relative to <paramref name="baseVertexIndex" />.</param>
            <param name="vertexCount">The number of vertices to render.</param>
            <param name="startIndex">Index of the first index to use when accessing the vertex buffer.</param>
            <param name="primitiveCount">The number of primitives to render. The number of vertices used is a function of the primitive count and the primitive type.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawIndexedPrimitive</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.DrawPrimitives(SlimDX.Direct3D9.PrimitiveType,System.Int32,System.Int32)">
            <summary>
Renders non-indexed geometric primitives using data from the current input streams.
</summary>
            <param name="primitiveType">Specifies the type of primitive to render.</param>
            <param name="startIndex">Index of the first vertex to use.</param>
            <param name="primitiveCount">The number of primitives to render. The number of vertices used is a function of the primitive count and the primitive type.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::DrawPrimitive</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.ProcessVertices(System.Int32,System.Int32,System.Int32,SlimDX.Direct3D9.VertexBuffer,SlimDX.Direct3D9.VertexDeclaration,SlimDX.Direct3D9.LockFlags)">
            <summary>
Applies the vertex processing defined by the vertex shader to the set of input data streams,
generating a single stream of interleaved vertex data to the destination vertex buffer.
</summary>
            <param name="sourceStartIndex">Index of the first vertex to load.</param>
            <param name="destinationIndex">Index of the first vertex in the destination vertex buffer into which the results are placed.</param>
            <param name="vertexCount">Number of vertices to process.</param>
            <param name="destinationBuffer">The destination for the output vertex stream.</param>
            <param name="vertexDeclaration">The output vertex declaration.</param>
            <param name="flags">Vertex processing options.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::ProcessVertices</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.EndStateBlock">
            <summary>
Signals Direct3D to stop recording a device-state block.
</summary>
            <returns>The recorded device-state block.</returns>
            <unmanaged>IDirect3DDevice9::EndStateBlock</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.BeginStateBlock">
            <summary>
Signals Direct3D to begin recording a device-state block.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::BeginStateBlock</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,SlimDX.Matrix[])">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,SlimDX.Matrix[],System.Int32,System.Int32)">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of four constant vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,SlimDX.Matrix*)">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,SlimDX.Matrix*,System.Int32)">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="count">The number of matrices to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,SlimDX.Matrix)">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,System.Int32[])">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantI</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,SlimDX.Vector4[])">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,System.Single[])">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,System.Boolean[])">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantB</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,System.Int32[],System.Int32,System.Int32)">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of four constant vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantI</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,SlimDX.Vector4[],System.Int32,System.Int32)">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of four constant vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,System.Single[],System.Int32,System.Int32)">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of four constant vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPixelShaderConstant(System.Int32,System.Boolean[],System.Int32,System.Int32)">
            <summary>
Sets a pixel shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of constants to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPixelShaderConstantB</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,SlimDX.Matrix[])">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,SlimDX.Matrix[],System.Int32,System.Int32)">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of four constant vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,SlimDX.Matrix*)">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">A pointer to the constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,SlimDX.Matrix*,System.Int32)">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">A pointer to the constant data.</param>
            <param name="count">The number of matrices to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,SlimDX.Matrix)">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,System.Int32[])">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantI</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,SlimDX.Vector4[])">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,System.Single[])">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,System.Boolean[])">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantB</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,System.Int32[],System.Int32,System.Int32)">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of four constant vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantI</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,SlimDX.Vector4[],System.Int32,System.Int32)">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of four constant vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,System.Single[],System.Int32,System.Int32)">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of four constant vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetVertexShaderConstant(System.Int32,System.Boolean[],System.Int32,System.Int32)">
            <summary>
Sets a vertex shader constant.
</summary>
            <param name="startRegister">Register number that will contain the first constant value.</param>
            <param name="data">The constant data.</param>
            <param name="offset">The offset into the data where constants will start being retrieved.</param>
            <param name="count">The number of constants to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetVertexShaderConstantB</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetPixelShaderIntegerConstant(System.Int32,System.Int32)">
            <summary>
Gets an integer pixel shader constant.
</summary>
            <param name="startRegister">The register number containing the first constant value.</param>
            <param name="count">Number of values in the constant.</param>
            <returns>An array of integer constants.</returns>
            <unmanaged>IDirect3DDevice9::GetPixelShaderConstantI</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetPixelShaderFloatConstant(System.Int32,System.Int32)">
            <summary>
Gets a floating point pixel shader constant.
</summary>
            <param name="startRegister">The register number containing the first constant value.</param>
            <param name="count">Number of values in the constant.</param>
            <returns>An array of floating point constants.</returns>
            <unmanaged>IDirect3DDevice9::GetPixelShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetPixelShaderBooleanConstant(System.Int32,System.Int32)">
            <summary>
Gets a boolean pixel shader constant.
</summary>
            <param name="startRegister">The register number containing the first constant value.</param>
            <param name="count">Number of values in the constant.</param>
            <returns>An array of boolean constants.</returns>
            <unmanaged>IDirect3DDevice9::GetPixelShaderConstantB</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetVertexShaderIntegerConstant(System.Int32,System.Int32)">
            <summary>
Gets an integer vertex shader constant.
</summary>
            <param name="startRegister">The register number containing the first constant value.</param>
            <param name="count">Number of values in the constant.</param>
            <returns>An array of integer constants.</returns>
            <unmanaged>IDirect3DDevice9::GetVertexShaderConstantI</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetVertexShaderFloatConstant(System.Int32,System.Int32)">
            <summary>
Gets a floating point vertex shader constant.
</summary>
            <param name="startRegister">The register number containing the first constant value.</param>
            <param name="count">Number of values in the constant.</param>
            <returns>An array of floating point constants.</returns>
            <unmanaged>IDirect3DDevice9::GetVertexShaderConstantF</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetVertexShaderBooleanConstant(System.Int32,System.Int32)">
            <summary>
Gets a boolean vertex shader constant.
</summary>
            <param name="startRegister">The register number containing the first constant value.</param>
            <param name="count">Number of values in the constant.</param>
            <returns>An array of boolean constants.</returns>
            <unmanaged>IDirect3DDevice9::GetVertexShaderConstantB</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetClipPlane(System.Int32,SlimDX.Plane)">
            <summary>
Sets the current user-defined clip plane.
</summary>
            <param name="index">The index of the clipping plane to set.</param>
            <param name="clipPlane">The new clipping plane data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetClipPlane</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetDialogBoxMode(System.Boolean)">
            <summary>
This method allows the use of GDI dialog boxes in full-screen mode applications.
</summary>
            <param name="enableDialogs">
                <c>true</c> to enable GDI dialogs, <c>false</c> to disable them.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetDialogBoxMode</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetRenderTarget(System.Int32,SlimDX.Direct3D9.Surface)">
            <summary>
Sets a new render target for the device.
</summary>
            <param name="targetIndex">Index of the render target.</param>
            <param name="target">The new render target.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetRenderTarget</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTexture(System.Int32,SlimDX.Direct3D9.BaseTexture)">
            <summary>
Assigns a texture to a stage.
</summary>
            <param name="sampler">Zero-based sampler index.</param>
            <param name="texture">The texture that is to be bound.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTexture</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.ResetStreamSourceFrequency(System.Int32)">
            <summary>
Resets the stream source frequency divider to its initial state.
</summary>
            <param name="stream">The stream index.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetStreamSourceFreq</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetStreamSourceFrequency(System.Int32,System.Int32,SlimDX.Direct3D9.StreamSource)">
            <summary>
Sets the stream source frequency divider value. This may be used to draw several instances of geometry.
</summary>
            <param name="stream">The stream index.</param>
            <param name="frequency">The new frequency divider.</param>
            <param name="source">The type of data being set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetStreamSourceFreq</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetStreamSource(System.Int32,SlimDX.Direct3D9.VertexBuffer,System.Int32,System.Int32)">
            <summary>
Binds a vertex buffer to a device data stream.
</summary>
            <param name="stream">The stream index to bind.</param>
            <param name="streamData">The stream data to bind.</param>
            <param name="offsetInBytes">Offset from the beginning of the stream to the beginning of the vertex data, in bytes.</param>
            <param name="stride">The stride of the vertex data.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetStreamSource</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.MultiplyTransform(SlimDX.Direct3D9.TransformState,SlimDX.Matrix)">
            <summary>
Multiplies a device's world, view, or projection matrix by the specified matrix.
</summary>
            <param name="state">The transformation state whose matrix is to be modified.</param>
            <param name="value">The matrix to multiply with the device transform.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::MultiplyTransform</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetTransform(System.Int32)">
            <summary>
Retrieves a matrix describing the transformation state.
</summary>
            <param name="index">The device state variable that is being retrieved.</param>
            <returns>The transformation matrix for the specified state.</returns>
            <unmanaged>IDirect3DDevice9::GetTransform</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetTransform(SlimDX.Direct3D9.TransformState)">
            <summary>
Retrieves a matrix describing the transformation state.
</summary>
            <param name="state">The device state variable that is being retrieved.</param>
            <returns>The transformation matrix for the specified state.</returns>
            <unmanaged>IDirect3DDevice9::GetTransform</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTransform(System.Int32,SlimDX.Matrix)">
            <summary>
Sets a single device transformation state.
</summary>
            <param name="index">The transformation state which is to be set.</param>
            <param name="value">The new value for the transformation state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTransform</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTransform(System.Int32,SlimDX.Matrix*)">
            <summary>
Sets a single device transformation state.
</summary>
            <param name="index">The transformation state which is to be set.</param>
            <param name="value">The new value for the transformation state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTransform</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTransform(SlimDX.Direct3D9.TransformState,SlimDX.Matrix)">
            <summary>
Sets a single device transformation state.
</summary>
            <param name="state">The transformation state which is to be set.</param>
            <param name="value">The new value for the transformation state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTransform</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTransform(SlimDX.Direct3D9.TransformState,SlimDX.Matrix*)">
            <summary>
Sets a single device transformation state.
</summary>
            <param name="state">The transformation state which is to be set.</param>
            <param name="value">The new value for the transformation state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTransform</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetCursorProperties(System.Drawing.Point,SlimDX.Direct3D9.Surface)">
            <summary>
Sets properties for the cursor.
</summary>
            <param name="hotspot">The offset (in pixels) that marks the center of the cursor.</param>
            <param name="cursorBitmap">The image data used to draw the cursor.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetCursorProperties</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetCursorProperties(System.Int32,System.Int32,SlimDX.Direct3D9.Surface)">
            <summary>
Sets properties for the cursor.
</summary>
            <param name="hotspotX">X-coordinate offset (in pixels) that marks the center of the cursor.</param>
            <param name="hotspotY">Y-coordinate offset (in pixels) that marks the center of the cursor.</param>
            <param name="cursorBitmap">The image data used to draw the cursor.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetCursorProperties</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetCursorPosition(System.Drawing.Point,System.Boolean)">
            <summary>
Sets the current cursor position.
</summary>
            <param name="position">The position of the cursor, in virtual desktop coordinates.</param>
            <param name="immediateUpdate">
                <c>true</c> to force the cursor to update every time the monitor refreshes; otherwise, <c>false</c> to have the cursor update whenever <see cref="M:SlimDX.Direct3D9.Device.Present" /> is called.</param>
            <unmanaged>IDirect3DDevice9::SetCursorPosition</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetCursorPosition(System.Int32,System.Int32,System.Boolean)">
            <summary>
Sets the current cursor position.
</summary>
            <param name="x">The new X-position of the cursor, in virtual desktop coordinates.</param>
            <param name="y">The new Y-position of the cursor, in virtual desktop coordinates.</param>
            <param name="immediateUpdate">
                <c>true</c> to force the cursor to update every time the monitor refreshes; otherwise, <c>false</c> to have the cursor update whenever <see cref="M:SlimDX.Direct3D9.Device.Present" /> is called.</param>
            <unmanaged>IDirect3DDevice9::SetCursorPosition</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetCursor(System.Windows.Forms.Cursor,System.Boolean)">
            <summary>
Sets a Windows Forms cursor as the device cursor.
</summary>
            <param name="cursor">The cursor to set.</param>
            <param name="addWatermark">
                <c>true</c> to add a watermark to the cursor; otherwise, <c>false</c>.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetCursor</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetLight(System.Int32)">
            <summary>
Retrievs a set of lighting properties that are used by the device.
</summary>
            <param name="lightIndex">Index of the light to be retrieved.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.Light" /> structure describing the requested light.</returns>
            <unmanaged>IDirect3DDevice9::GetLight</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetLight(System.Int32,SlimDX.Direct3D9.Light)">
            <summary>
Assigns a set of lighting properties to the device.
</summary>
            <param name="lightIndex">Index of the light whose properties are to be set.</param>
            <param name="lightData">A <see cref="T:SlimDX.Direct3D9.Light" /> structure which represents the light properties.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetLight</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.IsLightEnabled(System.Int32)">
            <summary>
Gets a value indicating whether the specified light is enabled.
</summary>
            <param name="lightIndex">The index of the light whose status is to be queried.</param>
            <returns>
                <c>true</c> if the specified light is enabled; otherwise, <c>false</c>.</returns>
            <unmanaged>IDirect3DDevice9::IsLightEnabled</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.EnableLight(System.Int32,System.Boolean)">
            <summary>
Enables or disables a set of lighting parameters.
</summary>
            <param name="lightIndex">The index of the light whose state is to be changed.</param>
            <param name="enable">
                <c>true</c> if the light should be enabled; otherwise, <c>false</c>.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::EnableLight</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetSamplerState(System.Int32,SlimDX.Direct3D9.SamplerState,SlimDX.Direct3D9.TextureFilter)">
            <summary>
Sets a sampler state's value.
</summary>
            <param name="sampler">The sampler stage index.</param>
            <param name="type">The sampler state whose value is to be set.</param>
            <param name="textureFilter">The new value for the sampler state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetSamplerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetSamplerState(System.Int32,SlimDX.Direct3D9.SamplerState,SlimDX.Direct3D9.TextureAddress)">
            <summary>
Sets a sampler state's value.
</summary>
            <param name="sampler">The sampler stage index.</param>
            <param name="type">The sampler state whose value is to be set.</param>
            <param name="textureAddress">The new value for the sampler state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetSamplerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetSamplerState(System.Int32,SlimDX.Direct3D9.SamplerState,System.Single)">
            <summary>
Sets a sampler state's value.
</summary>
            <param name="sampler">The sampler stage index.</param>
            <param name="type">The sampler state whose value is to be set.</param>
            <param name="value">The new value for the sampler state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetSamplerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetSamplerState(System.Int32,SlimDX.Direct3D9.SamplerState,System.Int32)">
            <summary>
Sets a sampler state's value.
</summary>
            <param name="sampler">The sampler stage index.</param>
            <param name="type">The sampler state whose value is to be set.</param>
            <param name="value">The new value for the sampler state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetSamplerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTextureStageState(System.Int32,SlimDX.Direct3D9.TextureStage,System.Single)">
            <summary>
Sets the state value for the currently assigned texture.
</summary>
            <param name="stage">Zero-based stage identifier for the texture. Devices can have up to eight textures, so the maximum value allowed is 7.</param>
            <param name="type">The texture state to set.</param>
            <param name="value">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTextureStageState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTextureStageState(System.Int32,SlimDX.Direct3D9.TextureStage,SlimDX.Direct3D9.TextureTransform)">
            <summary>
Sets the state value for the currently assigned texture.
</summary>
            <param name="stage">Zero-based stage identifier for the texture. Devices can have up to eight textures, so the maximum value allowed is 7.</param>
            <param name="type">The texture state to set.</param>
            <param name="textureTransform">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTextureStageState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTextureStageState(System.Int32,SlimDX.Direct3D9.TextureStage,SlimDX.Direct3D9.TextureArgument)">
            <summary>
Sets the state value for the currently assigned texture.
</summary>
            <param name="stage">Zero-based stage identifier for the texture. Devices can have up to eight textures, so the maximum value allowed is 7.</param>
            <param name="type">The texture state to set.</param>
            <param name="textureArgument">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTextureStageState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTextureStageState(System.Int32,SlimDX.Direct3D9.TextureStage,SlimDX.Direct3D9.TextureOperation)">
            <summary>
Sets the state value for the currently assigned texture.
</summary>
            <param name="stage">Zero-based stage identifier for the texture. Devices can have up to eight textures, so the maximum value allowed is 7.</param>
            <param name="type">The texture state to set.</param>
            <param name="textureOperation">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTextureStageState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetTextureStageState(System.Int32,SlimDX.Direct3D9.TextureStage,System.Int32)">
            <summary>
Sets the state value for the currently assigned texture.
</summary>
            <param name="stage">Zero-based stage identifier for the texture. Devices can have up to eight textures, so the maximum value allowed is 7.</param>
            <param name="type">The texture state to set.</param>
            <param name="value">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetTextureStageState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetGammaRamp(System.Int32,SlimDX.Direct3D9.GammaRamp,System.Boolean)">
            <summary>
Sets the gamma correction ramp for the specified swap chain.
</summary>
            <param name="swapChain">The swap chain whose gamma ramp is to be set.</param>
            <param name="ramp">The gamma correction ramp.</param>
            <param name="calibrate">
                <c>true</c> to calibrate the gamma data, <c>false</c> to just submit it to the device.</param>
            <unmanaged>IDirect3DDevice9::SetGammaRamp</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetGammaRamp(System.Int32)">
            <summary>
Retrives the gamma correction ramp for the specified swap chain.
</summary>
            <param name="swapChain">The swap chain whose gamma ramp is to be retrieved.</param>
            <returns>The requested gamma correction ramp.</returns>
            <unmanaged>IDirect3DDevice9::GetGammaRamp</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetPaletteEntries(System.Int32,SlimDX.Direct3D9.PaletteEntry[])">
            <summary>
Sets palette entries.
</summary>
            <param name="paletteNumber">An ordinal number identifying the particular palette upon which the operation is to be performed.</param>
            <param name="entries">The individual entries of the palette that are to be set. The length of the array is assumed to be 256.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetPaletteEntries</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetPaletteEntries(System.Int32)">
            <summary>
Gets the individual color elements of the specified palette.
</summary>
            <param name="paletteNumber">The palette whose color elements will be retrieved.</param>
            <returns>The individual color elements of the specified palette.</returns>
            <unmanaged>IDirect3DDevice9::GetPaletteEntries</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetRenderState``1(SlimDX.Direct3D9.RenderState,``0)">
            <summary>
Sets a single device render-state parameter.
</summary>
            <typeparam name="T">The type of the render state value.</typeparam>
            <param name="state">The render state that is being modified.</param>
            <param name="value">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetRenderState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetRenderState(SlimDX.Direct3D9.RenderState,System.Single)">
            <summary>
Sets a single device render-state parameter.
</summary>
            <param name="state">The render state that is being modified.</param>
            <param name="value">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetRenderState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetRenderState(SlimDX.Direct3D9.RenderState,System.Boolean)">
            <summary>
Sets a single device render-state parameter.
</summary>
            <param name="state">The render state that is being modified.</param>
            <param name="value">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetRenderState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.SetRenderState(SlimDX.Direct3D9.RenderState,System.Int32)">
            <summary>
Sets a single device render-state parameter.
</summary>
            <param name="state">The render state that is being modified.</param>
            <param name="value">The new value for the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::SetRenderState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetRenderTargetData(SlimDX.Direct3D9.Surface,SlimDX.Direct3D9.Surface)">
            <summary>
Copies the render-target data from device memory to system memory.
</summary>
            <param name="renderTarget">A surface representing the render target.</param>
            <param name="destinationSurface">The surface which will receive the copy of the render target.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::GetRenderTargetData</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetFrontBufferData(System.Int32,SlimDX.Direct3D9.Surface)">
            <summary>
Generates a copy of the device's front buffer and places that copy into the specified surface.
</summary>
            <param name="swapChain">Index of the swap chain whose front buffer is to be copied.</param>
            <param name="destinationSurface">The surface that will receive the copy of the front buffer.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::GetFrontBufferData</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetStreamSourceFrequency(System.Int32,System.Int32@,SlimDX.Direct3D9.StreamSource@)">
            <summary>
Gets the stream source frequency divider value.
</summary>
            <param name="stream">A zero-based index specifying the data stream.</param>
            <returns>The frequency divider value.</returns>
            <unmanaged>IDirect3DDevice9::GetStreamSourceFrequency</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetStreamSource(System.Int32,SlimDX.Direct3D9.VertexBuffer@,System.Int32@,System.Int32@)">
            <summary>
Retrieves a vertex buffer bound to the specified data stream.
</summary>
            <param name="stream">A zero-based index specifying the data stream.</param>
            <param name="streamData">A vertex buffer representing the data stream.</param>
            <param name="offsetInBytes">The offset from the beginning of the stream to the beginning of vertex data, measured in bytes.</param>
            <param name="stride">The stride of the vertex data, in bytes.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::GetStreamSource</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetTexture(System.Int32)">
            <summary>
Gets the texture assigned to the specified stage.
</summary>
            <returns>The texture assigned to the specified stage.</returns>
            <unmanaged>IDirect3DDevice9::GetTexture</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetTextureStageState(System.Int32,SlimDX.Direct3D9.TextureStage)">
            <summary>
Retrieves a texture stage state value for the device.
</summary>
            <param name="stage">The texture stage.</param>
            <param name="type">The texture stage state whose value is being requested.</param>
            <returns>The value of the requested texture stage state.</returns>
            <unmanaged>IDirect3DDevice9::GetTextureStageState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetTextureStageState``1(System.Int32,SlimDX.Direct3D9.TextureStage)">
            <summary>
Retrieves a texture stage state value for the device.
</summary>
            <typeparam name="T">The type of the data being returned.</typeparam>
            <param name="stage">The texture stage.</param>
            <param name="type">The texture stage state whose value is being requested.</param>
            <returns>The value of the requested texture stage state.</returns>
            <unmanaged>IDirect3DDevice9::GetTextureStageState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetSamplerState(System.Int32,SlimDX.Direct3D9.SamplerState)">
            <summary>
Retrieves a sampler state value for the device.
</summary>
            <param name="sampler">The sampler stage index.</param>
            <param name="type">The sampler state whose value is being requested.</param>
            <returns>The value of the requested sampler state.</returns>
            <unmanaged>IDirect3DDevice9::GetSamplerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetSamplerState``1(System.Int32,SlimDX.Direct3D9.SamplerState)">
            <summary>
Retrieves a sampler state value for the device.
</summary>
            <typeparam name="T">The type of the data being returned.</typeparam>
            <param name="sampler">The sampler stage index.</param>
            <param name="type">The sampler state whose value is being requested.</param>
            <returns>The value of the requested sampler state.</returns>
            <unmanaged>IDirect3DDevice9::GetSamplerState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetRenderState(SlimDX.Direct3D9.RenderState)">
            <summary>
Retrieves a render-state value for the device.
</summary>
            <param name="state">The render state whose value is being requested.</param>
            <returns>The value of the requested render state.</returns>
            <unmanaged>IDirect3DDevice9::GetRenderState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetRenderState``1(SlimDX.Direct3D9.RenderState)">
            <summary>
Retrieves a render-state value for the device.
</summary>
            <typeparam name="T">The type of the data being returned.</typeparam>
            <param name="state">The render state whose value is being requested.</param>
            <returns>The value of the requested render state.</returns>
            <unmanaged>IDirect3DDevice9::GetRenderState</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetClipPlane(System.Int32)">
            <summary>
Gets the currently set user-defined clipping plane.
</summary>
            <param name="index">Index of the desired clipping plane.</param>
            <returns>The requested clipping plane.</returns>
            <unmanaged>IDirect3DDevice9::GetClipPlane</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetDisplayMode(System.Int32)">
            <summary>
Retrieve's the display mode's spatial resolution, color resolution, and refresh frequency.
</summary>
            <param name="swapChain">The index of the swap chain whose display mode is to be retrieved.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::GetDisplayMode</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetRasterStatus(System.Int32)">
            <summary>
Gets information describing the raster of the monitor on which the swap chain is presented.
</summary>
            <param name="swapChain">The swap chain whose raster status is to be retrieved.</param>
            <returns>The raster status of the specified swap chain.</returns>
            <unmanaged>IDirect3DDevice9::GetRasterStatus</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetSwapChain(System.Int32)">
            <summary>
Gets a reference to the specified swap chain.
</summary>
            <param name="swapChainIndex">The index of the desired swap chain.</param>
            <returns>The requested swap chain reference.</returns>
            <unmanaged>IDirect3DDevice9::GetSwapChain</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetRenderTarget(System.Int32)">
            <summary>
Retrieves a render target surface.
</summary>
            <param name="index">The index of the render target.</param>
            <returns>A surface representing the desired render target.</returns>
            <unmanaged>IDirect3DDevice9::GetRenderTarget</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.GetBackBuffer(System.Int32,System.Int32)">
            <summary>
Retrieves a back buffer from the device's swap chain.
</summary>
            <param name="swapChain">The desired swap chain.</param>
            <param name="backBuffer">Index of the back buffer object to return.</param>
            <returns>The requested back buffer surface.</returns>
            <unmanaged>IDirect3DDevice9::GetBackBuffer</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Present(System.Drawing.Rectangle,System.Drawing.Rectangle,System.IntPtr,System.Drawing.Region)">
            <summary>
Presents the contents of the next buffer in the sequence of back buffers to the screen.
</summary>
            <param name="sourceRectangle">The area of the back buffer that should be presented.</param>
            <param name="destinationRectangle">The area of the front buffer that should receive the result of the presentation.</param>
            <param name="windowOverride">The destination window whose client area is taken as the target for this presentation.</param>
            <param name="region">Specifies a region on the back buffer that contains the minimal amount of pixels that need to be updated.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Present</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Present(System.Drawing.Rectangle,System.Drawing.Rectangle,System.IntPtr)">
            <summary>
Presents the contents of the next buffer in the sequence of back buffers to the screen.
</summary>
            <param name="sourceRectangle">The area of the back buffer that should be presented.</param>
            <param name="destinationRectangle">The area of the front buffer that should receive the result of the presentation.</param>
            <param name="windowOverride">The destination window whose client area is taken as the target for this presentation.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Present</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Present(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
Presents the contents of the next buffer in the sequence of back buffers to the screen.
</summary>
            <param name="sourceRectangle">The area of the back buffer that should be presented.</param>
            <param name="destinationRectangle">The area of the front buffer that should receive the result of the presentation.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Present</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Present(SlimDX.Direct3D9.Present)">
            <summary>
Presents the contents of the first swap chain in the device. 
</summary>
            <param name="flags">Flags used to specify how the swap chain should be presented.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Present</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Present">
            <summary>
Presents the contents of the next buffer in the sequence of back buffers to the screen.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Present</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.EndScene">
            <summary>
Ends a scene.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::EndScene</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.BeginScene">
            <summary>
Begins a scene.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::BeginScene</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Clear(SlimDX.Direct3D9.ClearFlags,System.Int32,System.Single,System.Int32)">
            <summary>
Clears one or more surfaces such as a render target, a stencil buffer, and a depth buffer.
</summary>
            <param name="clearFlags">Flags that specify which surfaces will be cleared.</param>
            <param name="color">The color that will be used to fill the cleared render target.</param>
            <param name="zdepth">The value that will be used to fill the cleared depth buffer.</param>
            <param name="stencil">The value that will be used to fill the cleared stencil buffer.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Clear</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Clear(SlimDX.Direct3D9.ClearFlags,SlimDX.Color4,System.Single,System.Int32)">
            <summary>
Clears one or more surfaces such as a render target, a stencil buffer, and a depth buffer.
</summary>
            <param name="clearFlags">Flags that specify which surfaces will be cleared.</param>
            <param name="color">The color that will be used to fill the cleared render target.</param>
            <param name="zdepth">The value that will be used to fill the cleared depth buffer.</param>
            <param name="stencil">The value that will be used to fill the cleared stencil buffer.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Clear</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Clear(SlimDX.Direct3D9.ClearFlags,System.Int32,System.Single,System.Int32,System.Drawing.Rectangle[])">
            <summary>
Clears one or more surfaces such as a render target, a stencil buffer, and a depth buffer.
</summary>
            <param name="clearFlags">Flags that specify which surfaces will be cleared.</param>
            <param name="color">The color that will be used to fill the cleared render target.</param>
            <param name="zdepth">The value that will be used to fill the cleared depth buffer.</param>
            <param name="stencil">The value that will be used to fill the cleared stencil buffer.</param>
            <param name="rectangles">The areas on the surfaces that will be cleared.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Clear</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Clear(SlimDX.Direct3D9.ClearFlags,SlimDX.Color4,System.Single,System.Int32,System.Drawing.Rectangle[])">
            <summary>
Clears one or more surfaces such as a render target, a stencil buffer, and a depth buffer.
</summary>
            <param name="clearFlags">Flags that specify which surfaces will be cleared.</param>
            <param name="color">The color that will be used to fill the cleared render target.</param>
            <param name="zdepth">The value that will be used to fill the cleared depth buffer.</param>
            <param name="stencil">The value that will be used to fill the cleared stencil buffer.</param>
            <param name="rectangles">The areas on the surfaces that will be cleared.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Clear</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.Reset(SlimDX.Direct3D9.PresentParameters[])">
            <summary>
Resets the device.
</summary>
            <param name="presentParameters">A set of new presentation parameters to apply to the device.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::Reset</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.TestCooperativeLevel">
            <summary>
Reports the current cooperative-level status of the device.
</summary>
            <remarks>
This function always returns the result of the TestCooperativeLevel call.
It will not generate an exception for a failed result, or write to <see cref="P:SlimDX.Result.Last" />.
As a result, it is important to actually check the returned value.
</remarks>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::TestCooperativeLevel</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.ValidateDevice">
            <summary>
Reports on the device's ability to render the current texture-blending operations and arguments in a single pass.
</summary>
            <returns>The number of passes required to complete the desired effect.</returns>
            <unmanaged>IDirect3DDevice9::ValidateDevice</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.EvictManagedResources">
            <summary>
Evicts all managed resources, including both Direct3D and driver-managed resources.
</summary>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
            <unmanaged>IDirect3DDevice9::EvictManagedResources</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.IsQuerySupported(SlimDX.Direct3D9.QueryType)">
            <summary>
Determines whether the specified query type is supported by the device.
</summary>
            <param name="type">The query type to check.</param>
            <returns>
                <c>true</c> if the query is supported; otherwise, <c>false</c>.</returns>
            <unmanaged>IDirect3DDevice9::CreateQuery</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Device.#ctor(SlimDX.Direct3D9.Direct3D,System.Int32,SlimDX.Direct3D9.DeviceType,System.IntPtr,SlimDX.Direct3D9.CreateFlags,SlimDX.Direct3D9.PresentParameters[])">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Device" /> class.
</summary>
            <param name="adapter">Ordinal number that denotes the display adapter.</param>
            <param name="deviceType">Denotes the desired device type. If the desired device type is not available, device creation will fail.</param>
            <param name="controlHandle">Specifies the target window for Direct3D rendering.</param>
            <param name="createFlags">Combination of one or more options that control device creation.</param>
            <param name="presentParameters">Describes the presentation parameters for the device being created.</param>
        </member>
        <member name="T:SlimDX.Direct3D9.Device">
            <summary>
Applications use the methods of the Device to perform DrawPrimitive-based rendering, create resources,
work with system-level variables, adjust gamma ramp levels, work with palettes, and create shaders.
</summary>
            <unmanaged>IDirect3DDevice9</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.RasterStatus">
            <summary>Describes the raster status.</summary>
            <unmanaged>D3DRASTER_STATUS</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.CreationParameters.Equals(SlimDX.Direct3D9.CreationParameters@,SlimDX.Direct3D9.CreationParameters@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CreationParameters.Equals(SlimDX.Direct3D9.CreationParameters)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CreationParameters.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CreationParameters.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CreationParameters.op_Inequality(SlimDX.Direct3D9.CreationParameters,SlimDX.Direct3D9.CreationParameters)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.CreationParameters.op_Equality(SlimDX.Direct3D9.CreationParameters,SlimDX.Direct3D9.CreationParameters)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.CreationParameters.BehaviorFlags">
            <summary>
Gets or sets the behavior flags used to create the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.CreationParameters.Window">
            <summary>
Gets or sets the rendering window.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.CreationParameters.DeviceType">
            <summary>
Gets or sets the device type.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.CreationParameters.AdapterOrdinal">
            <summary>
Gets or sets an ordinal denoting the display adapter.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CreationParameters">
            <summary>Describes the creation parameters for a device.</summary>
            <unmanaged>D3DDEVICE_CREATION_PARAMETERS</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.ClipStatus.Equals(SlimDX.Direct3D9.ClipStatus@,SlimDX.Direct3D9.ClipStatus@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ClipStatus.Equals(SlimDX.Direct3D9.ClipStatus)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ClipStatus.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ClipStatus.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ClipStatus.op_Inequality(SlimDX.Direct3D9.ClipStatus,SlimDX.Direct3D9.ClipStatus)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.ClipStatus.op_Equality(SlimDX.Direct3D9.ClipStatus,SlimDX.Direct3D9.ClipStatus)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.ClipStatus.ClipIntersection">
            <summary>
Gets or sets flags describing the current clipping intersection.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.ClipStatus.ClipUnion">
            <summary>
Gets or sets flags describing the current clipping union.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ClipStatus">
            <summary>Describes the current clip status.</summary>
            <unmanaged>D3DCLIPSTATUS9</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.GammaRamp.Blue">
            <summary>
Gets a collection of the blue components of the gamma ramp.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.GammaRamp.Green">
            <summary>
Gets a collection of the green components of the gamma ramp.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.GammaRamp.Red">
            <summary>
Gets a collection of the red components of the gamma ramp.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.GammaRamp.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.GammaRamp" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.GammaRamp">
            <summary>Contains red, green, and blue ramp data.</summary>
            <unmanaged>D3DGAMMARAMP</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Material.Equals(SlimDX.Direct3D9.Material@,SlimDX.Direct3D9.Material@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Material.Equals(SlimDX.Direct3D9.Material)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Material.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Material.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Material.op_Inequality(SlimDX.Direct3D9.Material,SlimDX.Direct3D9.Material)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Material.op_Equality(SlimDX.Direct3D9.Material,SlimDX.Direct3D9.Material)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.Material.Power">
            <summary>
Gets or sets a value that determines the sharpness of specular highlights. The higher the value, the sharper the highlight.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Material.Emissive">
            <summary>
Gets or sets the emissive color of the material.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Material.Specular">
            <summary>
Gets or sets the specular color of the material.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Material.Ambient">
            <summary>
Gets or sets the ambient color of the material.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Material.Diffuse">
            <summary>
Gets or sets the diffuse color of the material.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Material">
            <summary>Specifies material properties.</summary>
            <unmanaged>D3DMATERIAL9</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.RectanglePatchInfo.Equals(SlimDX.Direct3D9.RectanglePatchInfo@,SlimDX.Direct3D9.RectanglePatchInfo@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.RectanglePatchInfo.Equals(SlimDX.Direct3D9.RectanglePatchInfo)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.RectanglePatchInfo.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.RectanglePatchInfo.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.RectanglePatchInfo.op_Inequality(SlimDX.Direct3D9.RectanglePatchInfo,SlimDX.Direct3D9.RectanglePatchInfo)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.RectanglePatchInfo.op_Equality(SlimDX.Direct3D9.RectanglePatchInfo,SlimDX.Direct3D9.RectanglePatchInfo)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.RectanglePatchInfo.Degree">
            <summary>
Gets or sets the degree type for the patch.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.RectanglePatchInfo.Basis">
            <summary>
Gets or sets the basis for the patch.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.RectanglePatchInfo.Stride">
            <summary>
Gets or sets the width of the imaginary two-dimensional vertex array.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.RectanglePatchInfo.Height">
            <summary>
Gets or sets the height of each vertex, in number of vertices.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.RectanglePatchInfo.Width">
            <summary>
Gets or sets the width of each vertex, in number of vertices.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.RectanglePatchInfo.StartVertexOffsetHeight">
            <summary>
Gets or sets the starting vertex offset height, in number of vertices.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.RectanglePatchInfo.StartVertexOffsetWidth">
            <summary>
Gets or sets the starting vertex offset width, in number of vertices.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.RectanglePatchInfo">
            <summary>Describes a rectangular high-order patch.</summary>
            <unmanaged>D3DRECTPATCH_INFO</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.TrianglePatchInfo.Equals(SlimDX.Direct3D9.TrianglePatchInfo@,SlimDX.Direct3D9.TrianglePatchInfo@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TrianglePatchInfo.Equals(SlimDX.Direct3D9.TrianglePatchInfo)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TrianglePatchInfo.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TrianglePatchInfo.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TrianglePatchInfo.op_Inequality(SlimDX.Direct3D9.TrianglePatchInfo,SlimDX.Direct3D9.TrianglePatchInfo)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.TrianglePatchInfo.op_Equality(SlimDX.Direct3D9.TrianglePatchInfo,SlimDX.Direct3D9.TrianglePatchInfo)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.TrianglePatchInfo.Degree">
            <summary>
Gets or sets the degree type for the patch.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TrianglePatchInfo.Basis">
            <summary>
Gets or sets the basis type for the patch.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TrianglePatchInfo.VertexCount">
            <summary>
Gets or sets the number of vertices in the patch.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.TrianglePatchInfo.StartVertexOffset">
            <summary>
Gets or sets the starting vertex offset, in number of vertices.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TrianglePatchInfo">
            <summary>Describes a triangular high-order patch.</summary>
            <unmanaged>D3DTRIPATCH_INFO</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Light.Equals(SlimDX.Direct3D9.Light@,SlimDX.Direct3D9.Light@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Light.Equals(SlimDX.Direct3D9.Light)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Light.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Light.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Light.op_Inequality(SlimDX.Direct3D9.Light,SlimDX.Direct3D9.Light)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Light.op_Equality(SlimDX.Direct3D9.Light,SlimDX.Direct3D9.Light)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Phi">
            <summary>
Gets or sets the angle, in radians, of the spotlight's outer cone.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Theta">
            <summary>
Gets or sets angle, in radians, of the spotlight's inner cone.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Attenuation2">
            <summary>
Gets or sets the third value in the equation that determines how the light intensity changes over distance.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Attenuation1">
            <summary>
Gets or sets the second value in the equation that determines how the light intensity changes over distance.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Attenuation0">
            <summary>
Gets or sets the first value in the equation that determines how the light intensity changes over distance.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Falloff">
            <summary>
Gets or sets the decrease in illumination between a spotlight's inner cone and the outer edge of the outer cone.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Range">
            <summary>
Gets or sets the distance beyond which the light has no effect. This member does not affect directional lights.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Direction">
            <summary>
Gets or sets the direction of the light. This vector need not be normalized, but should have a non-zero length.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Position">
            <summary>
Gets or sets the position of the light in world space. This member does not affect directional lights.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Ambient">
            <summary>
Gets or sets the ambient color of the light.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Specular">
            <summary>
Gets or sets the specular color of the light.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Diffuse">
            <summary>
Gets or sets the diffuse color of the light.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Light.Type">
            <summary>
Gets or sets the type of the light source.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Light">
            <summary>Defines a set of lighting properties.</summary>
            <unmanaged>D3DLIGHT9</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.PaletteEntry.Equals(SlimDX.Direct3D9.PaletteEntry@,SlimDX.Direct3D9.PaletteEntry@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PaletteEntry.Equals(SlimDX.Direct3D9.PaletteEntry)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PaletteEntry.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PaletteEntry.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PaletteEntry.op_Inequality(SlimDX.Direct3D9.PaletteEntry,SlimDX.Direct3D9.PaletteEntry)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PaletteEntry.op_Equality(SlimDX.Direct3D9.PaletteEntry,SlimDX.Direct3D9.PaletteEntry)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.PaletteEntry.Flags">
            <summary>
Gets or sets the alpha component of the palette entry.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PaletteEntry.Blue">
            <summary>
Gets or sets the blue component of the palette entry.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PaletteEntry.Green">
            <summary>
Gets or sets the green component of the palette entry.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PaletteEntry.Red">
            <summary>
Gets or sets the red component of the palette entry.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PaletteEntry">
            <summary>Specifies the color and usage of an entry in a logical palette.</summary>
            <unmanaged>PALETTEENTRY</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.Equals(SlimDX.Direct3D9.Viewport@,SlimDX.Direct3D9.Viewport@)">
            <summary>
Returns a value indicating whether the two viewports are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.Equals(SlimDX.Direct3D9.Viewport)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D9.Viewport" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.ToString">
            <summary>
Converts the value of the viewport to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.op_Inequality(SlimDX.Direct3D9.Viewport,SlimDX.Direct3D9.Viewport)">
            <summary>
Tests for inequality between two viewports.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.op_Equality(SlimDX.Direct3D9.Viewport,SlimDX.Direct3D9.Viewport)">
            <summary>
Tests for equality between two viewports.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Viewport" /> structure.
</summary>
            <param name="x">The X coordinate of the viewport.</param>
            <param name="y">The Y coordinate of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
            <param name="minZ">The minimum Z distance of the viewport.</param>
            <param name="maxZ">The maximum Z distance of the viewport.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Viewport.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Viewport" /> structure.
</summary>
            <param name="x">The X coordinate of the viewport.</param>
            <param name="y">The Y coordinate of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
        </member>
        <member name="P:SlimDX.Direct3D9.Viewport.MaxZ">
            <summary>
Gets or sets the viewport's maximum Z depth.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Viewport.MinZ">
            <summary>
Gets or sets the viewport's minimum Z depth.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Viewport.Height">
            <summary>
Gets or sets the viewport's height.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Viewport.Width">
            <summary>
Gets or sets the viewport's width.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Viewport.Y">
            <summary>
Gets or sets the viewport's Y position.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Viewport.X">
            <summary>
Gets or sets the viewport's X position.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Viewport">
            <summary>
Defines a rectangular region of a render-target surface onto which 
a 3D rendering is projected.
</summary>
            <unmanaged>D3DVIEWPORT9</unmanaged>
        </member>
        <member name="M:SlimDX.Matrix.Equals(SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Equals(SlimDX.Matrix)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Matrix.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Matrix.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Inequality(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Equality(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Multiply(System.Single,SlimDX.Matrix)">
            <summary>
Scales a matrix by a given value.
</summary>
            <param name="right">The matrix to scale.</param>
            <param name="left">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Multiply(SlimDX.Matrix,System.Single)">
            <summary>
Scales a matrix by a given value.
</summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Multiply(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Multiplies two matricies.
</summary>
            <param name="left">The first matrix to multiply.</param>
            <param name="right">The second matrix to multiply.</param>
            <returns>The product of the two matricies.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Division(SlimDX.Matrix,System.Single)">
            <summary>
Scales a matrix by a given value.
</summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Division(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Divides two matricies.
</summary>
            <param name="left">The first matrix to divide.</param>
            <param name="right">The second matrix to divide.</param>
            <returns>The quotient of the two matricies.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Subtraction(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Subtracts two matricies.
</summary>
            <param name="left">The first matrix to subtract.</param>
            <param name="right">The second matrix to subtract.</param>
            <returns>The difference between the two matricies.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_Addition(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Adds two matricies.
</summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <returns>The sum of the two matricies.</returns>
        </member>
        <member name="M:SlimDX.Matrix.op_UnaryNegation(SlimDX.Matrix)">
            <summary>
Negates a matrix.
</summary>
            <param name="matrix">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Transformation2D(SlimDX.Vector2@,System.Single,SlimDX.Vector2@,SlimDX.Vector2@,System.Single,SlimDX.Vector2@,SlimDX.Matrix@)">
            <summary>
Creates a 2D transformation matrix.
</summary>
            <param name="scalingCenter">Center point of the scaling operation.</param>
            <param name="scalingRotation">Scaling rotation amount.</param>
            <param name="scaling">Scaling factor.</param>
            <param name="rotationCenter">The center of the rotation.</param>
            <param name="rotation">The rotation of the transformation.</param>
            <param name="translation">The translation factor of the transformation.</param>
            <param name="result">When the method completes, contains the created transformation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Transformation2D(SlimDX.Vector2,System.Single,SlimDX.Vector2,SlimDX.Vector2,System.Single,SlimDX.Vector2)">
            <summary>
Creates a 2D transformation matrix.
</summary>
            <param name="scalingCenter">Center point of the scaling operation.</param>
            <param name="scalingRotation">Scaling rotation amount.</param>
            <param name="scaling">Scaling factor.</param>
            <param name="rotationCenter">The center of the rotation.</param>
            <param name="rotation">The rotation of the transformation.</param>
            <param name="translation">The translation factor of the transformation.</param>
            <returns>The created transformation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Transformation(SlimDX.Vector3@,SlimDX.Quaternion@,SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Quaternion@,SlimDX.Vector3@,SlimDX.Matrix@)">
            <summary>
Creates a transformation matrix.
</summary>
            <param name="scalingCenter">Center point of the scaling operation.</param>
            <param name="scalingRotation">Scaling rotation amount.</param>
            <param name="scaling">Scaling factor.</param>
            <param name="rotationCenter">The center of the rotation.</param>
            <param name="rotation">The rotation of the transformation.</param>
            <param name="translation">The translation factor of the transformation.</param>
            <param name="result">When the method completes, contains the created transformation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Transformation(SlimDX.Vector3,SlimDX.Quaternion,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Quaternion,SlimDX.Vector3)">
            <summary>
Creates a transformation matrix.
</summary>
            <param name="scalingCenter">Center point of the scaling operation.</param>
            <param name="scalingRotation">Scaling rotation amount.</param>
            <param name="scaling">Scaling factor.</param>
            <param name="rotationCenter">The center of the rotation.</param>
            <param name="rotation">The rotation of the transformation.</param>
            <param name="translation">The translation factor of the transformation.</param>
            <returns>The created transformation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.AffineTransformation2D(System.Single,SlimDX.Vector2@,System.Single,SlimDX.Vector2@,SlimDX.Matrix@)">
            <summary>
Creates a 2D affine transformation matrix.
</summary>
            <param name="scaling">Scaling factor.</param>
            <param name="rotationCenter">The center of the rotation.</param>
            <param name="rotation">The rotation of the transformation.</param>
            <param name="translation">The translation factor of the transformation.</param>
            <param name="result">When the method completes, contains the created affine transformation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.AffineTransformation2D(System.Single,SlimDX.Vector2,System.Single,SlimDX.Vector2)">
            <summary>
Creates a 2D affine transformation matrix.
</summary>
            <param name="scaling">Scaling factor.</param>
            <param name="rotationCenter">The center of the rotation.</param>
            <param name="rotation">The rotation of the transformation.</param>
            <param name="translation">The translation factor of the transformation.</param>
            <returns>The created affine transformation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.AffineTransformation(System.Single,SlimDX.Vector3@,SlimDX.Quaternion@,SlimDX.Vector3@,SlimDX.Matrix@)">
            <summary>
Creates a 3D affine transformation matrix.
</summary>
            <param name="scaling">Scaling factor.</param>
            <param name="rotationCenter">The center of the rotation.</param>
            <param name="rotation">The rotation of the transformation.</param>
            <param name="translation">The translation factor of the transformation.</param>
            <param name="result">When the method completes, contains the created affine transformation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.AffineTransformation(System.Single,SlimDX.Vector3,SlimDX.Quaternion,SlimDX.Vector3)">
            <summary>
Creates a 3D affine transformation matrix.
</summary>
            <param name="scaling">Scaling factor.</param>
            <param name="rotationCenter">The center of the rotation.</param>
            <param name="rotation">The rotation of the transformation.</param>
            <param name="translation">The translation factor of the transformation.</param>
            <returns>The created affine transformation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Transpose(SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
Calculates the transpose of the specified matrix.
</summary>
            <param name="matrix">The matrix whose transpose is to be calculated.</param>
            <param name="result">When the method completes, contains the transpose of the specified matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Transpose(SlimDX.Matrix)">
            <summary>
Calculates the transpose of the specified matrix.
</summary>
            <param name="matrix">The matrix whose transpose is to be calculated.</param>
            <returns>The transpose of the specified matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Invert(SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
Calculates the inverse of the specified matrix.
</summary>
            <param name="matrix">The matrix whose inverse is to be calculated.</param>
            <param name="result">When the method completes, contains the inverse of the specified matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Invert(SlimDX.Matrix)">
            <summary>
Calculates the inverse of the specified matrix.
</summary>
            <param name="matrix">The matrix whose inverse is to be calculated.</param>
            <returns>The inverse of the specified matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Translation(SlimDX.Vector3@,SlimDX.Matrix@)">
            <summary>
Creates a translation matrix using the specified offsets.
</summary>
            <param name="amount">The offset for all three coordinate planes.</param>
            <param name="result">When the method completes, contains the created translation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Translation(SlimDX.Vector3)">
            <summary>
Creates a translation matrix using the specified offsets.
</summary>
            <param name="amount">The offset for all three coordinate planes.</param>
            <returns>The created translation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Translation(System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a translation matrix using the specified offsets.
</summary>
            <param name="x">X-coordinate offset.</param>
            <param name="y">Y-coordinate offset.</param>
            <param name="z">Z-coordinate offset.</param>
            <param name="result">When the method completes, contains the created translation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Translation(System.Single,System.Single,System.Single)">
            <summary>
Creates a translation matrix using the specified offsets.
</summary>
            <param name="x">X-coordinate offset.</param>
            <param name="y">Y-coordinate offset.</param>
            <param name="z">Z-coordinate offset.</param>
            <returns>The created translation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Shadow(SlimDX.Vector4@,SlimDX.Plane@,SlimDX.Matrix@)">
            <summary>
Creates a matrix that flattens geometry into a plane.
</summary>
            <param name="light">Position of the shadow light.</param>
            <param name="plane">The plane into which the geometry will be flattened.</param>
            <param name="result">When the method completes, contains the created shadow matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Shadow(SlimDX.Vector4,SlimDX.Plane)">
            <summary>
Creates a matrix that flattens geometry into a plane.
</summary>
            <param name="light">Position of the shadow light.</param>
            <param name="plane">The plane into which the geometry will be flattened.</param>
            <returns>The created shadow matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Scaling(SlimDX.Vector3@,SlimDX.Matrix@)">
            <summary>
Creates a matrix that scales along the x-axis, y-axis, and y-axis.
</summary>
            <param name="scale">Scaling factor for all three axes.</param>
            <param name="result">When the method completes, contains the created scaling matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Scaling(SlimDX.Vector3)">
            <summary>
Creates a matrix that scales along the x-axis, y-axis, and y-axis.
</summary>
            <param name="scale">Scaling factor for all three axes.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Scaling(System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a matrix that scales along the x-axis, y-axis, and y-axis.
</summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <param name="z">Scaling factor that is applied along the z-axis.</param>
            <param name="result">When the method completes, contains the created scaling matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Scaling(System.Single,System.Single,System.Single)">
            <summary>
Creates a matrix that scales along the x-axis, y-axis, and y-axis.
</summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <param name="z">Scaling factor that is applied along the z-axis.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Reflection(SlimDX.Plane@,SlimDX.Matrix@)">
            <summary>
Creates a matrix that reflects the coordinate system about a plane.
</summary>
            <param name="plane">The plane about which the coordinate system will be reflected.</param>
            <param name="result">When the method completes, contains the created reflection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Reflection(SlimDX.Plane)">
            <summary>
Creates a matrix that reflects the coordinate system about a plane.
</summary>
            <param name="plane">The plane about which the coordinate system will be reflected.</param>
            <returns>The created reflection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveOffCenterRH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a right-handed, customized perspective projection matrix.
</summary>
            <param name="left">Minimum x-value of the viewing volume.</param>
            <param name="right">Maximum x-value of the viewing volume.</param>
            <param name="bottom">Minimum y-value of the viewing volume.</param>
            <param name="top">Maximum y-value of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveOffCenterRH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a right-handed, customized perspective projection matrix.
</summary>
            <param name="left">Minimum x-value of the viewing volume.</param>
            <param name="right">Maximum x-value of the viewing volume.</param>
            <param name="bottom">Minimum y-value of the viewing volume.</param>
            <param name="top">Maximum y-value of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveOffCenterLH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a left-handed, customized perspective projection matrix.
</summary>
            <param name="left">Minimum x-value of the viewing volume.</param>
            <param name="right">Maximum x-value of the viewing volume.</param>
            <param name="bottom">Minimum y-value of the viewing volume.</param>
            <param name="top">Maximum y-value of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveOffCenterLH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a left-handed, customized perspective projection matrix.
</summary>
            <param name="left">Minimum x-value of the viewing volume.</param>
            <param name="right">Maximum x-value of the viewing volume.</param>
            <param name="bottom">Minimum y-value of the viewing volume.</param>
            <param name="top">Maximum y-value of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveFovRH(System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a right-handed, perspective projection matrix based on a field of view.
</summary>
            <param name="fov">Field of view in the y direction, in radians.</param>
            <param name="aspect">Aspect ratio, defined as view space width divided by height.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveFovRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a right-handed, perspective projection matrix based on a field of view.
</summary>
            <param name="fov">Field of view in the y direction, in radians.</param>
            <param name="aspect">Aspect ratio, defined as view space width divided by height.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveFovLH(System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a left-handed, perspective projection matrix based on a field of view.
</summary>
            <param name="fov">Field of view in the y direction, in radians.</param>
            <param name="aspect">Aspect ratio, defined as view space width divided by height.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveFovLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a left-handed, perspective projection matrix based on a field of view.
</summary>
            <param name="fov">Field of view in the y direction, in radians.</param>
            <param name="aspect">Aspect ratio, defined as view space width divided by height.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveRH(System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a right-handed, perspective projection matrix.
</summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a right-handed, perspective projection matrix.
</summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveLH(System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a left-handed, perspective projection matrix.
</summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.PerspectiveLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a left-handed, perspective projection matrix.
</summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.OrthoOffCenterRH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a right-handed, customized orthographic projection matrix.
</summary>
            <param name="left">Minimum x-value of the viewing volume.</param>
            <param name="right">Maximum x-value of the viewing volume.</param>
            <param name="bottom">Minimum y-value of the viewing volume.</param>
            <param name="top">Maximum y-value of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.OrthoOffCenterRH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a right-handed, customized orthographic projection matrix.
</summary>
            <param name="left">Minimum x-value of the viewing volume.</param>
            <param name="right">Maximum x-value of the viewing volume.</param>
            <param name="bottom">Minimum y-value of the viewing volume.</param>
            <param name="top">Maximum y-value of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.OrthoOffCenterLH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a left-handed, customized orthographic projection matrix.
</summary>
            <param name="left">Minimum x-value of the viewing volume.</param>
            <param name="right">Maximum x-value of the viewing volume.</param>
            <param name="bottom">Minimum y-value of the viewing volume.</param>
            <param name="top">Maximum y-value of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.OrthoOffCenterLH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a left-handed, customized orthographic projection matrix.
</summary>
            <param name="left">Minimum x-value of the viewing volume.</param>
            <param name="right">Maximum x-value of the viewing volume.</param>
            <param name="bottom">Minimum y-value of the viewing volume.</param>
            <param name="top">Maximum y-value of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.OrthoRH(System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a right-handed, orthographic projection matrix.
</summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.OrthoRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a right-handed, orthographic projection matrix.
</summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.OrthoLH(System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a left-handed, orthographic projection matrix.
</summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <param name="result">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.OrthoLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Creates a left-handed, orthographic projection matrix.
</summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.LookAtRH(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Matrix@)">
            <summary>
Creates a right-handed, look-at matrix.
</summary>
            <param name="eye">The position of the viewer's eye.</param>
            <param name="target">The camera look-at target.</param>
            <param name="up">The camera's up vector.</param>
            <param name="result">When the method completes, contains the created look-at matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.LookAtRH(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Creates a right-handed, look-at matrix.
</summary>
            <param name="eye">The position of the viewer's eye.</param>
            <param name="target">The camera look-at target.</param>
            <param name="up">The camera's up vector.</param>
            <returns>The created look-at matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.LookAtLH(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Matrix@)">
            <summary>
Creates a left-handed, look-at matrix.
</summary>
            <param name="eye">The position of the viewer's eye.</param>
            <param name="target">The camera look-at target.</param>
            <param name="up">The camera's up vector.</param>
            <param name="result">When the method completes, contains the created look-at matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.LookAtLH(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Creates a left-handed, look-at matrix.
</summary>
            <param name="eye">The position of the viewer's eye.</param>
            <param name="target">The camera look-at target.</param>
            <param name="up">The camera's up vector.</param>
            <returns>The created look-at matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.RotationYawPitchRoll(System.Single,System.Single,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a rotation matrix with a specified yaw, pitch, and roll.
</summary>
            <param name="yaw">Yaw around the y-axis, in radians.</param>
            <param name="pitch">Pitch around the x-axis, in radians.</param>
            <param name="roll">Roll around the z-axis, in radians.</param>
            <param name="result">When the method completes, contains the created rotation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.RotationYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
Creates a rotation matrix with a specified yaw, pitch, and roll.
</summary>
            <param name="yaw">Yaw around the y-axis, in radians.</param>
            <param name="pitch">Pitch around the x-axis, in radians.</param>
            <param name="roll">Roll around the z-axis, in radians.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.RotationQuaternion(SlimDX.Quaternion@,SlimDX.Matrix@)">
            <summary>
Creates a rotation matrix from a quaternion.
</summary>
            <param name="rotation">The quaternion to use to build the matrix.</param>
            <param name="result">The created rotation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.RotationQuaternion(SlimDX.Quaternion)">
            <summary>
Creates a rotation matrix from a quaternion.
</summary>
            <param name="rotation">The quaternion to use to build the matrix.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.RotationAxis(SlimDX.Vector3@,System.Single,SlimDX.Matrix@)">
            <summary>
Creates a matrix that rotates around an arbitary axis.
</summary>
            <param name="axis">The axis around which to rotate.</param>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <param name="result">When the method completes, contains the created rotation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.RotationAxis(SlimDX.Vector3,System.Single)">
            <summary>
Creates a matrix that rotates around an arbitary axis.
</summary>
            <param name="axis">The axis around which to rotate.</param>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.RotationZ(System.Single,SlimDX.Matrix@)">
            <summary>
Creates a matrix that rotates around the z-axis.
</summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <param name="result">When the method completes, contains the created rotation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.RotationZ(System.Single)">
            <summary>
Creates a matrix that rotates around the z-axis.
</summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.RotationY(System.Single,SlimDX.Matrix@)">
            <summary>
Creates a matrix that rotates around the y-axis.
</summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <param name="result">When the method completes, contains the created rotation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.RotationY(System.Single)">
            <summary>
Creates a matrix that rotates around the y-axis.
</summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.RotationX(System.Single,SlimDX.Matrix@)">
            <summary>
Creates a matrix that rotates around the x-axis.
</summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <param name="result">When the method completes, contains the created rotation matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.RotationX(System.Single)">
            <summary>
Creates a matrix that rotates around the x-axis.
</summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Billboard(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Matrix@)">
            <summary>
Creates a spherical billboard that rotates around a specified object position.
</summary>
            <param name="objectPosition">The position of the object around which the billboard will rotate.</param>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="cameraUpVector">The up vector of the camera.</param>
            <param name="cameraForwardVector">The forward vector of the camera.</param>
            <param name="result">When the method completes, contains the created billboard matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Billboard(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Creates a spherical billboard that rotates around a specified object position.
</summary>
            <param name="objectPosition">The position of the object around which the billboard will rotate.</param>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="cameraUpVector">The up vector of the camera.</param>
            <param name="cameraForwardVector">The forward vector of the camera.</param>
            <returns>The created billboard matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Lerp(SlimDX.Matrix@,SlimDX.Matrix@,System.Single,SlimDX.Matrix@)">
            <summary>
Performs a linear interpolation between two matricies.
</summary>
            <param name="start">Start matrix.</param>
            <param name="end">End matrix.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the linear interpolation of the two matricies.</param>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Matrix.Lerp(SlimDX.Matrix,SlimDX.Matrix,System.Single)">
            <summary>
Performs a linear interpolation between two matricies.
</summary>
            <param name="start">Start matrix.</param>
            <param name="end">End matrix.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The linear interpolation of the two matrices.</returns>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Matrix.Negate(SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
Negates a matrix.
</summary>
            <param name="matrix">The matrix to be negated.</param>
            <param name="result">When the method completes, contains the negated matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Negate(SlimDX.Matrix)">
            <summary>
Negates a matrix.
</summary>
            <param name="matrix">The matrix to be negated.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Divide(SlimDX.Matrix@,System.Single,SlimDX.Matrix@)">
            <summary>
Scales a matrix by the given value.
</summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <param name="result">When the method completes, contains the scaled matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Divide(SlimDX.Matrix,System.Single)">
            <summary>
Scales a matrix by the given value.
</summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Divide(SlimDX.Matrix@,SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
Determines the quotient of two matrices.
</summary>
            <param name="left">The first matrix to divide.</param>
            <param name="right">The second matrix to divide.</param>
            <param name="result">When the method completes, contains the quotient of the two matrices.</param>
        </member>
        <member name="M:SlimDX.Matrix.Divide(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Determines the quotient of two matrices.
</summary>
            <param name="left">The first matrix to divide.</param>
            <param name="right">The second matrix to divide.</param>
            <returns>The quotient of the two matrices.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix@,System.Single,SlimDX.Matrix@)">
            <summary>
Scales a matrix by the given value.
</summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <param name="result">When the method completes, contains the scaled matrix.</param>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix,System.Single)">
            <summary>
Scales a matrix by the given value.
</summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix[],SlimDX.Matrix,SlimDX.Matrix[])">
            <summary>
Determines the products of of an array of matrices by a single matrix.
</summary>
            <param name="left">The first matrix array to multiply.</param>
            <param name="right">The matrix to multiply the matrices in the array by.</param>
            <param name="result">The array of products of the matrices.</param>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix[],SlimDX.Matrix,SlimDX.Matrix[],System.Int32,System.Int32)">
            <summary>
Determines the products of of an array of matrices by a single matrix.
</summary>
            <param name="left">The first matrix array to multiply.</param>
            <param name="right">The matrix to multiply the matrices in the array by.</param>
            <param name="result">The array of products of the matrices.</param>
            <param name="offset">The offset at which to begin the multiplication.</param>
            <param name="count">The number of matrices to multiply, or 0 to process the entire array.</param>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix[],SlimDX.Matrix[],SlimDX.Matrix[])">
            <summary>
Determines the products of two arrays of matrices.
</summary>
            <param name="left">The first matrix array to multiply.</param>
            <param name="right">The second matrix array to multiply.</param>
            <param name="result">The array of products of the two matrices.</param>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix[],SlimDX.Matrix[],SlimDX.Matrix[],System.Int32,System.Int32)">
            <summary>
Determines the products of two arrays of matrices.
</summary>
            <param name="left">The first matrix array to multiply.</param>
            <param name="right">The second matrix array to multiply.</param>
            <param name="result">The array of products of the two matrices.</param>
            <param name="offset">The offset at which to begin the multiplication.</param>
            <param name="count">The number of matrices to multiply, or 0 to process the entire array.</param>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix*,SlimDX.Matrix*,SlimDX.Matrix*,System.Int32)">
            <summary>
Determines the products of two arrays of matrices.
</summary>
            <param name="left">The first matrix array to multiply.</param>
            <param name="right">The second matrix array to multiply.</param>
            <param name="result">The array of products of the two matrices.</param>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix@,SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
Determines the product of two matrices.
</summary>
            <param name="left">The first matrix to multiply.</param>
            <param name="right">The second matrix to multiply.</param>
            <param name="result">The product of the two matrices.</param>
        </member>
        <member name="M:SlimDX.Matrix.Multiply(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Determines the product of two matrices.
</summary>
            <param name="left">The first matrix to multiply.</param>
            <param name="right">The second matrix to multiply.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Subtract(SlimDX.Matrix@,SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
Determines the difference between two matrices.
</summary>
            <param name="left">The first matrix to subtract.</param>
            <param name="right">The second matrix to subtract.</param>
            <param name="result">When the method completes, contains the difference between the two matrices.</param>
        </member>
        <member name="M:SlimDX.Matrix.Subtract(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Determines the difference between two matrices.
</summary>
            <param name="left">The first matrix to subtract.</param>
            <param name="right">The second matrix to subtract.</param>
            <returns>The difference between the two matrices.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Add(SlimDX.Matrix@,SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
Determines the sum of two matrices.
</summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <param name="result">When the method completes, contains the sum of the two matrices.</param>
        </member>
        <member name="M:SlimDX.Matrix.Add(SlimDX.Matrix,SlimDX.Matrix)">
            <summary>
Determines the sum of two matrices.
</summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <returns>The sum of the two matrices.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Determinant">
            <summary>
Calculates the determinant of the matrix.
</summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Decompose(SlimDX.Vector3@,SlimDX.Quaternion@,SlimDX.Vector3@)">
            <summary>
Decomposes the matrix into its scalar, rotational, and translational elements.
</summary>
            <param name="scale">When the method completes, contains the scalar element of the matrix.</param>
            <param name="rotation">When the method completes, contains the translational element of the matrix.</param>
            <param name="translation">When the method completes, contains the rotational element of the matrix.</param>
            <returns>
                <c>true</c> if the decomposition was successful; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Matrix.Invert">
            <summary>
Inverts the matrix.
</summary>
        </member>
        <member name="P:SlimDX.Matrix.IsIdentity">
            <summary>
Gets a value indicating whether this instance is an identity matrix.
</summary>
        </member>
        <member name="P:SlimDX.Matrix.Identity">
            <summary>
Gets a <see cref="T:SlimDX.Matrix" /> that represents an identity matrix.
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M44">
            <summary>
Gets or sets the element of the matrix that exists in the fourth row and fourth column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M43">
            <summary>
Gets or sets the element of the matrix that exists in the fourth row and third column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M42">
            <summary>
Gets or sets the element of the matrix that exists in the fourth row and second column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M41">
            <summary>
Gets or sets the element of the matrix that exists in the fourth row and first column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M34">
            <summary>
Gets or sets the element of the matrix that exists in the third row and fourth column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M33">
            <summary>
Gets or sets the element of the matrix that exists in the third row and third column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M32">
            <summary>
Gets or sets the element of the matrix that exists in the third row and second column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M31">
            <summary>
Gets or sets the element of the matrix that exists in the third row and first column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M24">
            <summary>
Gets or sets the element of the matrix that exists in the second row and fourth column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M23">
            <summary>
Gets or sets the element of the matrix that exists in the second row and third column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M22">
            <summary>
Gets or sets the element of the matrix that exists in the second row and second column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M21">
            <summary>
Gets or sets the element of the matrix that exists in the second row and first column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M14">
            <summary>
Gets or sets the element of the matrix that exists in the first row and fourth column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M13">
            <summary>
Gets or sets the element of the matrix that exists in the first row and third column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M12">
            <summary>
Gets or sets the element of the matrix that exists in the first row and second column. 
</summary>
        </member>
        <member name="F:SlimDX.Matrix.M11">
            <summary>
Gets or sets the element of the matrix that exists in the first row and first column. 
</summary>
        </member>
        <member name="T:SlimDX.Matrix">
            <summary>
Defines a 4x4 matrix.
</summary>
            <unmanaged>D3DXMATRIX</unmanaged>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.MatrixConverter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.MatrixConverter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.MatrixConverter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Matrix" /> objects to and from various 
other representations.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexDeclaration">
            <summary>Applications use the methods of the VertexDeclaration class to encapsulate the vertex shader declaration.</summary>
            <unmanaged>IDirect3DVertexDeclaration9</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexElement">
            <summary>Defines the vertex data layout. Each vertex can contain one or more data types,
and each data type is described by a vertex element.</summary>
            <unmanaged>D3DVERTEXELEMENT9</unmanaged>
        </member>
        <member name="M:SlimDX.Plane.Equals(SlimDX.Plane@,SlimDX.Plane@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Plane.Equals(SlimDX.Plane)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Plane.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Plane.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Plane.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Plane.op_Inequality(SlimDX.Plane,SlimDX.Plane)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Plane.op_Equality(SlimDX.Plane,SlimDX.Plane)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Plane.op_Multiply(System.Single,SlimDX.Plane)">
            <summary>
Scales the plane by the given scaling factor.
</summary>
            <param name="plane">The source plane.</param>
            <param name="scale">The scaling factor.</param>
            <returns>The scaled plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.op_Multiply(SlimDX.Plane,System.Single)">
            <summary>
Scales the plane by the given scaling factor.
</summary>
            <param name="plane">The source plane.</param>
            <param name="scale">The scaling factor.</param>
            <returns>The scaled plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.Multiply(SlimDX.Plane@,System.Single,SlimDX.Plane@)">
            <summary>
Scales the plane by the given scaling factor.
</summary>
            <param name="plane">The source plane.</param>
            <param name="scale">The scaling factor.</param>
            <param name="result">When the method completes, contains the scaled plane.</param>
        </member>
        <member name="M:SlimDX.Plane.Multiply(SlimDX.Plane,System.Single)">
            <summary>
Scales the plane by the given scaling factor.
</summary>
            <param name="plane">The source plane.</param>
            <param name="scale">The scaling factor.</param>
            <returns>The scaled plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.Intersects(SlimDX.Plane,SlimDX.BoundingSphere)">
            <summary>
Finds the intersection between a plane and a sphere.
</summary>
            <param name="plane">The source plane.</param>
            <param name="sphere">The sphere to check for intersection.</param>
            <returns>A value from the <see cref="T:SlimDX.PlaneIntersectionType" /> enumeration describing the result of the intersection test.</returns>
        </member>
        <member name="M:SlimDX.Plane.Intersects(SlimDX.Plane,SlimDX.BoundingBox)">
            <summary>
Finds the intersection between a plane and a box.
</summary>
            <param name="plane">The source plane.</param>
            <param name="box">The box to check for intersection.</param>
            <returns>A value from the <see cref="T:SlimDX.PlaneIntersectionType" /> enumeration describing the result of the intersection test.</returns>
        </member>
        <member name="M:SlimDX.Plane.Intersects(SlimDX.Plane,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3@)">
            <summary>
Finds the intersection between a plane and a line.
</summary>
            <param name="plane">The source plane.</param>
            <param name="start">The start point of the line.</param>
            <param name="end">The end point of the line.</param>
            <param name="intersectPoint">If an intersection is found, contains the intersection point between the line and the plane.</param>
            <returns>
                <c>true</c> if an intersection is found; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Plane.Transform(SlimDX.Plane[],SlimDX.Quaternion@)">
            <summary>
Transforms an array of normalized planes by a quaternion rotation.
</summary>
            <param name="planes">The normalized source planes.</param>
            <param name="rotation">The quaternion rotation.</param>
            <returns>The transformed planes.</returns>
        </member>
        <member name="M:SlimDX.Plane.Transform(SlimDX.Plane@,SlimDX.Quaternion@,SlimDX.Plane@)">
            <summary>
Transforms a normalized plane by a quaternion rotation.
</summary>
            <param name="plane">The normalized source plane.</param>
            <param name="rotation">The quaternion rotation.</param>
            <param name="result">When the method completes, contains the transformed plane.</param>
        </member>
        <member name="M:SlimDX.Plane.Transform(SlimDX.Plane,SlimDX.Quaternion)">
            <summary>
Transforms a normalized plane by a quaternion rotation.
</summary>
            <param name="plane">The normalized source plane.</param>
            <param name="rotation">The quaternion rotation.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.Transform(SlimDX.Plane[],SlimDX.Matrix@)">
            <summary>
Transforms an array of normalized planes by a matrix.
</summary>
            <param name="planes">The normalized source planes.</param>
            <param name="transformation">The transformation matrix.</param>
            <returns>The transformed planes.</returns>
        </member>
        <member name="M:SlimDX.Plane.Transform(SlimDX.Plane@,SlimDX.Matrix@,SlimDX.Plane@)">
            <summary>
Transforms a normalized plane by a matrix.
</summary>
            <param name="plane">The normalized source plane.</param>
            <param name="transformation">The transformation matrix.</param>
            <param name="result">When the method completes, contains the transformed plane.</param>
        </member>
        <member name="M:SlimDX.Plane.Transform(SlimDX.Plane,SlimDX.Matrix)">
            <summary>
Transforms a normalized plane by a matrix.
</summary>
            <param name="plane">The normalized source plane.</param>
            <param name="transformation">The transformation matrix.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.Normalize(SlimDX.Plane@,SlimDX.Plane@)">
            <summary>
Changes the coefficients of the normal vector of the plane to make it of unit length.
</summary>
            <param name="plane">The source plane.</param>
            <param name="result">When the method completes, contains the normalized plane.</param>
        </member>
        <member name="M:SlimDX.Plane.Normalize(SlimDX.Plane)">
            <summary>
Changes the coefficients of the normal vector of the plane to make it of unit length.
</summary>
            <param name="plane">The source plane.</param>
            <returns>The normalized plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.Normalize">
            <summary>
Changes the coefficients of the normal vector of the plane to make it of unit length.
</summary>
        </member>
        <member name="M:SlimDX.Plane.DotNormal(SlimDX.Plane,SlimDX.Vector3)">
            <summary>
Calculates the dot product of the specified vector and the normal of the plane.
</summary>
            <param name="plane">The source plane.</param>
            <param name="point">The source vector.</param>
            <returns>The dot product of the specified vector and the normal of the plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.DotCoordinate(SlimDX.Plane,SlimDX.Vector3)">
            <summary>
Calculates the dot product of a specified vector and the normal of the plane plus the distance value of the plane.
</summary>
            <param name="plane">The source plane.</param>
            <param name="point">The source vector.</param>
            <returns>The dot product of a specified vector and the normal of the Plane plus the distance value of the plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.Dot(SlimDX.Plane,SlimDX.Vector4)">
            <summary>
Calculates the dot product of the specified vector and plane.
</summary>
            <param name="plane">The source plane.</param>
            <param name="point">The source vector.</param>
            <returns>The dot product of the specified vector and plane.</returns>
        </member>
        <member name="M:SlimDX.Plane.#ctor(SlimDX.Vector4)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Plane" /> class.
</summary>
            <param name="value">
A vector with the X, Y, and Z components defining the normal to the plane.
The W component defines the distance of the plane along its normal from the origin.
</param>
        </member>
        <member name="M:SlimDX.Plane.#ctor(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Plane" /> class.
</summary>
            <param name="point1">First point of a triangle defining the plane.</param>
            <param name="point2">Second point of a triangle defining the plane.</param>
            <param name="point3">Third point of a triangle defining the plane.</param>
        </member>
        <member name="M:SlimDX.Plane.#ctor(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Plane" /> class.
</summary>
            <param name="point">Any point that lies along the plane.</param>
            <param name="normal">The normal vector to the plane.</param>
        </member>
        <member name="M:SlimDX.Plane.#ctor(SlimDX.Vector3,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Plane" /> class.
</summary>
            <param name="normal">The normal vector to the plane.</param>
            <param name="d">Distance of the plane along its normal from the origin.</param>
        </member>
        <member name="M:SlimDX.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Plane" /> class.
</summary>
            <param name="a">X component of the normal defining the plane.</param>
            <param name="b">Y component of the normal defining the plane.</param>
            <param name="c">Z component of the normal defining the plane.</param>
            <param name="d">Distance of the plane along its normal from the origin.</param>
        </member>
        <member name="F:SlimDX.Plane.D">
            <summary>
The distance of the plane along its normal from the origin.
</summary>
        </member>
        <member name="F:SlimDX.Plane.Normal">
            <summary>
The normal vector of the plane.
</summary>
        </member>
        <member name="T:SlimDX.Plane">
            <summary>
Defines a plane in three dimensions.
</summary>
            <unmanaged>D3DXPLANE</unmanaged>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.PlaneConverter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.PlaneConverter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.PlaneConverter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Plane" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.Ray.Equals(SlimDX.Ray@,SlimDX.Ray@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Ray.Equals(SlimDX.Ray)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Ray.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Ray.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Ray.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Ray.op_Inequality(SlimDX.Ray,SlimDX.Ray)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Ray.op_Equality(SlimDX.Ray,SlimDX.Ray)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Ray.Intersects(SlimDX.Ray,SlimDX.BoundingSphere,System.Single@)">
            <summary>
Determines whether a ray intersects the specified object.
</summary>
            <param name="ray">The ray which will be tested for intersection.</param>
            <param name="sphere">A sphere that will be tested for intersection.</param>
            <param name="distance">When the method completes, contains the distance at which the ray intersected the plane.</param>
            <returns>
                <c>true</c> if the ray intersects the plane; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Ray.Intersects(SlimDX.Ray,SlimDX.BoundingBox,System.Single@)">
            <summary>
Determines whether a ray intersects the specified object.
</summary>
            <param name="ray">The ray which will be tested for intersection.</param>
            <param name="box">A box that will be tested for intersection.</param>
            <param name="distance">When the method completes, contains the distance at which the ray intersected the plane.</param>
            <returns>
                <c>true</c> if the ray intersects the plane; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Ray.Intersects(SlimDX.Ray,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,System.Single@,System.Single@,System.Single@)">
            <summary>
Determines whether a ray intersects the specified object.
</summary>
            <param name="ray">The ray which will be tested for intersection.</param>
            <param name="vertex1">The first vertex of a triangle that will be tested for intersection.</param>
            <param name="vertex2">The second vertex of a triangle that will be tested for intersection.</param>
            <param name="vertex3">The third vertex of a triangle that will be tested for intersection.</param>
            <param name="distance">When the method completes, contains the distance at which the ray intersected the plane.</param>
            <param name="barycentricU">When the method completes, contains the U component of the barycentric hit coordinates.</param>
            <param name="barycentricV">When the method completes, contains the V component of the barycentric hit coordinates.</param>
            <returns>
                <c>true</c> if the ray intersects the plane; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Ray.Intersects(SlimDX.Ray,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,System.Single@)">
            <summary>
Determines whether a ray intersects the specified object.
</summary>
            <param name="ray">The ray which will be tested for intersection.</param>
            <param name="vertex1">The first vertex of a triangle that will be tested for intersection.</param>
            <param name="vertex2">The second vertex of a triangle that will be tested for intersection.</param>
            <param name="vertex3">The third vertex of a triangle that will be tested for intersection.</param>
            <param name="distance">When the method completes, contains the distance at which the ray intersected the plane.</param>
            <returns>
                <c>true</c> if the ray intersects the plane; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Ray.Intersects(SlimDX.Ray,SlimDX.Plane,System.Single@)">
            <summary>
Determines whether a ray intersects the specified object.
</summary>
            <param name="ray">The ray which will be tested for intersection.</param>
            <param name="plane">A plane that will be tested for intersection.</param>
            <param name="distance">When the method completes, contains the distance at which the ray intersected the plane.</param>
            <returns>
                <c>true</c> if the ray intersects the plane; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Ray.#ctor(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Ray" /> structure.
</summary>
            <param name="position">The location of the ray's origin.</param>
            <param name="direction">A unit vector specifying the direction in which the ray is pointing.</param>
        </member>
        <member name="F:SlimDX.Ray.Direction">
            <summary>
A unit vector specifying the direction in which the ray is pointing.
</summary>
        </member>
        <member name="F:SlimDX.Ray.Position">
            <summary>
Specifies the location of the ray's origin.
</summary>
        </member>
        <member name="T:SlimDX.Ray">
            <summary>
Defines a ray in three dimensions, specified by a starting position and a direction.
</summary>
        </member>
        <member name="M:SlimDX.Design.RayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.RayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.RayConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.RayConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.RayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.RayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.RayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.RayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.RayConverter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.RayConverter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.RayConverter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Ray" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.BoundingSphere.Equals(SlimDX.BoundingSphere@,SlimDX.BoundingSphere@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Equals(SlimDX.BoundingSphere)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.op_Inequality(SlimDX.BoundingSphere,SlimDX.BoundingSphere)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.op_Equality(SlimDX.BoundingSphere,SlimDX.BoundingSphere)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Intersects(SlimDX.BoundingSphere,SlimDX.Plane)">
            <summary>
Finds the intersection between a plane and a sphere.
</summary>
            <param name="sphere">The sphere to check for intersection.</param>
            <param name="plane">The source plane.</param>
            <returns>A value from the <see cref="T:SlimDX.PlaneIntersectionType" /> enumeration describing the result of the intersection test.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Intersects(SlimDX.BoundingSphere,SlimDX.Ray,System.Single@)">
            <summary>
Determines whether a sphere intersects the specified object.
</summary>
            <param name="sphere">The sphere which will be tested for intersection.</param>
            <param name="ray">The ray that will be tested for intersection.</param>
            <param name="distance">When the method completes, contains the distance from the ray's origin in which the intersection with the sphere occured.</param>
            <returns>
                <c>true</c> if the two objects are intersecting; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Intersects(SlimDX.BoundingSphere,SlimDX.BoundingSphere)">
            <summary>
Determines whether a sphere intersects the specified object.
</summary>
            <param name="sphere1">The first sphere which will be tested for intersection.</param>
            <param name="sphere2">The second sphere that will be tested for intersection.</param>
            <returns>
                <c>true</c> if the two objects are intersecting; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Intersects(SlimDX.BoundingSphere,SlimDX.BoundingBox)">
            <summary>
Determines whether a sphere intersects the specified object.
</summary>
            <param name="sphere">The sphere which will be tested for intersection.</param>
            <param name="box">The box that will be tested for intersection.</param>
            <returns>
                <c>true</c> if the two objects are intersecting; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Merge(SlimDX.BoundingSphere,SlimDX.BoundingSphere)">
            <summary>
Constructs a <see cref="T:SlimDX.BoundingSphere" /> that is the as large as the total combined area of the two specified spheres.
</summary>
            <param name="sphere1">The first sphere to merge.</param>
            <param name="sphere2">The second sphere to merge.</param>
            <returns>The newly constructed bounding sphere.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.FromPoints(SlimDX.Vector3[])">
            <summary>
Constructs a <see cref="T:SlimDX.BoundingSphere" /> that fully contains the given points.
</summary>
            <param name="points">The points that will be contained by the sphere.</param>
            <returns>The newly constructed bounding sphere.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.FromBox(SlimDX.BoundingBox)">
            <summary>
Constructs a <see cref="T:SlimDX.BoundingSphere" /> from a given box.
</summary>
            <param name="box">The box that will designate the extents of the sphere.</param>
            <returns>The newly constructed bounding sphere.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Contains(SlimDX.BoundingSphere,SlimDX.Vector3)">
            <summary>
Determines whether the sphere contains the specified point.
</summary>
            <param name="sphere">The sphere that will be checked for containment.</param>
            <param name="vector">The point that will be checked for containment.</param>
            <returns>A member of the <see cref="T:SlimDX.ContainmentType" /> enumeration indicating whether the two objects intersect, are contained, or don't meet at all.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Contains(SlimDX.BoundingSphere,SlimDX.BoundingSphere)">
            <summary>
Determines whether the sphere contains the specified sphere.
</summary>
            <param name="sphere1">The first sphere that will be checked for containment.</param>
            <param name="sphere2">The second sphere that will be checked for containment.</param>
            <returns>A member of the <see cref="T:SlimDX.ContainmentType" /> enumeration indicating whether the two objects intersect, are contained, or don't meet at all.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.Contains(SlimDX.BoundingSphere,SlimDX.BoundingBox)">
            <summary>
Determines whether the sphere contains the specified box.
</summary>
            <param name="sphere">The sphere that will be checked for containment.</param>
            <param name="box">The box that will be checked for containment.</param>
            <returns>A member of the <see cref="T:SlimDX.ContainmentType" /> enumeration indicating whether the two objects intersect, are contained, or don't meet at all.</returns>
        </member>
        <member name="M:SlimDX.BoundingSphere.#ctor(SlimDX.Vector3,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.BoundingSphere" /> structure.
</summary>
            <param name="center">The center of the bounding sphere.</param>
            <param name="radius">The radius of the sphere.</param>
        </member>
        <member name="F:SlimDX.BoundingSphere.Radius">
            <summary>
The radius of the sphere.
</summary>
        </member>
        <member name="F:SlimDX.BoundingSphere.Center">
            <summary>
Specifies the center point of the sphere.
</summary>
        </member>
        <member name="T:SlimDX.BoundingSphere">
            <summary>
A bounding sphere, specified by a center vector and a radius.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingSphereConverter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.BoundingSphereConverter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.BoundingSphereConverter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.BoundingSphere" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.BoundingBox.Equals(SlimDX.BoundingBox@,SlimDX.BoundingBox@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Equals(SlimDX.BoundingBox)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.op_Inequality(SlimDX.BoundingBox,SlimDX.BoundingBox)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.op_Equality(SlimDX.BoundingBox,SlimDX.BoundingBox)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Intersects(SlimDX.BoundingBox,SlimDX.Plane)">
            <summary>
Finds the intersection between a plane and a box.
</summary>
            <param name="box">The box to check for intersection.</param>
            <param name="plane">The source plane.</param>
            <returns>A value from the <see cref="T:SlimDX.PlaneIntersectionType" /> enumeration describing the result of the intersection test.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Intersects(SlimDX.BoundingBox,SlimDX.Ray,System.Single@)">
            <summary>
Determines whether a box intersects the specified object.
</summary>
            <param name="box">The box which will be tested for intersection.</param>
            <param name="ray">The ray that will be tested for intersection.</param>
            <param name="distance">When the method completes, contains the distance from the ray's origin in which the intersection with the box occured.</param>
            <returns>
                <c>true</c> if the two objects are intersecting; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Intersects(SlimDX.BoundingBox,SlimDX.BoundingSphere)">
            <summary>
Determines whether a box intersects the specified object.
</summary>
            <param name="box">The box which will be tested for intersection.</param>
            <param name="sphere">The sphere that will be tested for intersection.</param>
            <returns>
                <c>true</c> if the two objects are intersecting; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Intersects(SlimDX.BoundingBox,SlimDX.BoundingBox)">
            <summary>
Determines whether a box intersects the specified object.
</summary>
            <param name="box1">The first box which will be tested for intersection.</param>
            <param name="box2">The second box that will be tested for intersection.</param>
            <returns>
                <c>true</c> if the two objects are intersecting; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Merge(SlimDX.BoundingBox,SlimDX.BoundingBox)">
            <summary>
Constructs a <see cref="T:SlimDX.BoundingBox" /> that is the as large as the total combined area of the two specified boxes.
</summary>
            <param name="box1">The first box to merge.</param>
            <param name="box2">The second box to merge.</param>
            <returns>The newly constructed bounding box.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.FromSphere(SlimDX.BoundingSphere)">
            <summary>
Constructs a <see cref="T:SlimDX.BoundingBox" /> from a given sphere.
</summary>
            <param name="sphere">The sphere that will designate the extents of the box.</param>
            <returns>The newly constructed bounding box.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.FromPoints(SlimDX.DataStream,System.Int32,System.Int32)">
            <summary>
Constructs a <see cref="T:SlimDX.BoundingBox" /> that fully contains the given points.
</summary>
            <param name="points">The points that will be contained by the box.</param>
            <param name="count">The number of vertices in the stream.</param>
            <param name="stride">The number of bytes between vertices.</param>
            <returns>The newly constructed bounding box.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.FromPoints(SlimDX.Vector3[])">
            <summary>
Constructs a <see cref="T:SlimDX.BoundingBox" /> that fully contains the given points.
</summary>
            <param name="points">The points that will be contained by the box.</param>
            <returns>The newly constructed bounding box.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Contains(SlimDX.BoundingBox,SlimDX.Vector3)">
            <summary>
Determines whether the box contains the specified point.
</summary>
            <param name="box">The box that will be checked for containment.</param>
            <param name="vector">The point that will be checked for containment.</param>
            <returns>A member of the <see cref="T:SlimDX.ContainmentType" /> enumeration indicating whether the two objects intersect, are contained, or don't meet at all.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Contains(SlimDX.BoundingBox,SlimDX.BoundingSphere)">
            <summary>
Determines whether the box contains the specified sphere.
</summary>
            <param name="box">The box that will be checked for containment.</param>
            <param name="sphere">The sphere that will be checked for containment.</param>
            <returns>A member of the <see cref="T:SlimDX.ContainmentType" /> enumeration indicating whether the two objects intersect, are contained, or don't meet at all.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.Contains(SlimDX.BoundingBox,SlimDX.BoundingBox)">
            <summary>
Determines whether the box contains the specified box.
</summary>
            <param name="box1">The first box that will be checked for containment.</param>
            <param name="box2">The second box that will be checked for containment.</param>
            <returns>A member of the <see cref="T:SlimDX.ContainmentType" /> enumeration indicating whether the two objects intersect, are contained, or don't meet at all.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.GetCorners">
            <summary>
Retrieves the eight corners of the bounding box.
</summary>
            <returns>An array of points representing the eight corners of the bounding box.</returns>
        </member>
        <member name="M:SlimDX.BoundingBox.#ctor(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.BoundingBox" /> structure.
</summary>
            <param name="minimum">The lowest corner of the box.</param>
            <param name="maximum">The highest corner of the box.</param>
        </member>
        <member name="F:SlimDX.BoundingBox.Minimum">
            <summary>
The lowest corner of the box.
</summary>
        </member>
        <member name="F:SlimDX.BoundingBox.Maximum">
            <summary>
The highest corner of the box.
</summary>
        </member>
        <member name="T:SlimDX.BoundingBox">
            <summary>
An axis aligned bounding box, specified by minimum and maximum vectors.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SlimDX.PlaneIntersectionType">
            <summary>
Describes the result of an intersection with a plane in three dimensions.
</summary>
        </member>
        <member name="F:SlimDX.PlaneIntersectionType.Intersecting">
            <summary>
The object is intersecting the plane.
</summary>
        </member>
        <member name="F:SlimDX.PlaneIntersectionType.Front">
            <summary>
The object is in front of the plane.
</summary>
        </member>
        <member name="F:SlimDX.PlaneIntersectionType.Back">
            <summary>
The object is behind the plane.
</summary>
        </member>
        <member name="T:SlimDX.ContainmentType">
            <summary>
Describes how one bounding volume contains another.
</summary>
        </member>
        <member name="F:SlimDX.ContainmentType.Intersects">
            <summary>
The two bounding volumes overlap.
</summary>
        </member>
        <member name="F:SlimDX.ContainmentType.Contains">
            <summary>
One bounding volume completely contains another.
</summary>
        </member>
        <member name="F:SlimDX.ContainmentType.Disjoint">
            <summary>
The two bounding volumes don't intersect at all.
</summary>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.BoundingBoxConverter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.BoundingBoxConverter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.BoundingBoxConverter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.BoundingBox" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="P:SlimDX.DataStream.DataPointer">
            <summary>Gets the internal pointer to the current stream's backing store.</summary>
            <value>An IntPtr to the buffer being used as a backing store.</value>
        </member>
        <member name="P:SlimDX.DataStream.Position">
            <summary>Gets or sets the position within the current stream.</summary>
            <value>The current position within the stream.</value>
            <seealso cref="T:System.IO.Stream">Stream Class</seealso>
        </member>
        <member name="P:SlimDX.DataStream.Length">
            <summary>Gets the length in bytes of the stream.</summary>
            <value>A long value representing the length of the stream in bytes.</value>
        </member>
        <member name="P:SlimDX.DataStream.CanWrite">
            <summary>Gets a value indicating whether the current stream supports writing.</summary>
            <value>
                <c>true</c> if the stream supports writing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SlimDX.DataStream.CanSeek">
            <summary>Gets a value indicating whether the current stream supports seeking.</summary>
            <value>Always <c>true</c>.</value>
        </member>
        <member name="P:SlimDX.DataStream.CanRead">
            <summary>Gets a value indicating whether the current stream supports reading.</summary>
            <value>
                <c>true</c> if the stream supports reading; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SlimDX.DataStream.SetLength(System.Int64)">
            <summary>
Not supported.
</summary>
            <param name="value">Always ignored.</param>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:SlimDX.DataStream.Flush">
            <summary>
Not supported.
</summary>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:SlimDX.DataStream.ReadRange``1(System.Int32)">
            <summary>
Reads an array of values from the current stream, and advances the current position
within this stream by the number of bytes written.
</summary>
            <typeparam name="T">The type of the values to be read from the stream.</typeparam>
            <returns>An array of values that was read from the current stream.</returns>
            <exception cref="T:System.NotSupportedException">This stream does not support reading.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="count" /> is negative.</exception>
        </member>
        <member name="M:SlimDX.DataStream.ReadRange``1(``0[],System.Int32,System.Int32)">
            <summary>
Reads a sequence of elements from the current stream into a target buffer and
advances the position within the stream by the number of bytes read.
</summary>
            <param name="buffer">An array of values to be read from the stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing
the data read from the current stream.</param>
            <param name="count">The number of values to be read from the current stream.</param>
            <returns>The number of bytes read from the stream.</returns>
            <exception cref="T:System.NotSupportedException">This stream does not support reading.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="buffer" /> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</exception>
        </member>
        <member name="M:SlimDX.DataStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
Reads a sequence of bytes from the current stream and advances the position
within the stream by the number of bytes read.
</summary>
            <param name="buffer">An array of values to be read from the stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing
the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The number of bytes read from the stream.</returns>
            <exception cref="T:System.NotSupportedException">This stream does not support reading.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="buffer" /> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</exception>
        </member>
        <member name="M:SlimDX.DataStream.Read``1">
            <summary>
Reads a single value from the current stream and advances the current
position within this stream by the number of bytes read.
</summary>
            <typeparam name="T">The type of the value to be read from the stream.</typeparam>
            <returns>The value that was read.</returns>
            <exception cref="T:System.NotSupportedException">This stream does not support reading.</exception>
            <exception cref="T:System.IO.EndOfStreamException">There is not enough space in the current
stream to read a value of this type.</exception>
        </member>
        <member name="M:SlimDX.DataStream.WriteRange(System.IntPtr,System.Int64)">
            <summary>
Writes a range of bytes to the current stream, and advances the current position
within this stream by the number of bytes written.
</summary>
            <param name="source">A pointer to the location to start copying from.</param>
            <param name="count">The number of bytes to copy from source to the current stream.</param>
            <exception cref="T:System.NotSupportedException">This stream does not support writing.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> is a zero pointer.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="count" /> is negative.</exception>
        </member>
        <member name="M:SlimDX.DataStream.WriteRange``1(``0[])">
            <summary>
Writes an array of values to the current stream, and advances the current position
within this stream by the number of bytes written.
</summary>
            <param name="data">An array of values to be written to the current stream.</param>
            <exception cref="T:System.NotSupportedException">This stream does not support writing.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="data" /> is a null reference.</exception>
        </member>
        <member name="M:SlimDX.DataStream.WriteRange``1(``0[],System.Int32,System.Int32)">
            <summary>
Writes an array of values to the current stream, and advances the current position
within this stream by the number of bytes written.
</summary>
            <typeparam name="T">The type of the values to be written to the stream.</typeparam>
            <param name="data">An array of values to be written to the stream.</param>
            <param name="offset">The zero-based offset in data at which to begin copying values to the current stream.</param>
            <param name="count">The number of values to be written to the current stream. If this is zero,
all of the contents <paramref name="data" /> will be written.</param>
            <exception cref="T:System.NotSupportedException">This stream does not support writing.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="data" /> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</exception>
        </member>
        <member name="M:SlimDX.DataStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
Writes a sequence of bytes to the current stream and advances the current
position within this stream by the number of bytes written.
</summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.NotSupportedException">This stream does not support writing.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="buffer" /> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</exception>
        </member>
        <member name="M:SlimDX.DataStream.Write``1(``0)">
            <summary>
Writes a single value to the stream, and advances the current position
within this stream by the number of bytes written.
</summary>
            <typeparam name="T">The type of the value to be written to the stream.</typeparam>
            <param name="value">The value to write to the stream.</param>
            <exception cref="T:System.NotSupportedException">The stream does not support writing.</exception>
            <exception cref="T:System.IO.EndOfStreamException">There is not enough space
remaining in the stream to write this type of value.</exception>
        </member>
        <member name="M:SlimDX.DataStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the position within the current stream.</summary>
            <exception cref="T:System.InvalidOperationException">Attempted to seek outside of the bounds of the stream.</exception>
        </member>
        <member name="M:SlimDX.DataStream.Finalize">
            <summary>
Releases unmanaged resources and performs other cleanup operations before the <see cref="T:SlimDX.DataStream" /> is reclaimed by garbage collection.
</summary>
        </member>
        <member name="M:SlimDX.DataStream.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.DataStream" />.
</summary>
        </member>
        <member name="M:SlimDX.DataStream.#ctor(System.Array,System.Boolean,System.Boolean)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DataStream" /> class, using a managed buffer as a backing store.
</summary>
            <param name="userBuffer">A managed array to be used as a backing store.</param>
            <param name="canRead">
                <c>true</c> if reading from the buffer should be allowed; otherwise, <c>false</c>.</param>
            <param name="canWrite">
                <c>true</c> if writing to the buffer should be allowed; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:SlimDX.DataStream.#ctor(System.IntPtr,System.Int64,System.Boolean,System.Boolean)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DataStream" /> class, using an unmanaged buffer as a backing store.
</summary>
            <param name="userBuffer">A pointer to the buffer to be used as a backing store.</param>
            <param name="sizeInBytes">The size of the buffer provided, in bytes.</param>
            <param name="canRead">
                <c>true</c> if reading from the buffer should be allowed; otherwise, <c>false</c>.</param>
            <param name="canWrite">
                <c>true</c> if writing to the buffer should be allowed; otherwise, <c>false</c>.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="userBuffer" /> is a zero pointer.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="sizeInBytes" /> is less than 1.</exception>
        </member>
        <member name="M:SlimDX.DataStream.#ctor(System.Int64,System.Boolean,System.Boolean)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DataStream" /> class, and allocates a new buffer to use as a backing store.
</summary>
            <param name="sizeInBytes">The size of the buffer to be allocated, in bytes.</param>
            <param name="canRead">
                <c>true</c> if reading from the buffer should be allowed; otherwise, <c>false</c>.</param>
            <param name="canWrite">
                <c>true</c> if writing to the buffer should be allowed; otherwise, <c>false</c>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="sizeInBytes" /> is less than 1.</exception>
        </member>
        <member name="T:SlimDX.DataStream">
            <summary>
Provides a stream interface to a buffer located in unmanaged memory.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.StencilOperation">
            <summary>The stencil operations that can be performed during depth-stencil testing.</summary>
            <unmanaged>D3D10_STENCIL_OP</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.SpriteFlags">
            <summary>
Flags that control the behavior of <see cref="T:SlimDX.Direct3D10.Sprite" /> rendering.
</summary>
            <unmanaged>D3DX10_SPRITE_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.SpriteFlags.IncreaseTextureReferenceCount">
            <summary>
Increases the reference count of textures when DrawSpritesBuffered is called.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.SpriteFlags.SaveState">
            <summary>
Saves render state when sprites are rendered, and restores the previous state once rendering
is complete.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.SpriteFlags.SortFrontToBack">
            <summary>
Sort the sprites from front to back based on their depth; sprites closer to the
camera will be rendered first.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.SpriteFlags.SortBackToFront">
            <summary>
Sort the sprites from back to front based on their depth; sprites further away from the
camera will be rendered first.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.SpriteFlags.GroupByTexture">
            <summary>
Group sprites by texture before rendering; improves performance when many sprites
share textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.SpriteFlags.None">
            <summary>
No flags.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.ShaderResourceViewDimension">
            <summary>Identifies the type of the resource that will be viewed.</summary>
            <unmanaged>D3D10_SRV_DIMENSION</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.ResourceViewDimension">
            <summary />
            <unmanaged>D3D10_RTV_DIMENSION</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.ResourceUsage">
            <summary />
            <unmanaged>D3D10_USAGE</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.ResourceOptionFlags">
            <summary />
            <unmanaged>D3D10_RESOURCE_MISC_FLAG</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.ResourceDimension">
            <summary />
            <unmanaged>D3D10_RESOURCE_DIMENSION</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.RenderTargetViewDimension">
            <summary />
            <unmanaged>D3D10_RTV_DIMENSION</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.QueryType">
            <summary>
Values which description query types.
</summary>
            <unmanaged>D3D10_QUERY</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.QueryFlags">
            <summary>
Flags for describing query options and behavior.
</summary>
            <unmanaged>D3D10_QUERY_MISC_FLAG</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D10.PrimitiveTopology">
            <summary>Specifies how the pipeline should interpret vertex data bound to the input assembler stage.</summary>
            <unmanaged>D3D10_PRIMITIVE_TOPOLOGY</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.TriangleStripWithAdjacency">
            <summary>
Interpret the vertex data as triangle strip with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.TriangleListWithAdjacency">
            <summary>
Interpret the vertex data as list of triangles with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.LineStripWithAdjacency">
            <summary>
Interpret the vertex data as line strip with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.LineListWithAdjacency">
            <summary>
Interpret the vertex data as list of lines with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.TriangleStrip">
            <summary>
Interpret the vertex data as a triangle strip.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.TriangleList">
            <summary>
Interpret the vertex data as a list of triangles.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.LineStrip">
            <summary>
Interpret the vertex data as a line strip.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.LineList">
            <summary>
Interpret the vertex data as a list of lines.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.PointList">
            <summary>
Interpret the vertex data as a list of points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.PrimitiveTopology.Undefined">
            <summary>
The IA stage has not been initialized with a primitive topology. The IA stage will not function properly unless a primitive topology is defined.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.NormalMapFlags">
            <summary>
Normal maps generation constants.
</summary>
            <unmanaged>D3DX10_NORMALMAP_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.NormalMapFlags.ComputeOcclusion">
            <summary>
Computes the per-pixel occlusion term and encodes it into the alpha. An alpha of 1 means that the
pixel is not obscured in any way, and an alpha of 0 means that the pixel is completely obscured.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.NormalMapFlags.InvertSign">
            <summary>
Inverts the direction of each normal.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.NormalMapFlags.Mirror">
            <summary>
Same as specifying the MirrorU and MirrorV flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.NormalMapFlags.MirrorV">
            <summary>
Indicates that pixels off the edge of the texture on the v-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.NormalMapFlags.MirrorU">
            <summary>
Indicates that pixels off the edge of the texture on the u-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.MeshOptimizeFlags">
            <summary>
Values that indicate how to alter mesh data during an optimization operation.
</summary>
            <unmanaged>D3DX10_MESHOPT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshOptimizeFlags.DeviceIndependent">
            <summary>
Affects the vertex cache size. Using this flag specifies a default vertex cache size that works well on legacy hardware.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshOptimizeFlags.DoNotSplit">
            <summary>
While attribute sorting, do not split vertices that are shared between attribute groups.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshOptimizeFlags.IgnoreVertices">
            <summary>
Optimize the faces only; do not optimize the vertices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshOptimizeFlags.StripReorder">
            <summary>
Reorders faces to maximize length of adjacent triangles.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshOptimizeFlags.VertexCache">
            <summary>
Reorders faces to increase the cache hit rate of vertex caches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshOptimizeFlags.AttributeSort">
            <summary>
Reorders faces to optimize for fewer attribute bundle state changes and enhanced draw performance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshOptimizeFlags.Compact">
            <summary>
Reorders faces to remove unused vertices and faces.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.MeshDiscardFlags">
            <summary>Specifies which types of mesh data to discard from the device.</summary>
            <unmanaged>D3DX10_MESH_DISCARD_FLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshDiscardFlags.DiscardDeviceBuffers">
            <summary>
Indicates that any buffers committed to the device should be discarded.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshDiscardFlags.DiscardAdjacency">
            <summary>
Indicates that the adjacency buffer should be discarded.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshDiscardFlags.DiscardPointRepresentation">
            <summary>
Indicates that the point representation buffer should be discarded.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshDiscardFlags.DiscardAttributeTable">
            <summary>
Indicates that the attribute table should be discarded.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshDiscardFlags.DiscardAttributeBuffer">
            <summary>
Indicates that the attribute buffer should be discarded.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.MeshFlags">
            <summary>Specifies creation options for a mesh.</summary>
            <unmanaged>D3DX10_MESH</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshFlags.HasAdjacency">
            <summary>
Indicates that the mesh should contain adjacency information.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshFlags.Has32BitIndices">
            <summary>
Indicates that the mesh should use 32-bit indices rather than 16-bit indices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MeshFlags.None">
            <summary>
Indicates standard mesh creation options..
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.MapFlags">
            <summary>Specifies how the CPU should respond when Map() is called on a resource being used by the GPU.</summary>
            <unmanaged>D3D10_MAP_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.MapFlags.DoNotWait">
            <summary>
Do not wait for the resource to become available. The map method will return WasStillRendering when the GPU blocks the CPU from
accessing a resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MapFlags.None">
            <summary>
Wait for the resource to become available.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.MapMode">
            <summary>Identifies a resource to be accessed for reading and writing by the CPU.</summary>
            <unmanaged>D3D10_MAP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.MapMode.WriteNoOverwrite">
            <summary>
Resource is mapped for writing; the existing contents of the resource cannot be overwritten. This flag is only valid on
vertex and index buffers. The resource must have been created with write access.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MapMode.WriteDiscard">
            <summary>
Resource is mapped for writing; the previous contents of the resource will be undefined. The resource must have been created with write access.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MapMode.ReadWrite">
            <summary>
Resource is mapped for reading and writing. The resource must have been created with read and write access.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MapMode.Write">
            <summary>
Resource is mapped for writing. The resource must have been created with write access.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.MapMode.Read">
            <summary>
Resource is mapped for reading. The resource must have been created with read access.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.InputClassification">
            <summary>Type of data contained in an input slot.</summary>
            <unmanaged>D3D10_INPUT_CLASSIFICATION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.InputClassification.PerInstanceData">
            <summary>
The data in the input slot is per-instance data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.InputClassification.PerVertexData">
            <summary>
The data in the input slot is per-vertex data.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.ImageFileFormat">
            <summary>Specifies image file formats supported by runtime.</summary>
            <unmanaged>D3DX10_IMAGE_FILE_FORMAT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.ImageFileFormat.Wmp">
            <summary>
Windows Media Player format (WMP).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ImageFileFormat.Gif">
            <summary>
Graphics Interchange Format (GIF).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ImageFileFormat.Tiff">
            <summary>
Tagged Image File Format (TIFF).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ImageFileFormat.Dds">
            <summary>
DirectDraw surface (DDS) file format. Stores textures, volume textures, and cubic environment maps, with or without
mipmap levels, and with or without pixel compression.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ImageFileFormat.Png">
            <summary>
Portable Network Graphics (PNG) file format. A non-proprietary bitmap format using lossless compression.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ImageFileFormat.Jpg">
            <summary>
Joint Photographic Experts Group (JPEG) compressed file format. Specifies variable compression of 24-bit RGB color
and 8-bit gray-scale Tagged Image File Format (TIFF) image document files.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ImageFileFormat.Bmp">
            <summary>
Windows bitmap (BMP) file format. Contains a header that describes the resolution of the device on which the
rectangle of pixels was created, the dimensions of the rectangle, the size of the array of bits, a logical palette,
and an array of bits that defines the relationship between pixels in the bitmapped image and entries in the logical palette.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FormatSupport">
            <summary>Identifies which resources are supported for a given format and given device.</summary>
            <unmanaged>D3D10_FORMAT_SUPPORT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.FormatMultisampleLoadSupport">
            <summary>
The format can be used as a multisample texture and read into a shader with the HLSL "load" function.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.FormatMultisampleRenderTargetSupport">
            <summary>
The format can be used as a multisample render target.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.FormatCastSupport">
            <summary>
The format can be cast to another format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.FormatDisplaySupport">
            <summary>
The format can be displayed on screen.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.MultisampleResolve">
            <summary>
Multisampling resolution is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.CpuLocking">
            <summary>
CPU locking is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.DepthStencil">
            <summary>
Depth-stencil surfaces are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.BlendOperation">
            <summary>
Blend operations are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.RenderTarget">
            <summary>
Rendertargets are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.MipMapAutoGeneration">
            <summary>
Automatic generation of mipmaps is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.MipMap">
            <summary>
Mipmaps are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.ShaderSampleComparisonIntrinsic">
            <summary>
The intrinsic HLSL "samplecmp" and "samplecmplevelzero" are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.ShaderSampleIntrinsic">
            <summary>
The intrinsic HLSL "sample" function is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.ShaderLoadIntrinsic">
            <summary>
The intrinsic HLSL "load" function is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.TextureCube">
            <summary>
Cube textures are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.Texture3D">
            <summary>
3D textures are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.Texture2D">
            <summary>
2D textures are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.Texture1D">
            <summary>
1D textures are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.StreamOutputBuffer">
            <summary>
Streaming output buffers are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.IndexBuffer">
            <summary>
Index buffers are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.VertexBuffer">
            <summary>
Vertex buffers are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.Buffer">
            <summary>
Buffer resources are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FormatSupport.None">
            <summary>
No features are supported.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FontWeight">
            <summary>
Specifies weights for font rendering.
</summary>
            <unmanaged href="ms901140">FW</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.Black">
            <summary>
Use a black weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.Heavy">
            <summary>
Use a heavy weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.UltraBold">
            <summary>
Use an ultra bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.ExtraBold">
            <summary>
Use an extra bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.Bold">
            <summary>
Use a bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.DemiBold">
            <summary>
Use a demi-bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.SemiBold">
            <summary>
Use a semi-bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.Medium">
            <summary>
Use a medium weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.Regular">
            <summary>
Use a regular weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.Normal">
            <summary>
Use a normal weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.Light">
            <summary>
Make the font light.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.UltraLight">
            <summary>
Make the font ultra light.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.ExtraLight">
            <summary>
Make the font extra light.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.Thin">
            <summary>
Make the font thin.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontWeight.DoNotCare">
            <summary>
The font weight doesn't matter.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FontQuality">
            <summary>
Specifies quality options for font rendering.
</summary>
            <unmanaged href="ms901140">QUALITY</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FontQuality.ClearTypeNatural">
            <summary>
Clear type natural quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontQuality.ClearType">
            <summary>
Clear type quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontQuality.Antialiased">
            <summary>
Antialiased quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontQuality.NonAntialiased">
            <summary>
Non-antialiased quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontQuality.Proof">
            <summary>
Proof quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontQuality.Draft">
            <summary>
Draft quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontQuality.Default">
            <summary>
Default quality levels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FontPrecision">
            <summary>
Defines precision levels for font rendering.
</summary>
            <unmanaged href="cc215248">OutPrecision</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.PostScriptOnly">
            <summary>
PostScript only precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.ScreenOutline">
            <summary>
Screen outline precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.Outline">
            <summary>
Outline precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.TrueTypeOnly">
            <summary>
TrueType only precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.Raster">
            <summary>
Raster precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.Device">
            <summary>
Device precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.TrueType">
            <summary>
TrueType precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.Stroke">
            <summary>
Stroke-level precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.Character">
            <summary>
Character-level precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.String">
            <summary>
String-level precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPrecision.Default">
            <summary>
Default precision.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FontPitchAndFamily">
            <summary>
Defines pitch and family settings for fonts.
</summary>
            <unmanaged href="ms901140">(various font constants)</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Decorative">
            <summary>
Use the Decorative family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Script">
            <summary>
Use the Script family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Modern">
            <summary>
Use the Modern family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Swiss">
            <summary>
Use the Swiss family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Roman">
            <summary>
Use the Roman family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.DontCare">
            <summary>
The font family doesn't matter.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Mono">
            <summary>
Mono pitch.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Variable">
            <summary>
Variable pitch.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Fixed">
            <summary>
Fixed pitch.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontPitchAndFamily.Default">
            <summary>
Default pitch.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FontDrawFlags">
            <summary>
Specifies formatting options for text rendering.
</summary>
            <unmanaged href="bb773199">DT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.RtlReading">
            <summary>
Rendering the text in right-to-left reading order.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.NoClip">
            <summary>
Don't clip the text.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.ExpandTabs">
            <summary>
Expand tab characters.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.SingleLine">
            <summary>
Force all text to a single line.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.WordBreak">
            <summary>
Allow word breaks.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.Bottom">
            <summary>
Align the text to the bottom.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.VerticalCenter">
            <summary>
Vertically align the text to the center.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.Right">
            <summary>
Align the text to the right.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.Center">
            <summary>
Align the text to the center.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.Left">
            <summary>
Align the text to the left.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontDrawFlags.Top">
            <summary>
Align the text to the top.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FontCharacterSet">
            <summary>
Defines possible character sets for fonts.
</summary>
            <unmanaged>CHARSET</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Mac">
            <summary>
The Mac character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Baltic">
            <summary>
The Baltic character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Russian">
            <summary>
The Russian character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.EastEurope">
            <summary>
The East Europe character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Thai">
            <summary>
The Thai character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Vietnamese">
            <summary>
The Vietnamese character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Turkish">
            <summary>
The Turkish character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Greek">
            <summary>
The Greek character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Arabic">
            <summary>
The Arabic character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Hebrew">
            <summary>
The Hebrew character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Johab">
            <summary>
The Johab character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Oem">
            <summary>
The OEM character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.ChineseBig5">
            <summary>
The Chinese character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.GB2312">
            <summary>
The GB2312 character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Hangul">
            <summary>
The Hangul character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.ShiftJIS">
            <summary>
The ShiftJIS character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Symbol">
            <summary>
The symbol character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Default">
            <summary>
The default system character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FontCharacterSet.Ansi">
            <summary>
The ANSI character set.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FilterFlags">
            <summary>Specifies possible texture filtering flags.</summary>
            <unmanaged>D3DX10_FILTER_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.StandardRgb">
            <summary>
Combines the StandardRgbIn and StandardRgbOut flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.StandardRgbOut">
            <summary>
Output data is in standard RGB (sRGB) color space.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.StandardRgbIn">
            <summary>
Input data is in standard RGB (sRGB) color space.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.DitherDiffusion">
            <summary>
Do diffuse dithering on the image when changing from one format to another.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.Dither">
            <summary>
The resulting image must be dithered using a 4x4 ordered dither algorithm. This happens when converting from one format to another.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.Mirror">
            <summary>
Combines the MirrorU, MirrorV, and MirrorW flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.MirrowW">
            <summary>
Pixels off the edge of the texture on the w-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.MirrorV">
            <summary>
Pixels off the edge of the texture on the v-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.MirrorU">
            <summary>
Pixels off the edge of the texture on the u-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.Box">
            <summary>
Each pixel is computed by averaging a 2x2(x2) box of pixels from the source image. This filter works only when the
dimensions of the destination are half those of the source, as is the case with mipmaps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.Triangle">
            <summary>
Every pixel in the source image contributes equally to the destination image. This is the slowest of the filters.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.Linear">
            <summary>
Each destination pixel is computed by sampling the four nearest pixels from the source image. This filter
works best when the scale on both axes is less than two.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.Point">
            <summary>
Each destination pixel is computed by sampling the nearest pixel from the source image.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FilterFlags.None">
            <summary>
No scaling or filtering will take place. Pixels outside the bounds of the source image are assumed to be transparent black.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Filter">
            <summary>Specifies filtering options used during texture sampling.</summary>
            <unmanaged>D3D10_FILTER</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.Texture1Bit">
            <summary>
For use with pixel shaders utilizing textures in the R1_UNorm format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonAnisotropic">
            <summary>
Use anisotropic interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonMinMagMipLinear">
            <summary>
Use linear interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonMinMagLinearMipPoint">
            <summary>
Use linear interpolation for minification and magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonMinLinearMagPointMipLinear">
            <summary>
Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonMinLinearMagMipPoint">
            <summary>
Use linear interpolation for minification; use point sampling for magnification and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonMinPointMagMipLinear">
            <summary>
Use point sampling for minification; use linear interpolation for magnification and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonMinPointMagLinearMipPoint">
            <summary>
Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonMinMagPointMipLinear">
            <summary>
Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.
Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.ComparisonMinMagMipPoint">
            <summary>
Use point sampling for minification, magnification, and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.Anisotropic">
            <summary>
Use anisotropic interpolation for minification, magnification, and mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.MinMagMipLinear">
            <summary>
Use linear interpolation for minification, magnification, and mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.MinMagLinearMipPoint">
            <summary>
Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.MinLinearMagPointMipLinear">
            <summary>
Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.MinLinearMagMipPoint">
            <summary>
Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.MinPointMagMipLinear">
            <summary>
Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.MinPointMagLinearMipPoint">
            <summary>
Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.MinMagPointMipLinear">
            <summary>
Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Filter.MinMagMipPoint">
            <summary>
Use point sampling for minification, magnification, and mip-level sampling.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.FillMode">
            <summary>Determines the fill mode to use when rendering triangles.</summary>
            <unmanaged>D3D10_FILL_MODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.FillMode.Solid">
            <summary>
Fill the triangles formed by the vertices. Adjacent vertices are not drawn.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.FillMode.Wireframe">
            <summary>
Draw lines connecting the vertices. Adjacent vertices are not drawn.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.EffectVariableFlags">
            <summary>Specifies detailed information about <see cref="T:SlimDX.Direct3D10.Effect">Effect</see> variables.</summary>
            <unmanaged>D3D10_EFFECT_VARIABLE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.EffectVariableFlags.ExplicitBindPoint">
            <summary>
Indicates the variable has been explicitly bound using the register keyword in the effect code.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.EffectVariableFlags.Pooled">
            <summary>
Indicates that the variable or constant buffer resides in an effect pool. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.EffectVariableFlags.Annotation">
            <summary>
Indicates that the variable is an annotation or global.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.EffectVariableFlags.None">
            <summary>
Standard effect variable.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.DriverType">
            <summary>Specifies a device driver type.</summary>
            <unmanaged>D3D10_DRIVER_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.DriverType.Warp">
            <summary>
A WARP high performance software rasterizer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DriverType.Software">
            <summary>
Reserved. Do not use.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DriverType.Null">
            <summary>
A null device (a REF device with no rendering capability).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DriverType.Reference">
            <summary>
A software reference (REF) device.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DriverType.Hardware">
            <summary>
A hardware (HAL) device.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.DeviceCreationFlags">
            <summary>Flags controlling the creation of a device.</summary>
            <unmanaged>D3D10_CREATE_DEVICE_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.DeviceCreationFlags.PreventThreadingOptimizations">
            <summary>
Reserved. Do not use.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DeviceCreationFlags.SwitchToRef">
            <summary>
Indicates that both a REF and HAL device should be created, allowing the application to toggle
between them.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DeviceCreationFlags.Debug">
            <summary>
Indicates that the device should support the debug layer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DeviceCreationFlags.SingleThreaded">
            <summary>
Indicates that a single-threaded device should be created; by default, Direct3D 10 devices are
thread-safe. Specifying this flag causes thread-safety to be disabled.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DeviceCreationFlags.None">
            <summary>
Indicates no specific behavior.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.DepthWriteMask">
            <summary>Identifies mask values for writing to a depth-stencil buffer.</summary>
            <unmanaged>D3D10_DEPTH_WRITE_MASK</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthWriteMask.All">
            <summary>
Enables all writes to the depth-stencil buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthWriteMask.Zero">
            <summary>
Disables all writes to the depth-stencil buffer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.DepthStencilViewDimension">
            <summary>Specified the dimension (and access methodology) for depth-stencil resource views.</summary>
            <unmanaged>D3D10_DSV_DIMENSION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilViewDimension.Texture2DMultisampledArray">
            <summary>
The resource will be accessed as an array of 2D textures with multisampling support.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilViewDimension.Texture2DMultisampled">
            <summary>
The resource will be accessed as a 2D texture with multisampling support.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilViewDimension.Texture2DArray">
            <summary>
The resource will be accessed as an array of 2D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilViewDimension.Texture2D">
            <summary>
The resource will be accessed as a 2D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilViewDimension.Texture1DArray">
            <summary>
The resource will be accessed as an array of 1D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilViewDimension.Texture1D">
            <summary>
The resource will be accessed as a 1D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilViewDimension.Unknown">
            <summary>
The resource will be accessed according to its type, determined by the actual resource specified
during the creation of the view.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.DepthStencilClearFlags">
            <summary>Specifies which parts of the depth stencil buffer to clear.</summary>
            <unmanaged>D3D10_CLEAR_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilClearFlags.Stencil">
            <summary>
Indicates the stencil buffer should be cleared.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DepthStencilClearFlags.Depth">
            <summary>
Indicates the depth buffer should be cleared.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.DebugFeatureFlags">
            <summary>Flags controlling which debug features are enabled.</summary>
            <unmanaged href="bb173520">D3D10_DEBUG_FEATURE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.DebugFeatureFlags.PresentPerRender">
            <summary>
The runtime will call <see cref="T:SlimDX.DXGI.SwapChain">SwapChain.Present</see> after the render operation.
Presentation of buffers will occur according to the settings specified by the 
<see cref="T:SlimDX.Direct3D10.Debug">Debug.SwapChain</see> and <see cref="T:SlimDX.Direct3D10.Debug">Debug.PresentDelay</see> properties.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DebugFeatureFlags.FlushPerRender">
            <summary>
The runtime will call <see cref="T:SlimDX.Direct3D10.Device">Device.Flush</see> after the render operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.DebugFeatureFlags.FinishPerRender">
            <summary>
The application will wait for the GPU to complete the render operation before continuing.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.CullMode">
            <summary>Indicates triangles facing a particular direction are not drawn.</summary>
            <unmanaged>D3D10_CULL_MODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.CullMode.Back">
            <summary>
Cull triangles that are back-facing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CullMode.Front">
            <summary>
Cull triangles that are front-facing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CullMode.None">
            <summary>
Do not cull; all triangles are rendered.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.CpuAccessFlags">
            <summary>Specifies the types of CPU access allowed for a resource.</summary>
            <unmanaged>D3D10_CPU_ACCESS_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.CpuAccessFlags.Read">
            <summary>
Read access is required on the CPU.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CpuAccessFlags.Write">
            <summary>
Write access is required on the CPU.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CpuAccessFlags.None">
            <summary>
No access is required on the CPU.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.CounterType">
            <summary>Data type of a performance counter.</summary>
            <unmanaged>D3D10_COUNTER_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterType.UnsignedInt64">
            <summary>
64-bit unsigned integer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterType.UnsignedInt32">
            <summary>
32-bit unsigned integer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterType.UnsignedInt16">
            <summary>
16-bit unsigned integer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterType.Float32">
            <summary>
32-bit floating point.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.CounterKind">
            <summary>Performance counter types.</summary>
            <unmanaged>D3D10_COUNTER</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.TextureCacheHitRate">
            <summary>
The counter for the percentage of texel data that was read from the cache.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.PostTransformCacheHitRate">
            <summary>
The counter for the percentage of vertex data that was read from the cache.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.PixelShaderComputationLimited">
            <summary>
The counter for the percentage of time the pixel shader spends performing computations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.PixelShaderMemoryLimited">
            <summary>
The counter for the percentage of time the pixel shader spends sampling resources.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.GeometryShaderComputationLimited">
            <summary>
The counter for the percentage of time the geometry shader spends performing computations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.GeometryShaderMemoryLimited">
            <summary>
The counter for the percentage of time the geometry shader spends sampling resources.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.VertexShaderComputationLimited">
            <summary>
The counter for the percentage of time the vertex shader spends performing computations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.VertexShaderMemoryLimited">
            <summary>
The counter for the percentage of time the vertex shader spends sampling resources.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.FillRateThroughput">
            <summary>
The counter for the percentage of throughput used for fillrate.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.TriangleSetupThroughput">
            <summary>
The counter for the percentage of throughput used for triangle setup.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.VertexThroughput">
            <summary>
The counter for the percentage of throughput for vertices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.LocalVideoMemoryBandwidth">
            <summary>
The counter for the percentage of bandwidth used by local video memory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.HostAdapterBandwidth">
            <summary>
The counter for the percentage of bandwidth used on a host adapter.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.OtherProcessing">
            <summary>
The counter for the percentage of time the GPU is performing processing that is not vertex, pixel or geometry processing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.PixelProcessing">
            <summary>
The counter for the percentage of time the GPU is processing pixels. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.GeometryProcessing">
            <summary>
The counter for the percentage of time the GPU is processing geometry.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.VertexProcessing">
            <summary>
The counter for the percentage of time the GPU is processing vertices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.CounterKind.Idle">
            <summary>
The counter for the percentage of time the GPU is idle.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Comparison">
            <summary>Comparison options.</summary>
            <unmanaged>D3D10_COMPARISON_FUNC</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.Comparison.Always">
            <summary>
The test always passes.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Comparison.GreaterEqual">
            <summary>
The test passes if (source &gt;= destination).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Comparison.NotEqual">
            <summary>
The test passes if (source != destination).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Comparison.Greater">
            <summary>
The test passes if (source &gt; destination).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Comparison.LessEqual">
            <summary>
The test passes if (source &lt;= destination).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Comparison.Equal">
            <summary>
The test passes if (source == destination).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Comparison.Less">
            <summary>
The test passes if (source &lt; destination).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Comparison.Never">
            <summary>
The test never passes.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.ColorWriteMaskFlags">
            <summary>Identifies mask values for writing to a render target.</summary>
            <unmanaged>D3D10_COLOR_WRITE_ENABLE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.ColorWriteMaskFlags.All">
            <summary>
Indicates that writes to all components should be enabled.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ColorWriteMaskFlags.Alpha">
            <summary>
Indicates that writes to the alpha component should be enabled.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ColorWriteMaskFlags.Blue">
            <summary>
Indicates that writes to the blue component should be enabled.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ColorWriteMaskFlags.Green">
            <summary>
Indicates that writes to the green component should be enabled.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.ColorWriteMaskFlags.Red">
            <summary>
Indicates that writes to the red component should be enabled.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.Channel">
            <summary>
The following flags are used to specify which channels in a texture to operate on.
</summary>
            <unmanaged>D3DX10_CHANNEL_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.Channel.Luminance">
            <summary>
Indicates the luminances of the red, green, and blue channels should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Channel.Alpha">
            <summary>
Indicates the alpha channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Channel.Green">
            <summary>
Indicates the green channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Channel.Blue">
            <summary>
Indicates the blue channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.Channel.Red">
            <summary>
Indicates the red channel should be used.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.BlendOption">
            <summary>Blend options. A blend option identifies the data source and an optional pre-blend operation.</summary>
            <unmanaged>D3D10_BLEND</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.InverseSecondarySourceAlpha">
            <summary>
The sources are both alpha (A) outputs from a pixel shader. There is an inverting pre-blend (1 - A). This option
allows for dual-source blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.SecondarySourceAlpha">
            <summary>
The sources are both alpha (A) outputs from a pixel shader. There is no pre-blend. This option
allows for dual-source blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.InverseSecondarySourceColor">
            <summary>
The sources are both color (RGB) outputs from a pixel shader. There is an inverting pre-blend (1 - RGB). This option
allows for dual-source blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.SecondarySourceColor">
            <summary>
The sources are both color (RGB) outputs from a pixel shader. There is no pre-blend operation. This option
allows for dual-source blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.InverseBlendFactor">
            <summary>
The source is the blend factor (F) from the current blend state with an inverting pre-blend (1 - F).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.BlendFactor">
            <summary>
The source is the blend factor (F) from the current blend state with no pre-blend operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.SourceAlphaSaturate">
            <summary>
The source is the alpha (A) from a render target with a saturation pre-blend (clamping to 1 or less).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.InverseDestinationColor">
            <summary>
The source is the color (RGB) from a rendertarget with an inverting pre-blend (1 - A).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.DestinationColor">
            <summary>
The source is the color (RGB) from a rendertarget with no pre-blend.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.InverseDestinationAlpha">
            <summary>
The source is the alpha (A) from a rendertarget with an inverting pre-blend (1 - A).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.DestinationAlpha">
            <summary>
The source is the alpha (A) from a rendertarget with no pre-blend.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.InverseSourceAlpha">
            <summary>
The source is the alpha (A) from a pixel shader with an inverting pre-blend (1 - A).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.SourceAlpha">
            <summary>
The source is the alpha (A) from a pixel shader with no pre-blend.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.InverseSourceColor">
            <summary>
The source is the color (RGB) from a pixel shader with an inverting pre-blend (1 - RGB).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.SourceColor">
            <summary>
The source is the color (RGB) from a pixel shader with no pre-blend.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.One">
            <summary>
The source is the color (1,1,1,1) with no pre-blend.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOption.Zero">
            <summary>
The source is the color (0,0,0,0) with no pre-blend.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.BlendOperation">
            <summary>RGB or alpha blending operation.</summary>
            <unmanaged>D3D10_BLEND_OP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOperation.Maximum">
            <summary>
Takes the greater of the source and destination values.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOperation.Minimum">
            <summary>
Takes the lesser of the source and destination values.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOperation.ReverseSubtract">
            <summary>
Subtracts the destination from the source.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOperation.Subtract">
            <summary>
Subtracts the source from the destination.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BlendOperation.Add">
            <summary>
Adds the source to the destination.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.BindFlags">
            <summary>Identifies how to bind a resource to the pipeline.</summary>
            <unmanaged>D3D10_BIND_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.BindFlags.DepthStencil">
            <summary>
Indicates the resource can be bound to the output-merger stage as a depth-stencil target. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BindFlags.RenderTarget">
            <summary>
Indicates the resource can be bound to the output-merger stage as a render target. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BindFlags.StreamOutput">
            <summary>
Indicates the resource can be bound to the stream-output stage as an output buffer. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BindFlags.ShaderResource">
            <summary>
Indicates the resource can be bound to the shader stage as a buffer or texture. 
Note that it is invalid to specify this flag and subsequently map the resource
using MapMode.WriteNoOverwrite.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BindFlags.ConstantBuffer">
            <summary>
Indicates the resource can be bound to the shader stage as a constant buffer 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BindFlags.IndexBuffer">
            <summary>
Indicates the resource can be bound to the input-assembler stage as an index buffer 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BindFlags.VertexBuffer">
            <summary>
Indicates the resource can be bound to the input-assembler stage as a vertex buffer. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.BindFlags.None">
            <summary>
Indicates no specific behavior.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D10.AsynchronousFlags">
            <summary>Optional flags that control the behavior of Asynchronous.GetData.</summary>
            <unmanaged>D3D10_ASYNC_GETDATA_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D10.AsynchronousFlags.DoNotFlush">
            <summary>
Indicates the command buffer should not be flushed.
Note that this can cause an infinite loop if GetData() is called repeatedly until 
returning successfully: there may still be commands in the buffer than need
to be processed in order for GetData() to return successfully. Since the buffer 
will not be flushed, those commands will not be processed and GetData() will never
return successfully.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D10.AsynchronousFlags.None">
            <summary>
Indicates no specific behavior.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.BufferDescription.Equals(SlimDX.Direct3D11.BufferDescription@,SlimDX.Direct3D11.BufferDescription@)">
            <summary>
Returns a value indicating whether the two BufferDescriptions are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.BufferDescription.Equals(SlimDX.Direct3D11.BufferDescription)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.BufferDescription" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.BufferDescription.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.BufferDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.BufferDescription.op_Inequality(SlimDX.Direct3D11.BufferDescription,SlimDX.Direct3D11.BufferDescription)">
            <summary>
Tests for inequality between two BufferDescriptions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.BufferDescription.op_Equality(SlimDX.Direct3D11.BufferDescription,SlimDX.Direct3D11.BufferDescription)">
            <summary>
Tests for equality between two BufferDescriptions.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.BufferDescription.#ctor(System.Int32,SlimDX.Direct3D11.ResourceUsage,SlimDX.Direct3D11.BindFlags,SlimDX.Direct3D11.CpuAccessFlags,SlimDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.BufferDescription" /> struct.
</summary>
            <param name="sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name="usage">The usage pattern for the buffer.</param>
            <param name="bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name="accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Miscellaneous resource options.</param>
            <param name="structureByteStride">The size (in bytes) of the structure for a structured buffer.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.BufferDescription.StructureByteStride">
            <summary>
Gets or sets the size (in bytes) of the structure used for elements of a structured buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.BufferDescription.OptionFlags">
            <summary>
Gets or sets the flags specifying miscellaneous resource options.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.BufferDescription.CpuAccessFlags">
            <summary>
Gets or sets the flags specifying how the CPU will be allowed to access the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.BufferDescription.BindFlags">
            <summary>
Gets or sets the flags specifying how the buffer is bound to the pipeline.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.BufferDescription.Usage">
            <summary>
Gets or sets the intended usage pattern of the buffer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.BufferDescription.SizeInBytes">
            <summary>
Gets or sets the size, in bytes, of the buffer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.BufferDescription">
            <summary>
Describes a buffer resource.
</summary>
            <unmanaged>D3D11_BUFFER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.GetIntVectorArray(System.Int32)">
            <summary>
Gets the value of the variable as an array of integer vectors.
</summary>
            <param name="count">The number of 4-element vectors to get.</param>
            <returns>The integer vector values of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.GetBoolVectorArray(System.Int32)">
            <summary>
Gets the value of the variable as an array of boolean vectors.
</summary>
            <param name="count">The number of 4-element vectors to get.</param>
            <returns>The boolean vector values of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.GetColorArray(System.Int32)">
            <summary>
Gets the value of the variable as an array of color values.
</summary>
            <param name="count">The number of values to get.</param>
            <returns>The color values of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.GetVectorArray(System.Int32)">
            <summary>
Gets the value of the variable as an array of floating point vectors.
</summary>
            <param name="count">The number of values to get.</param>
            <returns>The floating point vector values of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.GetColor">
            <summary>
Gets the value of the variable as a color value.
</summary>
            <returns>The color value of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.GetVector">
            <summary>
Gets the value of the variable as a floating point vector.
</summary>
            <returns>The floating point vector value of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(System.Boolean[])">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="value">The array of four-element boolean vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(System.Int32[])">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="value">The array of four-element integer vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(SlimDX.Color4[])">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="value">The array of color values to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(SlimDX.Vector4[])">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="value">The array of floating point vectors to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(SlimDX.Color4)">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="value">The color value to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="x">The X-component of the vector.</param>
            <param name="y">The Y-component of the vector.</param>
            <param name="z">The Z-component of the vector.</param>
            <param name="w">The W-component of the vector.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="x">The X-component of the vector.</param>
            <param name="y">The Y-component of the vector.</param>
            <param name="z">The Z-component of the vector.</param>
            <param name="w">The W-component of the vector.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(SlimDX.Vector4)">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="value">The floating point vector value to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(SlimDX.Vector3)">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="value">The floating point vector value to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.Set(SlimDX.Vector2)">
            <summary>
Sets the value of the vector variable.
</summary>
            <param name="value">The floating point vector value to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVectorVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectVectorVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectVectorVariable">
            <summary>
Represents a vector effect variable.
</summary>
            <unmanaged>ID3DX11EffectVectorVariable</unmanaged>
        </member>
        <member name="M:SlimDX.Vector3.Equals(SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Equals(SlimDX.Vector3)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Vector3.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Vector3.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Vector3.op_Inequality(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector3.op_Equality(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector3.op_Division(SlimDX.Vector3,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.op_Multiply(System.Single,SlimDX.Vector3)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.op_Multiply(SlimDX.Vector3,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.op_UnaryNegation(SlimDX.Vector3)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SlimDX.Vector3.op_Subtraction(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.op_Addition(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Maximize(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <param name="result">When the method completes, contains an new vector composed of the largest components of the source vectors.</param>
        </member>
        <member name="M:SlimDX.Vector3.Maximize(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Returns a vector containing the largest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the largest components of the source vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Minimize(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <param name="result">When the method completes, contains an new vector composed of the smallest components of the source vectors.</param>
        </member>
        <member name="M:SlimDX.Vector3.Minimize(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the smallest components of the source vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Unproject(SlimDX.Vector3@,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@,SlimDX.Vector3@)">
            <summary>
Projects a 3D vector from screen space into object space. 
</summary>
            <param name="vector">The vector to project.</param>
            <param name="x">The X position of the viewport.</param>
            <param name="y">The Y position of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
            <param name="minZ">The minimum depth of the viewport.</param>
            <param name="maxZ">The maximum depth of the viewport.</param>
            <param name="worldViewProjection">The combined world-view-projection matrix.</param>
            <param name="result">When the method completes, contains the vector in object space.</param>
        </member>
        <member name="M:SlimDX.Vector3.Unproject(SlimDX.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix)">
            <summary>
Projects a 3D vector from screen space into object space. 
</summary>
            <param name="vector">The vector to project.</param>
            <param name="x">The X position of the viewport.</param>
            <param name="y">The Y position of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
            <param name="minZ">The minimum depth of the viewport.</param>
            <param name="maxZ">The maximum depth of the viewport.</param>
            <param name="worldViewProjection">The combined world-view-projection matrix.</param>
            <returns>The vector in object space.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Project(SlimDX.Vector3@,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix@,SlimDX.Vector3@)">
            <summary>
Projects a 3D vector from object space into screen space. 
</summary>
            <param name="vector">The vector to project.</param>
            <param name="x">The X position of the viewport.</param>
            <param name="y">The Y position of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
            <param name="minZ">The minimum depth of the viewport.</param>
            <param name="maxZ">The maximum depth of the viewport.</param>
            <param name="worldViewProjection">The combined world-view-projection matrix.</param>
            <param name="result">When the method completes, contains the vector in screen space.</param>
        </member>
        <member name="M:SlimDX.Vector3.Project(SlimDX.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SlimDX.Matrix)">
            <summary>
Projects a 3D vector from object space into screen space. 
</summary>
            <param name="vector">The vector to project.</param>
            <param name="x">The X position of the viewport.</param>
            <param name="y">The Y position of the viewport.</param>
            <param name="width">The width of the viewport.</param>
            <param name="height">The height of the viewport.</param>
            <param name="minZ">The minimum depth of the viewport.</param>
            <param name="maxZ">The maximum depth of the viewport.</param>
            <param name="worldViewProjection">The combined world-view-projection matrix.</param>
            <returns>The vector in screen space.</returns>
        </member>
        <member name="M:SlimDX.Vector3.TransformNormal(SlimDX.Vector3[],SlimDX.Matrix@)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normals">The normal vectors to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed normals.</returns>
        </member>
        <member name="M:SlimDX.Vector3.TransformNormal(SlimDX.Vector3[],SlimDX.Matrix@,SlimDX.Vector3[])">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normalsIn">The source vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="normalsOut">The transformed <see cref="T:SlimDX.Vector3" />s.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformNormal(SlimDX.Vector3[],SlimDX.Matrix@,SlimDX.Vector3[],System.Int32,System.Int32)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normalsIn">The source vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="normalsOut">The transformed <see cref="T:SlimDX.Vector3" />s.</param>
            <param name="offset">The offset at which to begin transforming.</param>
            <param name="count">The number of vectors to transform, or 0 to process the whole array.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformNormal(SlimDX.Vector3*,SlimDX.Matrix*,SlimDX.Vector3*,System.Int32)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normalsIn">The source normals to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="normalsOut">The transformed <see cref="T:SlimDX.Vector3" />s.</param>
            <param name="count">The number of vectors to transform.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformNormal(SlimDX.Vector3*,System.Int32,SlimDX.Matrix*,SlimDX.Vector3*,System.Int32,System.Int32)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normalsIn">The source normals to transform.</param>
            <param name="inputStride">The stride in bytes between normals in the input.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="normalsOut">The transformed <see cref="T:SlimDX.Vector3" />s.</param>
            <param name="outputStride">The stride in bytes between vectors in the output.</param>
            <param name="count">The number of vectors to transform.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformNormal(SlimDX.Vector3@,SlimDX.Matrix@,SlimDX.Vector3@)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normal">The normal vector to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="result">When the method completes, contains the transformed normal.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformNormal(SlimDX.Vector3,SlimDX.Matrix)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normal">The normal vector to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed normal.</returns>
        </member>
        <member name="M:SlimDX.Vector3.TransformCoordinate(SlimDX.Vector3[],SlimDX.Matrix@)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinates">The coordinate vectors to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed coordinates.</returns>
        </member>
        <member name="M:SlimDX.Vector3.TransformCoordinate(SlimDX.Vector3[],SlimDX.Matrix@,SlimDX.Vector3[])">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinatesIn">The source coordinate vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="coordinatesOut">The transformed coordinate <see cref="T:SlimDX.Vector3" />s.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformCoordinate(SlimDX.Vector3[],SlimDX.Matrix@,SlimDX.Vector3[],System.Int32,System.Int32)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinatesIn">The source coordinate vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="coordinatesOut">The transformed coordinate <see cref="T:SlimDX.Vector3" />s.</param>
            <param name="offset">The offset at which to begin transforming.</param>
            <param name="count">The number of coordinate vectors to transform, or 0 to process the whole array.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformCoordinate(SlimDX.Vector3*,SlimDX.Matrix*,SlimDX.Vector3*,System.Int32)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinatesIn">The source coordinate vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="coordinatesOut">The transformed coordinate <see cref="T:SlimDX.Vector3" />s.</param>
            <param name="count">The number of coordinate vectors to transform.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformCoordinate(SlimDX.Vector3*,System.Int32,SlimDX.Matrix*,SlimDX.Vector3*,System.Int32,System.Int32)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinatesIn">The source coordinate vectors.</param>
            <param name="inputStride">The stride in bytes between vectors in the input.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="coordinatesOut">The transformed coordinate <see cref="T:SlimDX.Vector3" />s.</param>
            <param name="outputStride">The stride in bytes between vectors in the output.</param>
            <param name="count">The number of coordinate vectors to transform.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformCoordinate(SlimDX.Vector3@,SlimDX.Matrix@,SlimDX.Vector3@)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinate">The coordinate vector to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="result">When the method completes, contains the transformed coordinates.</param>
        </member>
        <member name="M:SlimDX.Vector3.TransformCoordinate(SlimDX.Vector3,SlimDX.Matrix)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinate">The coordinate vector to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed coordinates.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3[],SlimDX.Quaternion@)">
            <summary>
Transforms an array of 3D vectors by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vectors">The vectors to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3@,SlimDX.Quaternion@,SlimDX.Vector4@)">
            <summary>
Transforms a 3D vector by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vector">The vector to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <param name="result">When the method completes, contains the transformed <see cref="T:SlimDX.Vector4" />.</param>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3,SlimDX.Quaternion)">
            <summary>
Transforms a 3D vector by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vector">The vector to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3[],SlimDX.Matrix@)">
            <summary>
Transforms an array of 3D vectors by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vectors">The source vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />s.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3[],SlimDX.Matrix@,SlimDX.Vector4[])">
            <summary>
Transforms an array of 3D vectors by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vectorsIn">The source vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="vectorsOut">The transformed <see cref="T:SlimDX.Vector4" />s.</param>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3[],SlimDX.Matrix@,SlimDX.Vector4[],System.Int32,System.Int32)">
            <summary>
Transforms an array of 3D vectors by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vectorsIn">The source vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="vectorsOut">The transformed <see cref="T:SlimDX.Vector4" />s.</param>
            <param name="offset">The offset at which to begin transforming.</param>
            <param name="count">The number of vectors to transform, or 0 to process the whole array.</param>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3*,SlimDX.Matrix*,SlimDX.Vector4*,System.Int32)">
            <summary>
Transforms an array of 3D vectors by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vectorsIn">The source vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="vectorsOut">The transformed <see cref="T:SlimDX.Vector4" />s.</param>
            <param name="count">The number of vectors to transform.</param>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3*,System.Int32,SlimDX.Matrix*,SlimDX.Vector4*,System.Int32,System.Int32)">
            <summary>
Transforms an array of 3D vectors by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vectorsIn">The source vectors.</param>
            <param name="inputStride">The stride in bytes between vectors in the input.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="vectorsOut">The transformed <see cref="T:SlimDX.Vector4" />s.</param>
            <param name="outputStride">The stride in bytes between vectors in the output.</param>
            <param name="count">The number of vectors to transform.</param>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3@,SlimDX.Matrix@,SlimDX.Vector4@)">
            <summary>
Transforms a 3D vector by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vector">The source vector.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="result">When the method completes, contains the transformed <see cref="T:SlimDX.Vector4" />.</param>
        </member>
        <member name="M:SlimDX.Vector3.Transform(SlimDX.Vector3,SlimDX.Matrix)">
            <summary>
Transforms a 3D vector by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vector">The source vector.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Normalize(SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Converts the vector into a unit vector.
</summary>
            <param name="vector">The vector to normalize.</param>
            <param name="result">When the method completes, contains the normalized vector.</param>
        </member>
        <member name="M:SlimDX.Vector3.Normalize(SlimDX.Vector3)">
            <summary>
Converts the vector into a unit vector.
</summary>
            <param name="vector">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Reflect(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Returns the reflection of a vector off a surface that has the specified normal. 
</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <param name="result">When the method completes, contains the reflected vector.</param>
            <remarks>Reflect only gives the direction of a reflection off a surface, it does not determine 
whether the original vector was close enough to the surface to hit it.</remarks>
        </member>
        <member name="M:SlimDX.Vector3.Reflect(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Returns the reflection of a vector off a surface that has the specified normal. 
</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <returns>The reflected vector.</returns>
            <remarks>Reflect only gives the direction of a reflection off a surface, it does not determine 
whether the original vector was close enough to the surface to hit it.</remarks>
        </member>
        <member name="M:SlimDX.Vector3.Cross(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Calculates the cross product of two vectors.
</summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <param name="result">The cross product of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector3.Cross(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Calculates the cross product of two vectors.
</summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The cross product of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Dot(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Calculates the dot product of two vectors.
</summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.DistanceSquared(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Calculates the squared distance between two vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between the two vectors.</returns>
            <remarks>Distance squared is the value before taking the square root. 
Distance squared can often be used in place of distance if relative comparisons are being made. 
For example, consider three points A, B, and C. To determine whether B or C is further from A, 
compare the distance between A and B to the distance between A and C. Calculating the two distances 
involves two square roots, which are computationally expensive. However, using distance squared 
provides the same information and avoids calculating two square roots.
</remarks>
        </member>
        <member name="M:SlimDX.Vector3.Distance(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Calculates the distance between two vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.SmoothStep(SlimDX.Vector3@,SlimDX.Vector3@,System.Single,SlimDX.Vector3@)">
            <summary>
Performs a cubic interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the cubic interpolation of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector3.SmoothStep(SlimDX.Vector3,SlimDX.Vector3,System.Single)">
            <summary>
Performs a cubic interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The cubic interpolation of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Lerp(SlimDX.Vector3@,SlimDX.Vector3@,System.Single,SlimDX.Vector3@)">
            <summary>
Performs a linear interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the linear interpolation of the two vectors.</param>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Vector3.Lerp(SlimDX.Vector3,SlimDX.Vector3,System.Single)">
            <summary>
Performs a linear interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The linear interpolation of the two vectors.</returns>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Vector3.Hermite(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,System.Single,SlimDX.Vector3@)">
            <summary>
Performs a Hermite spline interpolation.
</summary>
            <param name="value1">First source position vector.</param>
            <param name="tangent1">First source tangent vector.</param>
            <param name="value2">Second source position vector.</param>
            <param name="tangent2">Second source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">When the method completes, contains the result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:SlimDX.Vector3.Hermite(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,System.Single)">
            <summary>
Performs a Hermite spline interpolation.
</summary>
            <param name="value1">First source position vector.</param>
            <param name="tangent1">First source tangent vector.</param>
            <param name="value2">Second source position vector.</param>
            <param name="tangent2">Second source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Clamp(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Restricts a value to be within a specified range.
</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="result">When the method completes, contains the clamped value.</param>
        </member>
        <member name="M:SlimDX.Vector3.Clamp(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Restricts a value to be within a specified range.
</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:SlimDX.Vector3.CatmullRom(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,System.Single,SlimDX.Vector3@)">
            <summary>
Performs a Catmull-Rom interpolation using the specified positions.
</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">When the method completes, contains the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:SlimDX.Vector3.CatmullRom(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,System.Single)">
            <summary>
Performs a Catmull-Rom interpolation using the specified positions.
</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A vector that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Barycentric(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@,System.Single,System.Single,SlimDX.Vector3@)">
            <summary>
Returns a <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 3D triangle.
</summary>
            <param name="value1">A <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in <paramref name="value2" />).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in <paramref name="value3" />).</param>
            <param name="result">When the method completes, contains the 3D Cartesian coordinates of the specified point.</param>
        </member>
        <member name="M:SlimDX.Vector3.Barycentric(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,System.Single,System.Single)">
            <summary>
Returns a <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 3D triangle.
</summary>
            <param name="value1">A <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in <paramref name="value2" />).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in <paramref name="value3" />).</param>
            <returns>A new <see cref="T:SlimDX.Vector3" /> containing the 3D Cartesian coordinates of the specified point.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Negate(SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <param name="result">When the method completes, contains a vector facing in the opposite direction.</param>
        </member>
        <member name="M:SlimDX.Vector3.Negate(SlimDX.Vector3)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Divide(SlimDX.Vector3@,System.Single,SlimDX.Vector3@)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <param name="result">When the method completes, contains the scaled vector.</param>
        </member>
        <member name="M:SlimDX.Vector3.Divide(SlimDX.Vector3,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Modulate(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Modulates a vector by another.
</summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <param name="result">When the moethod completes, contains the modulated vector.</param>
        </member>
        <member name="M:SlimDX.Vector3.Modulate(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Modulates a vector by another.
</summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The modulated vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Multiply(SlimDX.Vector3@,System.Single,SlimDX.Vector3@)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <param name="result">When the method completes, contains the scaled vector.</param>
        </member>
        <member name="M:SlimDX.Vector3.Multiply(SlimDX.Vector3,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Subtract(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <param name="result">When the method completes, contains the difference of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector3.Subtract(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Add(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <param name="result">When the method completes, contains the sum of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector3.Add(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Normalize">
            <summary>
Converts the vector into a unit vector.
</summary>
        </member>
        <member name="M:SlimDX.Vector3.LengthSquared">
            <summary>
Calculates the squared length of the vector.
</summary>
            <returns>The squared length of the vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.Length">
            <summary>
Calculates the length of the vector.
</summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:SlimDX.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector3" /> class.
</summary>
            <param name="x">Initial value for the X component of the vector.</param>
            <param name="y">Initial value for the Y component of the vector.</param>
            <param name="z">Initial value for the Z component of the vector.</param>
        </member>
        <member name="M:SlimDX.Vector3.#ctor(SlimDX.Vector2,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector3" /> class.
</summary>
            <param name="value">A vector containing the values with which to initialize the X and Y components</param>
            <param name="z">Initial value for the Z component of the vector.</param>
        </member>
        <member name="M:SlimDX.Vector3.#ctor(System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector3" /> class.
</summary>
            <param name="value">The value that will be assigned to all components.</param>
        </member>
        <member name="P:SlimDX.Vector3.SizeInBytes">
            <summary>
Gets the size of the <see cref="T:SlimDX.Vector3" /> type, in bytes.
</summary>
        </member>
        <member name="P:SlimDX.Vector3.UnitZ">
            <summary>
Gets the Z unit <see cref="T:SlimDX.Vector3" /> (0, 0, 1).
</summary>
            <value>A <see cref="T:SlimDX.Vector3" /> that has a value of (0, 0, 1).</value>
        </member>
        <member name="P:SlimDX.Vector3.UnitY">
            <summary>
Gets the Y unit <see cref="T:SlimDX.Vector3" /> (0, 1, 0).
</summary>
            <value>A <see cref="T:SlimDX.Vector3" /> that has a value of (0, 1, 0).</value>
        </member>
        <member name="P:SlimDX.Vector3.UnitX">
            <summary>
Gets the X unit <see cref="T:SlimDX.Vector3" /> (1, 0, 0).
</summary>
            <value>A <see cref="T:SlimDX.Vector3" /> that has a value of (1, 0, 0).</value>
        </member>
        <member name="P:SlimDX.Vector3.Zero">
            <summary>
Gets a <see cref="T:SlimDX.Vector3" /> with all of its components set to zero.
</summary>
            <value>A <see cref="T:SlimDX.Vector3" /> that has all of its components set to zero.</value>
        </member>
        <member name="F:SlimDX.Vector3.Z">
            <summary>
Gets or sets the Z component of the vector.
</summary>
            <value>The Z component of the vector.</value>
        </member>
        <member name="F:SlimDX.Vector3.Y">
            <summary>
Gets or sets the Y component of the vector.
</summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="F:SlimDX.Vector3.X">
            <summary>
Gets or sets the X component of the vector.
</summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="T:SlimDX.Vector3">
            <summary>
Defines a three component vector.
</summary>
            <unmanaged>D3DXVECTOR3</unmanaged>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System.ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System.Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector3Converter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.Vector3Converter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.Vector3Converter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Vector3" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.Vector2.Equals(SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Equals(SlimDX.Vector2)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Vector2.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Vector2.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Vector2.op_Inequality(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector2.op_Equality(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector2.op_Division(SlimDX.Vector2,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.op_Multiply(System.Single,SlimDX.Vector2)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.op_Multiply(SlimDX.Vector2,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.op_UnaryNegation(SlimDX.Vector2)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SlimDX.Vector2.op_Subtraction(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.op_Addition(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Maximize(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <param name="result">When the method completes, contains an new vector composed of the largest components of the source vectors.</param>
        </member>
        <member name="M:SlimDX.Vector2.Maximize(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Returns a vector containing the largest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the largest components of the source vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Minimize(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <param name="result">When the method completes, contains an new vector composed of the smallest components of the source vectors.</param>
        </member>
        <member name="M:SlimDX.Vector2.Minimize(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the smallest components of the source vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.TransformNormal(SlimDX.Vector2[],SlimDX.Matrix@)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normals">The normal vectors to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed normals.</returns>
        </member>
        <member name="M:SlimDX.Vector2.TransformNormal(SlimDX.Vector2@,SlimDX.Matrix@,SlimDX.Vector2@)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normal">The normal vector to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="result">When the method completes, contains the transformed normal.</param>
        </member>
        <member name="M:SlimDX.Vector2.TransformNormal(SlimDX.Vector2,SlimDX.Matrix)">
            <summary>
Performs a normal transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="normal">The normal vector to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed normal.</returns>
        </member>
        <member name="M:SlimDX.Vector2.TransformCoordinate(SlimDX.Vector2[],SlimDX.Matrix@)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinates">The coordinate vectors to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed coordinates.</returns>
        </member>
        <member name="M:SlimDX.Vector2.TransformCoordinate(SlimDX.Vector2@,SlimDX.Matrix@,SlimDX.Vector2@)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinate">The coordinate vector to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="result">When the method completes, contains the transformed coordinates.</param>
        </member>
        <member name="M:SlimDX.Vector2.TransformCoordinate(SlimDX.Vector2,SlimDX.Matrix)">
            <summary>
Performs a coordinate transformation using the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="coordinate">The coordinate vector to transform.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed coordinates.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Transform(SlimDX.Vector2[],SlimDX.Quaternion@)">
            <summary>
Transforms an array of 2D vectors by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vectors">The vectors to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Transform(SlimDX.Vector2@,SlimDX.Quaternion@,SlimDX.Vector4@)">
            <summary>
Transforms a 2D vector by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vector">The vector to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <param name="result">When the method completes, contains the transformed <see cref="T:SlimDX.Vector4" />.</param>
        </member>
        <member name="M:SlimDX.Vector2.Transform(SlimDX.Vector2,SlimDX.Quaternion)">
            <summary>
Transforms a 2D vector by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vector">The vector to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Transform(SlimDX.Vector2[],SlimDX.Matrix@)">
            <summary>
Transforms an array of 2D vectors by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vectors">The source vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />s.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Transform(SlimDX.Vector2@,SlimDX.Matrix@,SlimDX.Vector4@)">
            <summary>
Transforms a 2D vector by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vector">The source vector.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="result">When the method completes, contains the transformed <see cref="T:SlimDX.Vector4" />.</param>
        </member>
        <member name="M:SlimDX.Vector2.Transform(SlimDX.Vector2,SlimDX.Matrix)">
            <summary>
Transforms a 2D vector by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vector">The source vector.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Normalize(SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Converts the vector into a unit vector.
</summary>
            <param name="vector">The vector to normalize.</param>
            <param name="result">When the method completes, contains the normalized vector.</param>
        </member>
        <member name="M:SlimDX.Vector2.Normalize(SlimDX.Vector2)">
            <summary>
Converts the vector into a unit vector.
</summary>
            <param name="vector">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Dot(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Calculates the dot product of two vectors.
</summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.DistanceSquared(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Calculates the squared distance between two vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between the two vectors.</returns>
            <remarks>Distance squared is the value before taking the square root. 
Distance squared can often be used in place of distance if relative comparisons are being made. 
For example, consider three points A, B, and C. To determine whether B or C is further from A, 
compare the distance between A and B to the distance between A and C. Calculating the two distances 
involves two square roots, which are computationally expensive. However, using distance squared 
provides the same information and avoids calculating two square roots.
</remarks>
        </member>
        <member name="M:SlimDX.Vector2.Distance(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Calculates the distance between two vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.SmoothStep(SlimDX.Vector2@,SlimDX.Vector2@,System.Single,SlimDX.Vector2@)">
            <summary>
Performs a cubic interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the cubic interpolation of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector2.SmoothStep(SlimDX.Vector2,SlimDX.Vector2,System.Single)">
            <summary>
Performs a cubic interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The cubic interpolation of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Lerp(SlimDX.Vector2@,SlimDX.Vector2@,System.Single,SlimDX.Vector2@)">
            <summary>
Performs a linear interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the linear interpolation of the two vectors.</param>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Vector2.Lerp(SlimDX.Vector2,SlimDX.Vector2,System.Single)">
            <summary>
Performs a linear interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The linear interpolation of the two vectors.</returns>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Vector2.Hermite(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@,System.Single,SlimDX.Vector2@)">
            <summary>
Performs a Hermite spline interpolation.
</summary>
            <param name="value1">First source position vector.</param>
            <param name="tangent1">First source tangent vector.</param>
            <param name="value2">Second source position vector.</param>
            <param name="tangent2">Second source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">When the method completes, contains the result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:SlimDX.Vector2.Hermite(SlimDX.Vector2,SlimDX.Vector2,SlimDX.Vector2,SlimDX.Vector2,System.Single)">
            <summary>
Performs a Hermite spline interpolation.
</summary>
            <param name="value1">First source position vector.</param>
            <param name="tangent1">First source tangent vector.</param>
            <param name="value2">Second source position vector.</param>
            <param name="tangent2">Second source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Clamp(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Restricts a value to be within a specified range.
</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="result">When the method completes, contains the clamped value.</param>
        </member>
        <member name="M:SlimDX.Vector2.Clamp(SlimDX.Vector2,SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Restricts a value to be within a specified range.
</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:SlimDX.Vector2.CatmullRom(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@,System.Single,SlimDX.Vector2@)">
            <summary>
Performs a Catmull-Rom interpolation using the specified positions.
</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">When the method completes, contains the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:SlimDX.Vector2.CatmullRom(SlimDX.Vector2,SlimDX.Vector2,SlimDX.Vector2,SlimDX.Vector2,System.Single)">
            <summary>
Performs a Catmull-Rom interpolation using the specified positions.
</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A vector that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Barycentric(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@,System.Single,System.Single,SlimDX.Vector2@)">
            <summary>
Returns a <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 2D triangle.
</summary>
            <param name="value1">A <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in <paramref name="value2" />).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in <paramref name="value3" />).</param>
            <param name="result">When the method completes, contains the 2D Cartesian coordinates of the specified point.</param>
        </member>
        <member name="M:SlimDX.Vector2.Barycentric(SlimDX.Vector2,SlimDX.Vector2,SlimDX.Vector2,System.Single,System.Single)">
            <summary>
Returns a <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 2D triangle.
</summary>
            <param name="value1">A <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in <paramref name="value2" />).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in <paramref name="value3" />).</param>
            <returns>A new <see cref="T:SlimDX.Vector2" /> containing the 2D Cartesian coordinates of the specified point.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Negate(SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <param name="result">When the method completes, contains a vector facing in the opposite direction.</param>
        </member>
        <member name="M:SlimDX.Vector2.Negate(SlimDX.Vector2)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Divide(SlimDX.Vector2@,System.Single,SlimDX.Vector2@)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <param name="result">When the method completes, contains the scaled vector.</param>
        </member>
        <member name="M:SlimDX.Vector2.Divide(SlimDX.Vector2,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Modulate(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Modulates a vector by another.
</summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <param name="result">When the moethod completes, contains the modulated vector.</param>
        </member>
        <member name="M:SlimDX.Vector2.Modulate(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Modulates a vector by another.
</summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The modulated vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Multiply(SlimDX.Vector2@,System.Single,SlimDX.Vector2@)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <param name="result">When the method completes, contains the scaled vector.</param>
        </member>
        <member name="M:SlimDX.Vector2.Multiply(SlimDX.Vector2,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Subtract(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <param name="result">When the method completes, contains the difference of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector2.Subtract(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Add(SlimDX.Vector2@,SlimDX.Vector2@,SlimDX.Vector2@)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <param name="result">When the method completes, contains the sum of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector2.Add(SlimDX.Vector2,SlimDX.Vector2)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Normalize">
            <summary>
Converts the vector into a unit vector.
</summary>
        </member>
        <member name="M:SlimDX.Vector2.LengthSquared">
            <summary>
Calculates the squared length of the vector.
</summary>
            <returns>The squared length of the vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.Length">
            <summary>
Calculates the length of the vector.
</summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:SlimDX.Vector2.#ctor(System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector2" /> class.
</summary>
            <param name="x">Initial value for the X component of the vector.</param>
            <param name="y">Initial value for the Y component of the vector.</param>
        </member>
        <member name="M:SlimDX.Vector2.#ctor(System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector2" /> class.
</summary>
            <param name="value">The value that will be assigned to all components.</param>
        </member>
        <member name="P:SlimDX.Vector2.SizeInBytes">
            <summary>
Gets the size of the <see cref="T:SlimDX.Vector2" /> type, in bytes.
</summary>
        </member>
        <member name="P:SlimDX.Vector2.UnitY">
            <summary>
Gets the Y unit <see cref="T:SlimDX.Vector2" /> (0, 1).
</summary>
            <value>A <see cref="T:SlimDX.Vector2" /> that has a value of (0, 1).</value>
        </member>
        <member name="P:SlimDX.Vector2.UnitX">
            <summary>
Gets the X unit <see cref="T:SlimDX.Vector2" /> (1, 0).
</summary>
            <value>A <see cref="T:SlimDX.Vector2" /> that has a value of (1, 0).</value>
        </member>
        <member name="P:SlimDX.Vector2.Zero">
            <summary>
Gets a <see cref="T:SlimDX.Vector2" /> with all of its components set to zero.
</summary>
            <value>A <see cref="T:SlimDX.Vector2" /> that has all of its components set to zero.</value>
        </member>
        <member name="F:SlimDX.Vector2.Y">
            <summary>
Gets or sets the Y component of the vector.
</summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="F:SlimDX.Vector2.X">
            <summary>
Gets or sets the X component of the vector.
</summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="T:SlimDX.Vector2">
            <summary>
Defines a two component vector.
</summary>
            <unmanaged>D3DXVECTOR2</unmanaged>
        </member>
        <member name="M:SlimDX.Vector4.Equals(SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Equals(SlimDX.Vector4)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Vector4.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Vector4.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Vector4.op_Inequality(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector4.op_Equality(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Vector4.op_Division(SlimDX.Vector4,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.op_Multiply(System.Single,SlimDX.Vector4)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.op_Multiply(SlimDX.Vector4,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.op_UnaryNegation(SlimDX.Vector4)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SlimDX.Vector4.op_Subtraction(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.op_Addition(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Maximize(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <param name="result">When the method completes, contains an new vector composed of the largest components of the source vectors.</param>
        </member>
        <member name="M:SlimDX.Vector4.Maximize(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Returns a vector containing the largest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the largest components of the source vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Minimize(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <param name="result">When the method completes, contains an new vector composed of the smallest components of the source vectors.</param>
        </member>
        <member name="M:SlimDX.Vector4.Minimize(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Returns a vector containing the smallest components of the specified vectors.
</summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the smallest components of the source vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Transform(SlimDX.Vector4[],SlimDX.Quaternion@)">
            <summary>
Transforms an array of 4D vectors by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vectors">The vectors to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Transform(SlimDX.Vector4@,SlimDX.Quaternion@,SlimDX.Vector4@)">
            <summary>
Transforms a 4D vector by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vector">The vector to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <param name="result">When the method completes, contains the transformed <see cref="T:SlimDX.Vector4" />.</param>
        </member>
        <member name="M:SlimDX.Vector4.Transform(SlimDX.Vector4,SlimDX.Quaternion)">
            <summary>
Transforms a 4D vector by the given <see cref="T:SlimDX.Quaternion" /> rotation.
</summary>
            <param name="vector">The vector to rotate.</param>
            <param name="rotation">The <see cref="T:SlimDX.Quaternion" /> rotation to apply.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Transform(SlimDX.Vector4[],SlimDX.Matrix@)">
            <summary>
Transforms an array of 4D vectors by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vectors">The source vectors.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />s.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Transform(SlimDX.Vector4@,SlimDX.Matrix@,SlimDX.Vector4@)">
            <summary>
Transforms a 4D vector by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vector">The source vector.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <param name="result">When the method completes, contains the transformed <see cref="T:SlimDX.Vector4" />.</param>
        </member>
        <member name="M:SlimDX.Vector4.Transform(SlimDX.Vector4,SlimDX.Matrix)">
            <summary>
Transforms a 4D vector by the given <see cref="T:SlimDX.Matrix" />.
</summary>
            <param name="vector">The source vector.</param>
            <param name="transformation">The transformation <see cref="T:SlimDX.Matrix" />.</param>
            <returns>The transformed <see cref="T:SlimDX.Vector4" />.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Normalize(SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Converts the vector into a unit vector.
</summary>
            <param name="vector">The vector to normalize.</param>
            <param name="result">When the method completes, contains the normalized vector.</param>
        </member>
        <member name="M:SlimDX.Vector4.Normalize(SlimDX.Vector4)">
            <summary>
Converts the vector into a unit vector.
</summary>
            <param name="vector">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Dot(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Calculates the dot product of two vectors.
</summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.DistanceSquared(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Calculates the squared distance between two vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between the two vectors.</returns>
            <remarks>Distance squared is the value before taking the square root. 
Distance squared can often be used in place of distance if relative comparisons are being made. 
For example, consider three points A, B, and C. To determine whether B or C is further from A, 
compare the distance between A and B to the distance between A and C. Calculating the two distances 
involves two square roots, which are computationally expensive. However, using distance squared 
provides the same information and avoids calculating two square roots.
</remarks>
        </member>
        <member name="M:SlimDX.Vector4.Distance(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Calculates the distance between two vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.SmoothStep(SlimDX.Vector4@,SlimDX.Vector4@,System.Single,SlimDX.Vector4@)">
            <summary>
Performs a cubic interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the cubic interpolation of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector4.SmoothStep(SlimDX.Vector4,SlimDX.Vector4,System.Single)">
            <summary>
Performs a cubic interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The cubic interpolation of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Lerp(SlimDX.Vector4@,SlimDX.Vector4@,System.Single,SlimDX.Vector4@)">
            <summary>
Performs a linear interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <param name="result">When the method completes, contains the linear interpolation of the two vectors.</param>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Vector4.Lerp(SlimDX.Vector4,SlimDX.Vector4,System.Single)">
            <summary>
Performs a linear interpolation between two vectors.
</summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The linear interpolation of the two vectors.</returns>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>start + (end - start) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1 will cause <paramref name="end" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Vector4.Hermite(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@,System.Single,SlimDX.Vector4@)">
            <summary>
Performs a Hermite spline interpolation.
</summary>
            <param name="value1">First source position vector.</param>
            <param name="tangent1">First source tangent vector.</param>
            <param name="value2">Second source position vector.</param>
            <param name="tangent2">Second source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">When the method completes, contains the result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:SlimDX.Vector4.Hermite(SlimDX.Vector4,SlimDX.Vector4,SlimDX.Vector4,SlimDX.Vector4,System.Single)">
            <summary>
Performs a Hermite spline interpolation.
</summary>
            <param name="value1">First source position vector.</param>
            <param name="tangent1">First source tangent vector.</param>
            <param name="value2">Second source position vector.</param>
            <param name="tangent2">Second source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Clamp(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Restricts a value to be within a specified range.
</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="result">When the method completes, contains the clamped value.</param>
        </member>
        <member name="M:SlimDX.Vector4.Clamp(SlimDX.Vector4,SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Restricts a value to be within a specified range.
</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:SlimDX.Vector4.CatmullRom(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@,System.Single,SlimDX.Vector4@)">
            <summary>
Performs a Catmull-Rom interpolation using the specified positions.
</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">When the method completes, contains the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:SlimDX.Vector4.CatmullRom(SlimDX.Vector4,SlimDX.Vector4,SlimDX.Vector4,SlimDX.Vector4,System.Single)">
            <summary>
Performs a Catmull-Rom interpolation using the specified positions.
</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A vector that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Barycentric(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@,System.Single,System.Single,SlimDX.Vector4@)">
            <summary>
Returns a <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 4D triangle.
</summary>
            <param name="value1">A <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in <paramref name="value2" />).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in <paramref name="value3" />).</param>
            <param name="result">When the method completes, contains the 4D Cartesian coordinates of the specified point.</param>
        </member>
        <member name="M:SlimDX.Vector4.Barycentric(SlimDX.Vector4,SlimDX.Vector4,SlimDX.Vector4,System.Single,System.Single)">
            <summary>
Returns a <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 4D triangle.
</summary>
            <param name="value1">A <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in <paramref name="value2" />).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in <paramref name="value3" />).</param>
            <returns>A new <see cref="T:SlimDX.Vector4" /> containing the 4D Cartesian coordinates of the specified point.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Negate(SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <param name="result">When the method completes, contains a vector facing in the opposite direction.</param>
        </member>
        <member name="M:SlimDX.Vector4.Negate(SlimDX.Vector4)">
            <summary>
Reverses the direction of a given vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Divide(SlimDX.Vector4@,System.Single,SlimDX.Vector4@)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <param name="result">When the method completes, contains the scaled vector.</param>
        </member>
        <member name="M:SlimDX.Vector4.Divide(SlimDX.Vector4,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Modulate(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Modulates a vector by another.
</summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <param name="result">When the moethod completes, contains the modulated vector.</param>
        </member>
        <member name="M:SlimDX.Vector4.Modulate(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Modulates a vector by another.
</summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The modulated vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Multiply(SlimDX.Vector4@,System.Single,SlimDX.Vector4@)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <param name="result">When the method completes, contains the scaled vector.</param>
        </member>
        <member name="M:SlimDX.Vector4.Multiply(SlimDX.Vector4,System.Single)">
            <summary>
Scales a vector by the given value.
</summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Subtract(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <param name="result">When the method completes, contains the difference of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector4.Subtract(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Subtracts two vectors.
</summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Add(SlimDX.Vector4@,SlimDX.Vector4@,SlimDX.Vector4@)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <param name="result">When the method completes, contains the sum of the two vectors.</param>
        </member>
        <member name="M:SlimDX.Vector4.Add(SlimDX.Vector4,SlimDX.Vector4)">
            <summary>
Adds two vectors.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Normalize">
            <summary>
Converts the vector into a unit vector.
</summary>
        </member>
        <member name="M:SlimDX.Vector4.LengthSquared">
            <summary>
Calculates the squared length of the vector.
</summary>
            <returns>The squared length of the vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.Length">
            <summary>
Calculates the length of the vector.
</summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:SlimDX.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector4" /> class.
</summary>
            <param name="x">Initial value for the X component of the vector.</param>
            <param name="y">Initial value for the Y component of the vector.</param>
            <param name="z">Initial value for the Z component of the vector.</param>
            <param name="w">Initial value for the W component of the vector.</param>
        </member>
        <member name="M:SlimDX.Vector4.#ctor(SlimDX.Vector3,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector4" /> class.
</summary>
            <param name="value">A vector containing the values with which to initialize the X, Y, and Z components</param>
            <param name="w">Initial value for the W component of the vector.</param>
        </member>
        <member name="M:SlimDX.Vector4.#ctor(SlimDX.Vector2,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector4" /> class.
</summary>
            <param name="value">A vector containing the values with which to initialize the X and Y components</param>
            <param name="z">Initial value for the Z component of the vector.</param>
            <param name="w">Initial value for the W component of the vector.</param>
        </member>
        <member name="M:SlimDX.Vector4.#ctor(System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Vector4" /> class.
</summary>
            <param name="value">The value that will be assigned to all components.</param>
        </member>
        <member name="P:SlimDX.Vector4.SizeInBytes">
            <summary>
Gets the size of the <see cref="T:SlimDX.Vector4" /> type, in bytes.
</summary>
        </member>
        <member name="P:SlimDX.Vector4.UnitW">
            <summary>
Gets the W unit <see cref="T:SlimDX.Vector4" /> (0, 0, 0, 1).
</summary>
            <value>A <see cref="T:SlimDX.Vector4" /> that has a value of (0, 0, 0, 1).</value>
        </member>
        <member name="P:SlimDX.Vector4.UnitZ">
            <summary>
Gets the Z unit <see cref="T:SlimDX.Vector4" /> (0, 0, 1, 0).
</summary>
            <value>A <see cref="T:SlimDX.Vector4" /> that has a value of (0, 0, 1, 0).</value>
        </member>
        <member name="P:SlimDX.Vector4.UnitY">
            <summary>
Gets the Y unit <see cref="T:SlimDX.Vector4" /> (0, 1, 0, 0).
</summary>
            <value>A <see cref="T:SlimDX.Vector4" /> that has a value of (0, 1, 0, 0).</value>
        </member>
        <member name="P:SlimDX.Vector4.UnitX">
            <summary>
Gets the X unit <see cref="T:SlimDX.Vector4" /> (1, 0, 0, 0).
</summary>
            <value>A <see cref="T:SlimDX.Vector4" /> that has a value of (1, 0, 0, 0).</value>
        </member>
        <member name="P:SlimDX.Vector4.Zero">
            <summary>
Gets a <see cref="T:SlimDX.Vector4" /> with all of its components set to zero.
</summary>
            <value>A <see cref="T:SlimDX.Vector4" /> that has all of its components set to zero.</value>
        </member>
        <member name="F:SlimDX.Vector4.W">
            <summary>
Gets or sets the W component of the vector.
</summary>
            <value>The W component of the vector.</value>
        </member>
        <member name="F:SlimDX.Vector4.Z">
            <summary>
Gets or sets the Z component of the vector.
</summary>
            <value>The Z component of the vector.</value>
        </member>
        <member name="F:SlimDX.Vector4.Y">
            <summary>
Gets or sets the Y component of the vector.
</summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="F:SlimDX.Vector4.X">
            <summary>
Gets or sets the X component of the vector.
</summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="T:SlimDX.Vector4">
            <summary>
Defines a four component vector.
</summary>
            <unmanaged>D3DXVECTOR4</unmanaged>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c></returns>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector4Converter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.Vector4Converter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.Vector4Converter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Vector4" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c> to create a new value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Vector2Converter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.Vector2Converter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.Vector2Converter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Vector2" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.GetRawValue(System.Int32)">
            <summary>
Gets the value of the variable in raw bytes.
</summary>
            <param name="count">The number of bytes to retrieve.</param>
            <returns>The raw data representing the value of the variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.SetRawValue(SlimDX.DataStream,System.Int32)">
            <summary>
Sets the value of the variable using raw bytes.
</summary>
            <param name="count">The number of bytes to set.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.GetVariableType">
            <summary>
Gets information about the variable type.
</summary>
            <returns>A type descriptor containing information about the variable type.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsVector">
            <summary>
Reinterprets the effect variable as a more specialized vector variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsUnorderedAccessView">
            <summary>
Reinterprets the effect variable as a more specialized unordered access view variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsString">
            <summary>
Reinterprets the effect variable as a more specialized string variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsShader">
            <summary>
Reinterprets the effect variable as a more specialized shader variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsScalar">
            <summary>
Reinterprets the effect variable as a more specialized scalar variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsResource">
            <summary>
Reinterprets the effect variable as a more specialized shader resource variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsSampler">
            <summary>
Reinterprets the effect variable as a more specialized sampler state variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsRenderTargetView">
            <summary>
Reinterprets the effect variable as a more specialized render target view variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsRasterizer">
            <summary>
Reinterprets the effect variable as a more specialized rasterizer-state variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsMatrix">
            <summary>
Reinterprets the effect variable as a more specialized matrix variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsInterface">
            <summary>
Reinterprets the effect variable as a more specialized interface variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsDepthStencilView">
            <summary>
Reinterprets the effect variable as a more specialized depth-stencil view variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsDepthStencil">
            <summary>
Reinterprets the effect variable as a more specialized depth-stencil-state variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsConstantBuffer">
            <summary>
Reinterprets the effect variable as a more specialized constant buffer variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsClassInstance">
            <summary>
Reinterprets the effect variable as a more specialized class instance variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.AsBlend">
            <summary>
Reinterprets the effect variable as a more specialized blend-state variable.
</summary>
            <returns>The specialized effect variable.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.GetMemberBySemantic(System.String)">
            <summary>
Get a structure member by semantic.
</summary>
            <param name="name">The semantic of the structure member to retrieve.</param>
            <returns>The structure member with the given semantic.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.GetMemberByName(System.String)">
            <summary>
Get a structure member by name.
</summary>
            <param name="name">The name of the structure member to retrieve.</param>
            <returns>The structure member with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.GetMemberByIndex(System.Int32)">
            <summary>
Get a structure member by index.
</summary>
            <param name="index">The zero-based index of the structure member to retrieve.</param>
            <returns>The structure member at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.GetElement(System.Int32)">
            <summary>
Gets an element of an array variable.
</summary>
            <param name="index">The zero-based index of the element to retrieve.</param>
            <returns>The element at the specified index in the array.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.GetAnnotationByName(System.String)">
            <summary>
Get an annotation by name.
</summary>
            <param name="name">The name of the annotation to retrieve.</param>
            <returns>The annotation with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.GetAnnotationByIndex(System.Int32)">
            <summary>
Get an annotation by index.
</summary>
            <param name="index">The zero-based index of the annotation to retrieve.</param>
            <returns>The annotation at the specified index.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariable.ParentConstantBuffer">
            <summary>
Gets the parent constant buffer for this variable.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariable.IsValid">
            <summary>
Indicates whether the data type matches the data stored after casting to a specific interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectVariable.Description">
            <summary>
Gets the effect variable's description.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectVariable.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectVariable" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectVariable">
            <summary>
Defines a base class for all effect variables.
</summary>
            <unmanaged>ID3DX11EffectVariable</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.Predication">
            <summary>
Indicates whether predication state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.StreamOutputBuffers">
            <summary>
Indicates whether stream output buffer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.RasterizerState">
            <summary>
Indicates whether rasterizer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.ScissorRectangles">
            <summary>
Indicates whether scissor rectangle state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.Viewports">
            <summary>
Indicates whether viewport state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.BlendState">
            <summary>
Indicates whether blend state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.DepthStencilState">
            <summary>
Indicates whether depth-stencil state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.RenderTargets">
            <summary>
Indicates whether render target state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.PrimitiveTopology">
            <summary>
Indicates whether primitive topology state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.InputLayout">
            <summary>
Indicates whether input layout state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.IndexBuffer">
            <summary>
Indicates whether index bufer state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.VertexBuffers">
            <summary>
A set of values indicating which vertex buffers are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.ComputeShaderUnorderedAccessViews">
            <summary>
Indicates whether compute shader unordered access views are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.ComputeShaderInterfaces">
            <summary>
A set of values indicating which compute shader interfaces are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.ComputeShaderConstantBuffers">
            <summary>
A set of values indicating which compute shader constant buffers are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.ComputeShaderResources">
            <summary>
A set of values indicating which compute shader resources are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.ComputeShaderSamplers">
            <summary>
A set of values indicating which compute shader sampler states are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.ComputeShader">
            <summary>
Indicates whether compute shader state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.PixelShaderUnorderedAccessViews">
            <summary>
Indicates whether pixel shader unordered access views are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.PixelShaderInterfaces">
            <summary>
A set of values indicating which pixel shader interfaces are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.PixelShaderConstantBuffers">
            <summary>
A set of values indicating which pixel shader constant buffers are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.PixelShaderResources">
            <summary>
A set of values indicating which pixel shader resources are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.PixelShaderSamplers">
            <summary>
A set of values indicating which pixel shader sampler states are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.PixelShader">
            <summary>
Indicates whether pixel shader state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.GeometryShaderInterfaces">
            <summary>
A set of values indicating which geometry shader interfaces are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.GeometryShaderConstantBuffers">
            <summary>
A set of values indicating which geometry shader constant buffers are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.GeometryShaderResources">
            <summary>
A set of values indicating which geometry shader resources are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.GeometryShaderSamplers">
            <summary>
A set of values indicating which geometry shader sampler states are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.GeometryShader">
            <summary>
Indicates whether geometry shader state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.DomainShaderInterfaces">
            <summary>
A set of values indicating which domain shader interfaces are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.DomainShaderConstantBuffers">
            <summary>
A set of values indicating which domain shader constant buffers are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.DomainShaderResources">
            <summary>
A set of values indicating which domain shader resources are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.DomainShaderSamplers">
            <summary>
A set of values indicating which domain shader sampler states are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.DomainShader">
            <summary>
Indicates whether domain shader state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.HullShaderInterfaces">
            <summary>
A set of values indicating which hull shader interfaces are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.HullShaderConstantBuffers">
            <summary>
A set of values indicating which hull shader constant buffers are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.HullShaderResources">
            <summary>
A set of values indicating which hull shader resources are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.HullShaderSamplers">
            <summary>
A set of values indicating which hull shader sampler states are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.HullShader">
            <summary>
Indicates whether hull shader state is enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.VertexShaderInterfaces">
            <summary>
A set of values indicating which vertex shader interfaces are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.VertexShaderConstantBuffers">
            <summary>
A set of values indicating which vertex shader constant buffers are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.VertexShaderResources">
            <summary>
A set of values indicating which vertex shader resources are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.VertexShaderSamplers">
            <summary>
A set of values indicating which vertex shader sampler states are enabled by the mask.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.StateBlockMask.VertexShader">
            <summary>
Indicates whether vertex shader state is enabled by the mask.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.StateBlockMask">
            <summary>
Indicates settings for various bits of device state.
</summary>
            <unmanaged>D3DX11_STATE_BLOCK_MASK</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassShaderDescription.Equals(SlimDX.Direct3D11.EffectPassShaderDescription@,SlimDX.Direct3D11.EffectPassShaderDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassShaderDescription.Equals(SlimDX.Direct3D11.EffectPassShaderDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassShaderDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassShaderDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassShaderDescription.op_Inequality(SlimDX.Direct3D11.EffectPassShaderDescription,SlimDX.Direct3D11.EffectPassShaderDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassShaderDescription.op_Equality(SlimDX.Direct3D11.EffectPassShaderDescription,SlimDX.Direct3D11.EffectPassShaderDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPassShaderDescription.Index">
            <summary>
The element of Variable (if an array) or 0 if not applicable.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPassShaderDescription.Variable">
            <summary>
The variable that this shader came from.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectPassShaderDescription">
            <summary>
Provides a description for an effect pass shader.
</summary>
            <unmanaged>D3DX11_PASS_SHADER_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassDescription.Equals(SlimDX.Direct3D11.EffectPassDescription@,SlimDX.Direct3D11.EffectPassDescription@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassDescription.Equals(SlimDX.Direct3D11.EffectPassDescription)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassDescription.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassDescription.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassDescription.op_Inequality(SlimDX.Direct3D11.EffectPassDescription,SlimDX.Direct3D11.EffectPassDescription)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPassDescription.op_Equality(SlimDX.Direct3D11.EffectPassDescription,SlimDX.Direct3D11.EffectPassDescription)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPassDescription.BlendFactor">
            <summary>
The per-component blend factors (RGBA) for the blend state.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPassDescription.SampleMask">
            <summary>
The sample mask for the blend state.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPassDescription.StencilReference">
            <summary>
The stencil-reference value used in the depth-stencil state.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPassDescription.Signature">
            <summary>
Signature from the vertex shader or geometry shader (if there is no vertex shader) or null if neither exists.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPassDescription.AnnotationCount">
            <summary>
Number of annotations on this pass.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPassDescription.Name">
            <summary>
The name of the pass.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectPassDescription">
            <summary>
Provides a description for effect passes.
</summary>
            <unmanaged>D3DX11_PASS_DESC</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderSignature.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderSignature.Data">
            <summary>
Gets the raw data of the shader signature.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderSignature.GetInputOutputSignature(SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Extracts the input and output signatures from a compiled shader or effect.
</summary>
            <param name="shaderBytecode">The bytecode of the compiled shader or effect.</param>
            <returns>The input and output signatures of the shader or effect.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderSignature.GetOutputSignature(SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Extracts the output signature from a compiled shader or effect.
</summary>
            <param name="shaderBytecode">The bytecode of the compiled shader or effect.</param>
            <returns>The output signature of the shader or effect.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderSignature.GetInputSignature(SlimDX.D3DCompiler.ShaderBytecode)">
            <summary>
Extracts the input signature from a compiled shader or effect.
</summary>
            <param name="shaderBytecode">The bytecode of the compiled shader or effect.</param>
            <returns>The input signature of the shader or effect.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderSignature.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.D3DCompiler.ShaderSignature" />.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderSignature.#ctor(SlimDX.DataStream)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.D3DCompiler.ShaderSignature" /> class.
</summary>
            <param name="data">A <see cref="T:SlimDX.DataStream" /> containing the raw bytes of the shader signature.</param>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderSignature">
            <summary>
Represents a shader signature.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Strip(SlimDX.D3DCompiler.StripFlags)">
            <summary>
Strips extraneous information from a compiled shader or effect.
</summary>
            <param name="flags">Options specifying what to remove from the shader.</param>
            <returns>The stripped shader bytecode.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Disassemble(SlimDX.D3DCompiler.DisassemblyFlags,System.String)">
            <summary>
Disassembles compiled HLSL code back into textual source.
</summary>
            <param name="flags">Flags affecting the output of the disassembly.</param>
            <param name="comments">Commenting information to embed in the disassembly.</param>
            <returns>The textual source of the shader or effect.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Disassemble(SlimDX.D3DCompiler.DisassemblyFlags)">
            <summary>
Disassembles compiled HLSL code back into textual source.
</summary>
            <param name="flags">Flags affecting the output of the disassembly.</param>
            <returns>The textual source of the shader or effect.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Disassemble">
            <summary>
Disassembles compiled HLSL code back into textual source.
</summary>
            <returns>The textual source of the shader or effect.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderBytecode.Data">
            <summary>
Gets the raw data of the compiled bytecode.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.PreprocessFromFile(System.String,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Preprocesses a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="defines">A set of macros to define during preprocessing.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if preprocessing succeeded.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.PreprocessFromFile(System.String,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Preprocesses a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="defines">A set of macros to define during preprocessing.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.PreprocessFromFile(System.String)">
            <summary>
Preprocesses a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Preprocess(System.Byte[],SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Preprocesses the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to preprocess.</param>
            <param name="defines">A set of macros to define during preprocessing.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if preprocessing succeeded.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Preprocess(System.Byte[],SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Preprocesses the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to preprocess.</param>
            <param name="defines">A set of macros to define during preprocessing.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Preprocess(System.Byte[])">
            <summary>
Preprocesses the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to preprocess.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Preprocess(System.String,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Preprocesses the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to preprocess.</param>
            <param name="defines">A set of macros to define during preprocessing.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if preprocessing succeeded.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Preprocess(System.String,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Preprocesses the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to preprocess.</param>
            <param name="defines">A set of macros to define during preprocessing.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Preprocess(System.String)">
            <summary>
Preprocesses the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to preprocess.</param>
            <returns>The preprocessed shader source.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.CompileFromFile(System.String,System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Compiles a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.CompileFromFile(System.String,System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Compiles a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.CompileFromFile(System.String,System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags)">
            <summary>
Compiles a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.CompileFromFile(System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Compiles a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.CompileFromFile(System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Compiles a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.CompileFromFile(System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags)">
            <summary>
Compiles a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.CompileFromFile(System.String,System.String)">
            <summary>
Compiles a shader or effect from a file on disk.
</summary>
            <param name="fileName">The name of the source file to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String,System.String@)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="sourceName">The name of the source being compiled. This is only used for error reporting purposes.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String,System.String@)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="sourceName">The name of the source being compiled. This is only used for error reporting purposes.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.Byte[],System.String)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">An array of bytes containing the raw source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String,System.String@)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="sourceName">The name of the source being compiled. This is only used for error reporting purposes.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="entryPoint">The name of the shader entry-point function, or <c>null</c> for an effect file.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String,System.String@)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="sourceName">The name of the source being compiled. This is only used for error reporting purposes.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include,System.String@)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <param name="compilationErrors">When the method completes, contains a string of compilation errors, or an empty string if compilation succeeded.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags,SlimDX.D3DCompiler.ShaderMacro[],SlimDX.D3DCompiler.Include)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <param name="defines">A set of macros to define during compilation.</param>
            <param name="include">An interface for handling include files.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String,SlimDX.D3DCompiler.ShaderFlags,SlimDX.D3DCompiler.EffectFlags)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <param name="shaderFlags">Shader compilation options.</param>
            <param name="effectFlags">Effect compilation options.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.Compile(System.String,System.String)">
            <summary>
Compiles the provided shader or effect source.
</summary>
            <param name="shaderSource">A string containing the source of the shader or effect to compile.</param>
            <param name="profile">The shader target or set of shader features to compile against.</param>
            <returns>The compiled shader bytecode, or <c>null</c> if the method fails.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderBytecode.#ctor(SlimDX.DataStream)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.D3DCompiler.ShaderBytecode" /> class.
</summary>
            <param name="data">A <see cref="T:SlimDX.DataStream" /> containing the compiled bytecode.</param>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderBytecode">
            <summary>
Represents the compiled bytecode of a shader or effect.
</summary>
            <unmanaged>ID3D10Blob</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderMacro.Equals(SlimDX.D3DCompiler.ShaderMacro@,SlimDX.D3DCompiler.ShaderMacro@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderMacro.Equals(SlimDX.D3DCompiler.ShaderMacro)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderMacro.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderMacro.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderMacro.op_Inequality(SlimDX.D3DCompiler.ShaderMacro,SlimDX.D3DCompiler.ShaderMacro)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderMacro.op_Equality(SlimDX.D3DCompiler.ShaderMacro,SlimDX.D3DCompiler.ShaderMacro)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderMacro.Value">
            <summary>
The macro definition value.
</summary>
        </member>
        <member name="P:SlimDX.D3DCompiler.ShaderMacro.Name">
            <summary>
The macro name.
</summary>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderMacro.#ctor(System.String,System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.D3DCompiler.ShaderMacro" /> struct.
</summary>
            <param name="name">The macro name.</param>
            <param name="value">The macro definition value.</param>
        </member>
        <member name="M:SlimDX.D3DCompiler.ShaderMacro.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.D3DCompiler.ShaderMacro" /> struct.
</summary>
            <param name="name">The macro name.</param>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderMacro">
            <summary>
Defines a shader macro.
</summary>
            <unmanaged>D3D10_SHADER_MACRO</unmanaged>
        </member>
        <member name="M:SlimDX.D3DCompiler.Include.Close(System.IO.Stream)">
            <summary>
Closes an included file.
</summary>
            <param name="stream">The previously opened include stream.</param>
        </member>
        <member name="M:SlimDX.D3DCompiler.Include.Open(SlimDX.D3DCompiler.IncludeType,System.String,System.IO.Stream,System.IO.Stream@)">
            <summary>
Opens and reads the contents of an included file.
</summary>
            <param name="type">Flags specifying the type of the include file.</param>
            <param name="fileName">Name of the include file to open.</param>
            <param name="parentStream">The parent include file.</param>
            <param name="stream">When the method completes, contains a stream pointing to the include file.</param>
        </member>
        <member name="T:SlimDX.D3DCompiler.Include">
            <summary>
Specifies an interface for handling #include directives in shader or effect files.
</summary>
            <unmanaged>ID3DInclude</unmanaged>
        </member>
        <member name="T:SlimDX.D3DCompiler.TessellatorPartitioning">
            <summary>
Specifies tessellator partitioning options.
</summary>
            <unmanaged>D3D11_TESSELLATOR_PARTITIONING</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorPartitioning.FractionalEven">
            <summary>
Partition with an even, fractional number.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorPartitioning.FractionalOdd">
            <summary>
Partition with an odd, fractional number.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorPartitioning.PowerOfTwo">
            <summary>
Partition with a power-of-two number only.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorPartitioning.Integer">
            <summary>
Partition with integers only.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorPartitioning.Undefined">
            <summary>
The partitioning type is undefined.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.TessellatorOutputPrimitive">
            <summary>
Specifies output primitive types for the tessellator.
</summary>
            <unmanaged>D3D11_TESSELLATOR_OUTPUT_PRIMITIVE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorOutputPrimitive.TriangleCounterclockwise">
            <summary>
The output primitive type is a counter clockwise triangle.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorOutputPrimitive.TriangleClockwise">
            <summary>
The output primitive type is a clockwise triangle.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorOutputPrimitive.Line">
            <summary>
The output primitive type is a line.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorOutputPrimitive.Point">
            <summary>
The output primitive type a point.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorOutputPrimitive.Undefined">
            <summary>
The output primitive type is undefined.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.TessellatorDomain">
            <summary>
Specifies domain options for tessellator data.
</summary>
            <unmanaged>D3D11_TESSELLATOR_DOMAIN</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorDomain.Quad">
            <summary>
Quad data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorDomain.Triangle">
            <summary>
Triangle data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorDomain.Isoline">
            <summary>
Isoline data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.TessellatorDomain.Undefined">
            <summary>
The data type is undefined.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.SystemValueType">
            <summary>Identifies shader parameters that use system-value semantics.</summary>
            <unmanaged>D3D10_NAME</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.FinalLineDensityTessellationFactor">
            <summary>
This parameter contains the tessellation factor that corresponds to the amount of lines that are created within the patch. This flag is used to tessellate an isolines patch.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.FinalLineDetailTessellationFactor">
            <summary>
This parameter contains the tessellation factor that corresponds to the amount of lines broken into within the patch. This flag is used to tessellate an isolines patch.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.FinalTriangleInsideTessellationFactor">
            <summary>
This parameter contains the tessellation factor that corresponds to the amount of parts that a tri patch is broken into within the patch.
This flag is used to tessellate a tri patch.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.FinalTriangleEdgeTessellationFactor">
            <summary>
This parameter contains one of three tessellation factors that correspond to the amount of parts that a tri patch is broken into
along the given edge. This flag is used to tessellate a tri patch.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.FinalQuadInsideTessellationFactor">
            <summary>
This parameter contains one of two tessellation factors that correspond to the amount of parts that a quad patch is broken into vertically
and horizontally within the patch. This flag is used to tessellate a quad patch.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.FinalQuadEdgeTessellationFactor">
            <summary>
his parameter contains one of four tessellation factors that correspond to the amount of parts that a quad patch is broken into along
the given edge. This flag is used to tessellate a quad patch.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.DepthLessEqual">
            <summary>
This parameter signifies that the value is less than or equal to a reference value. This flag is used to specify conservative depth for a pixel shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.DepthGreaterEqual">
            <summary>
This parameter signifies that the value is greater than or equal to a reference value. This flag is used to specify conservative depth for a pixel shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.Coverage">
            <summary>
This parameter contains alpha-coverage data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.Depth">
            <summary>
This parameter contains depth data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.Target">
            <summary>
This parameter contains render-target data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.SampleIndex">
            <summary>
This parameter contains a sampler-array index.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.FrontFaceFlag">
            <summary>
This parameter contains data that identifies whether or not the primitive faces the camera.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.InstanceId">
            <summary>
This parameter contains a instance ID.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.PrimitiveId">
            <summary>
This parameter contains a primitive ID.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.VertexId">
            <summary>
This parameter contains a vertex ID.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.ViewportArrayIndex">
            <summary>
This parameter contains a viewport-array index.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.RenderTargetArrayIndex">
            <summary>
This parameter contains a render-target-array index.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.CullDistance">
            <summary>
This parameter contains cull distance data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.ClipDistance">
            <summary>
This parameter contains clip-distance data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.Position">
            <summary>
This parameter contains position data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.SystemValueType.Undefined">
            <summary>
This parameter does not use a predefined system-value semantic.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.StripFlags">
            <summary>
Specifies options for stripping data from a shader or effect.
</summary>
            <unmanaged>D3DCOMPILER_STRIP_FLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.StripFlags.StripTestBlobs">
            <summary>
Remove test blob data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.StripFlags.StripDebugInformation">
            <summary>
Remove debug information.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.StripFlags.StripReflectionData">
            <summary>
Remove reflection data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.StripFlags.None">
            <summary>
No extra stripping options.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderVersion">
            <summary>
Indicates possible shader types.
</summary>
            <unmanaged>D3D11_SHADER_VERSION_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVersion.ComputeShader">
            <summary>
A compute shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVersion.DomainShader">
            <summary>
A domain shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVersion.HullShader">
            <summary>
A hull shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVersion.GeometryShader">
            <summary>
A geometry shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVersion.VertexShader">
            <summary>
A vertex shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVersion.PixelShader">
            <summary>
A pixel shader.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderVariableType">
            <summary>
Identifies possible shader variable types.
</summary>
            <unmanaged>D3D10_SHADER_VARIABLE_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.ConsumeStructuredBuffer">
            <summary>
The variable is a consume structured buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.AppendStructuredBuffer">
            <summary>
The variable is an append structured buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RWStructuredBuffer">
            <summary>
The variable is a read and write structured buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.StructuredBuffer">
            <summary>
he variable is a structured buffer. 
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RWByteAddressBuffer">
            <summary>
The variable is a read and write byte-address buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.ByteAddressBuffer">
            <summary>
The variable is a byte-address buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RWBuffer">
            <summary>
The variable is a read and write buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RWTexture3D">
            <summary>
he variable is a 3D read and write texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RWTexture2DArray">
            <summary>
The variable is an array of 2D read and write textures.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RWTexture2D">
            <summary>
The variable is a 2D read and write texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RWTexture1DArray">
            <summary>
The variable is an array of 1D read and write textures.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RWTexture1D">
            <summary>
The variable is a 1D read and write texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Double">
            <summary>
The variable is a double precision (64-bit) floating-point number.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.ComputeShader">
            <summary>
The variable holds a compiled compute-shader binary.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.InterfacePointer">
            <summary>
The variable is an interface.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.DomainShader">
            <summary>
The variable holds a compiled domain-shader binary.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.HullShader">
            <summary>
The variable holds a compiled hull-shader binary.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.TextureCubeArray">
            <summary>
The variable is a texture-cube array.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Texture2DMSArray">
            <summary>
The variable is a 2D-multisampled-texture array.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Texture2DMS">
            <summary>
The variable is a 2D-multisampled texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.DepthStencilView">
            <summary>
The variable is a depth-stencil view.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.RenderTargetView">
            <summary>
The variable is a render-target view.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Texture2DArray">
            <summary>
The variable is a 2D-texture array.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Texture1DArray">
            <summary>
The variable is a 1D-texture array.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.TBuffer">
            <summary>
The variable is a texture buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.CBuffer">
            <summary>
The variable is a constant buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Buffer">
            <summary>
The variable is a buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Blend">
            <summary>
The variable is a blend-state object.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.DepthStencil">
            <summary>
The variable is a depth-stencil-state object.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Rasterizer">
            <summary>
The variable is a rasterizer-state object.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.GeometryShader">
            <summary>
The variable is a geometry shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.UInt8">
            <summary>
The variable is an 8-bit unsigned integer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.UInt">
            <summary>
The variable is an unsigned integer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.VertexShader">
            <summary>
The variable is a vertex shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.PixelShader">
            <summary>
The variable is a pixel shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Sampler">
            <summary>
The variable is a sampler.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.TextureCube">
            <summary>
The variable is a texture cube.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Texture3D">
            <summary>
The variable is a 3D texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Texture2D">
            <summary>
The variable is a 2D texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Texture1D">
            <summary>
The variable is a 1D texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Texture">
            <summary>
The variable is a texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.String">
            <summary>
The variable is a string.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Float">
            <summary>
The variable is a floating-point number.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Int">
            <summary>
The variable is an integer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Bool">
            <summary>
The variable is a boolean.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableType.Void">
            <summary>
The variable is a void pointer.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderVariableFlags">
            <summary>
Indicates additional information about a shader variable.
</summary>
            <unmanaged>D3D10_SHADER_VARIABLE_FLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableFlags.Used">
            <summary>
Indicates that this variable is used by this shader. This value confirms that a particular shader variable
(which can be common to many different shaders) is indeed used by a particular shader. 
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableFlags.UserPacked">
            <summary>
Indicates that the registers assigned to this shader variable were explicitly declared in shader code (instead of automatically assigned by the compiler).
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderVariableClass">
            <summary>
Identifies shader variable classes.
</summary>
            <unmanaged>D3D10_SHADER_VARIABLE_CLASS</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableClass.InterfacePointer">
            <summary>
The shader variable is an interface pointer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableClass.InterfaceClass">
            <summary>
The shader variable is a class.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableClass.Struct">
            <summary>
The shader variable is a structure.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableClass.Object">
            <summary>
The shader variable is an object.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableClass.MatrixColumns">
            <summary>
The shader variable is a column-major matrix.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableClass.MatrixRows">
            <summary>
The shader variable is a row-major matrix.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableClass.Vector">
            <summary>
The shader variable is a vector.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderVariableClass.Scalar">
            <summary>
The shader variable is a scalar.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderInputType">
            <summary>
Identifies shader resource types.
</summary>
            <unmanaged>D3D10_SHADER_INPUT_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.RWStructuredWithCounter">
            <summary>
The shader resource is a read and write structured buffer that uses the built-in counter to append or consume.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.ConsumeStructured">
            <summary>
The shader resource is a consume-structured buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.AppendStructured">
            <summary>
The shader resource is an append-structured buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.RWByteAddress">
            <summary>
The shader resource is a read and write byte-address buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.ByteAddress">
            <summary>
The shader resource is a byte-address buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.RWStructured">
            <summary>
The shader resource is a read and write structured buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.Structured">
            <summary>
The shader resource is a structure buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.Sampler">
            <summary>
The shader resource is a sampler.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.Texture">
            <summary>
The shader resource is a texture.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.TextureBuffer">
            <summary>
The shader resource is a texture buffer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputType.ConstantBuffer">
            <summary>
The shader resource is a constant buffer.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderInputFlags">
            <summary>
Identifies shader input options.
</summary>
            <unmanaged>D3D10_SHADER_INPUT_FLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputFlags.TextureComponents">
            <summary>
A 2-bit value for encoding texture components.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputFlags.TextureComponent1">
            <summary>
A 2-bit value for encoding texture components.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputFlags.TextureComponent0">
            <summary>
A 2-bit value for encoding texture components.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputFlags.ComparisonSampler">
            <summary>
Use a comparison sampler, which uses the SampleCmp and SampleCmpLevelZero sampling functions.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderInputFlags.UserPacked">
            <summary>
Assign a shader input to a register based on the register assignment in the HLSL code (instead of letting the compiler choose the register).
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ShaderFlags">
            <summary>Provides various shader compilation flags.</summary>
            <unmanaged>D3D10_SHADER</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.WarningsAreErrors">
            <summary>
Inform the HLSL compiler to treat all warnings as errors when compiling the shader code. For new shader code, you should use this
option so you can resolve all warnings and ensure the fewest possible hard-to-find code defects.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.OptimizationLevel3">
            <summary>
Highest optimization level. Will produce best possible code but may take significantly longer to do so. This will be useful for
final builds of an application where performance is the most important factor.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.OptimizationLevel2">
            <summary>
Second highest optimization level.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.OptimizationLevel1">
            <summary>
Second lowest optimization level.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.OptimizationLevel0">
            <summary>
Lowest optimization level. May produce slower code but will do so more quickly. This may be useful in a highly iterative shader development cycle.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.EnableIEEEStrictness">
            <summary>
Enables IEEE floating point strictness.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.EnableBackwardsCompatibility">
            <summary>
This enables older shaders to compile to 4_0 targets.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.EnableStrictness">
            <summary>
By default, the HLSL compiler disables strictness on deprecated syntax. Specifying this flag enables strictness which may not allow for legacy syntax.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.PreferFlowControl">
            <summary>
Tells the compiler to use flow-control (when possible).
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.AvoidFlowControl">
            <summary>
Tells the compiler to not allow flow-control (when possible).
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.NoPreshader">
            <summary>
Disables Preshaders. Using this flag will cause the compiler to not pull out static expression for evaluation.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.ForceSoftwarePixelShader">
            <summary>
Compile a pixel shader for the next highest shader profile. This option turns debugging on (and optimizations off).
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.ForceSoftwareVertexShader">
            <summary>
Compile a vertex shader for the next highest shader profile. This option turns debugging on (and optimizations off).
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.PartialPrecision">
            <summary>
Force all computations to be done with partial precision; this may run faster on some hardware.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.PackMatrixColumnMajor">
            <summary>
Unless explicitly specified, matrices will be packed in column-major order on input and output from the shader. This is generally
more efficient, since it allows vector-matrix multiplication to be performed using a series of dot-products.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.PackMatrixRowMajor">
            <summary>
Unless explicitly specified, matrices will be packed in row-major order on input and output from the shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.SkipOptimization">
            <summary>
Skip optimization during code generation; generally recommended for debug only.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.SkipValidation">
            <summary>
Do not validate the generated code against known capabilities and constraints. Only use this with shaders that have been successfully
compiled in the past. Shaders are always validated by DirectX before they are set to the device.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.Debug">
            <summary>
Insert debug file/line/type/symbol information into the resulting shader.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ShaderFlags.None">
            <summary>
No specific compilation options.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ResourceReturnType">
            <summary>
Indicates return value types.
</summary>
            <unmanaged>D3D11_RESOURCE_RETURN_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ResourceReturnType.Continued">
            <summary>
Return type is a multiple-dword type, such as a double or uint64, and the component is continued from the
previous component that was declared. The first component represents the lower bits. 
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ResourceReturnType.Double">
            <summary>
Return type of double precision floating point value.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ResourceReturnType.Mixed">
            <summary>
Return type is unknown.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ResourceReturnType.Float">
            <summary>
Return type of single precision floating point value.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ResourceReturnType.UInt">
            <summary>
Return type of unsigned integer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ResourceReturnType.SInt">
            <summary>
Return type of signed integer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ResourceReturnType.SNorm">
            <summary>
Return type of signed normalized integer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ResourceReturnType.UNorm">
            <summary>
Return type of unsigned normalized integer.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.RegisterComponentType">
            <summary>Defines possible register component types.</summary>
            <unmanaged>D3D10_REGISTER_COMPONENT_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentType.Float32">
            <summary>
32-bit floating-point number.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentType.SInt32">
            <summary>
32-bit signed integer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentType.UInt32">
            <summary>
32-bit unsigned integer.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentType.Unknown">
            <summary>
Unknown data type.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.RegisterComponentMaskFlags">
            <summary>
Flags that indicate which components of a value are valid.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentMaskFlags.All">
            <summary>
Indicates that all components are valid.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentMaskFlags.ComponentW">
            <summary>
Indicates that the W (or A) component is valid.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentMaskFlags.ComponentZ">
            <summary>
Indicates that the Z (or B) component is valid.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentMaskFlags.ComponentY">
            <summary>
Indicates that the Y (or G) component is valid.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentMaskFlags.ComponentX">
            <summary>
Indicates that the X (or R) component is valid.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.RegisterComponentMaskFlags.None">
            <summary>
Indicates that no components are valid.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.InputPrimitive">
            <summary>
Indicates how the pipeline interprets geometry or hull shader input primitives.
</summary>
            <unmanaged>D3D11_PRIMITIVE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith32ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 32 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith31ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 31 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith30ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 30 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith29ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 29 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith28ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 28 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith27ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 27 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith26ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 26 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith25ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 25 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith24ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 24 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith23ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 23 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith22ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 22 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith21ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 21 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith20ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 20 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith19ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 19 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith18ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 18 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith17ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 17 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith16ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 16 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith15ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 15 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith14ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 14 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith13ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 13 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith12ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 12 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith11ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with 11 control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith10ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with ten control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith9ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with nine control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith8ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with eight control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith7ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with seven control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith6ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with six control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith5ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with five control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith4ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with four control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith3ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with three control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith2ControlPoints">
            <summary>
Interpret the input primitive as a control point patch with two control points.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.PatchWith1ControlPoint">
            <summary>
Interpret the input primitive as a control point patch with one control point.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.TriangleWithAdjacency">
            <summary>
Interpret the input primitive as a triangle with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.LineWithAdjacency">
            <summary>
Interpret the input primitive as a line with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.Triangle">
            <summary>
Interpret the input primitive as a triangle.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.Line">
            <summary>
Interpret the input primitive as a line.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.Point">
            <summary>
Interpret the input primitive as a point.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.InputPrimitive.Undefined">
            <summary>
The shader has not been initialized with an input primitive type.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.IncludeType">
            <summary>
Flags that indicate the location of an include file.
</summary>
            <unmanaged>D3D10_INCLUDE_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.IncludeType.System">
            <summary>
Indicates that the include is in the system path (or paths).
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.IncludeType.Local">
            <summary>
Indicates that the include is in the local path (or paths).
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.EffectFlags">
            <summary>Specifies compile- or run-time options during effect creation.</summary>
            <unmanaged>D3D10_EFFECT</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.EffectFlags.SingleThreaded">
            <summary>
Do not attempt to synchronize with other threads loading effects into the same pool.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.EffectFlags.AllowSlowOperations">
            <summary>
Allow mutable state objects (non-literal expressions may appear in state object definitions). This
has a negative impact on run-time performance.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.EffectFlags.ChildEffect">
            <summary>
Compile the .fx file to a child effect. Child effects do not initialize shared values
(as those values are instead initialized by the effect pool).
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.EffectFlags.None">
            <summary>
Standard compile- and run-time behavior.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.DisassemblyFlags">
            <summary>
Specifies flags that affect the output of shader disassembly.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.DisassemblyFlags.EnableInstructionNumbering">
            <summary>
Enable instruction numbering.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.DisassemblyFlags.EnableDefaultValues">
            <summary>
Enable the output of default values.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.DisassemblyFlags.EnableColorCodes">
            <summary>
Enable the output of color codes.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.DisassemblyFlags.None">
            <summary>
No specific flags specified.
</summary>
        </member>
        <member name="T:SlimDX.D3DCompiler.ConstantBufferType">
            <summary>
Indicates a constant buffer's type.
</summary>
            <unmanaged>D3D11_CBUFFER_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.D3DCompiler.ConstantBufferType.ResourceBinding">
            <summary>
A buffer containing binding information.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ConstantBufferType.InterfacePointers">
            <summary>
A buffer containing interface pointers.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ConstantBufferType.TextureBuffer">
            <summary>
A buffer containing texture data.
</summary>
        </member>
        <member name="F:SlimDX.D3DCompiler.ConstantBufferType.ConstantBuffer">
            <summary>
A buffer containing scalar constants.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPass.ComputeStateBlockMask">
            <summary>
Generate a mask for state changes during the pass.
</summary>
            <returns>The created state block mask.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPass.Apply(SlimDX.Direct3D11.DeviceContext)">
            <summary>
Set the state contained in a pass to the device.
</summary>
            <param name="context">The device context to use to set the state.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPass.GetAnnotationByName(System.String)">
            <summary>
Get an annotation by name.
</summary>
            <param name="name">The name of the annotation to retrieve.</param>
            <returns>The annotation with the given name.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPass.GetAnnotationByIndex(System.Int32)">
            <summary>
Get an annotation by index.
</summary>
            <param name="index">The zero-based index of the annotation to retrieve.</param>
            <returns>The annotation at the specified index.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.EffectPass.#ctor(System.IntPtr)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.EffectPass" /> class.
</summary>
            <param name="pointer">A pointer to the unmanaged interface.</param>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPass.ComputeShaderDescription">
            <summary>
Gets a description for the pass's compute shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPass.DomainShaderDescription">
            <summary>
Gets a description for the pass's domain shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPass.HullShaderDescription">
            <summary>
Gets a description for the pass's hull shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPass.PixelShaderDescription">
            <summary>
Gets a description for the pass's pixel shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPass.VertexShaderDescription">
            <summary>
Gets a description for the pass's vertex shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPass.GeometryShaderDescription">
            <summary>
Gets a description for the pass's geometry shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPass.IsValid">
            <summary>
Indicates whether the pass represents a valid interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.EffectPass.Description">
            <summary>
Gets the effect pass's description.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectPass">
            <summary>
Encapsulates state assignments within a technique.
</summary>
            <unmanaged>ID3DX11EffectPass</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.ComputeShader">
            <summary>
Gets the device's compute shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.HullShader">
            <summary>
Gets the device's hull shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.DomainShader">
            <summary>
Gets the device's domain shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.GeometryShader">
            <summary>
Gets the device's geometry shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.PixelShader">
            <summary>
Gets the device's pixel shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.VertexShader">
            <summary>
Gets the device's vertex shader interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.Rasterizer">
            <summary>
Gets the device's rasterizer interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.StreamOutput">
            <summary>
Gets the device's stream output interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.OutputMerger">
            <summary>
Gets the device's output merger interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.InputAssembler">
            <summary>
Gets the device's input assembler interface.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceContext.Type">
            <summary>
Gets the type of the device context.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.SetPredication(SlimDX.Direct3D11.Predicate,System.Boolean)">
            <summary>
Sets a rendering predicate.
</summary>
            <param name="predicate">The predicate to set.</param>
            <param name="predicateValue">If true, rendering will be affected when the predicate's conditions are met. Otherwise,
rendering will be affected when the predicate's conditions are not met.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.UnmapSubresource(SlimDX.Direct3D11.Resource,System.Int32)">
            <summary>
Releases a previously mapped resource.
</summary>
            <param name="resource">The resource to unmap.</param>
            <param name="subresource">Index of the subresource to unmap.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.MapSubresource(SlimDX.Direct3D11.Resource,System.Int32,SlimDX.Direct3D11.MapMode,SlimDX.Direct3D11.MapFlags)">
            <summary>
Maps a GPU resource into CPU-accessible memory.
</summary>
            <param name="resource">The resource to map.</param>
            <param name="subresource">Index of the subresource level to lock.</param>
            <param name="mode">Specifies the CPU's read and write permissions for the resource. </param>
            <param name="flags">Flags that specify what the CPU should do when the GPU is busy.</param>
            <returns>The mapped resource data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.MapSubresource(SlimDX.Direct3D11.Buffer,SlimDX.Direct3D11.MapMode,SlimDX.Direct3D11.MapFlags)">
            <summary>
Maps a GPU resource into CPU-accessible memory.
</summary>
            <param name="resource">The resource to map.</param>
            <param name="mode">Specifies the CPU's read and write permissions for the resource. </param>
            <param name="flags">Flags that specify what the CPU should do when the GPU is busy.</param>
            <returns>The mapped resource data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.MapSubresource(SlimDX.Direct3D11.Texture3D,System.Int32,System.Int32,SlimDX.Direct3D11.MapMode,SlimDX.Direct3D11.MapFlags)">
            <summary>
Maps a GPU resource into CPU-accessible memory.
</summary>
            <param name="resource">The resource to map.</param>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="arraySlice">The zero-based index of the first texture to use (in an array of textures).</param>
            <param name="mode">Specifies the CPU's read and write permissions for the resource. </param>
            <param name="flags">Flags that specify what the CPU should do when the GPU is busy.</param>
            <returns>The mapped resource data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.MapSubresource(SlimDX.Direct3D11.Texture2D,System.Int32,System.Int32,SlimDX.Direct3D11.MapMode,SlimDX.Direct3D11.MapFlags)">
            <summary>
Maps a GPU resource into CPU-accessible memory.
</summary>
            <param name="resource">The resource to map.</param>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="arraySlice">The zero-based index of the first texture to use (in an array of textures).</param>
            <param name="mode">Specifies the CPU's read and write permissions for the resource. </param>
            <param name="flags">Flags that specify what the CPU should do when the GPU is busy.</param>
            <returns>The mapped resource data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.MapSubresource(SlimDX.Direct3D11.Texture1D,System.Int32,System.Int32,SlimDX.Direct3D11.MapMode,SlimDX.Direct3D11.MapFlags)">
            <summary>
Maps a GPU resource into CPU-accessible memory.
</summary>
            <param name="resource">The resource to map.</param>
            <param name="mipSlice">A zero-based index into an array of subtextures; 0 indicates the first, most detailed subtexture (or mipmap level).</param>
            <param name="arraySlice">The zero-based index of the first texture to use (in an array of textures).</param>
            <param name="mode">Specifies the CPU's read and write permissions for the resource. </param>
            <param name="flags">Flags that specify what the CPU should do when the GPU is busy.</param>
            <returns>The mapped resource data.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.GetPredication(SlimDX.Direct3D11.Predicate@,System.Boolean@)">
            <summary>
Gets the rendering predicate state.
</summary>
            <param name="predicate">When the method completes, contains the predicate interface currently in use.</param>
            <param name="predicateValue">When the method completes, contains the predicate comparison value.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.GetData``1(SlimDX.Direct3D11.Asynchronous,SlimDX.Direct3D11.AsynchronousFlags)">
            <summary>
Gets data from the GPU asynchronously.
</summary>
            <param name="data">The asynchronous data provider.</param>
            <param name="flags">Flags specifying how the command should operate.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.GetData``1(SlimDX.Direct3D11.Asynchronous)">
            <summary>
Gets data from the GPU asynchronously.
</summary>
            <param name="data">The asynchronous data provider.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.GetData(SlimDX.Direct3D11.Asynchronous,SlimDX.Direct3D11.AsynchronousFlags)">
            <summary>
Gets data from the GPU asynchronously.
</summary>
            <param name="data">The asynchronous data provider.</param>
            <param name="flags">Flags specifying how the command should operate.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.GetData(SlimDX.Direct3D11.Asynchronous)">
            <summary>
Gets data from the GPU asynchronously.
</summary>
            <param name="data">The asynchronous data provider.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.IsDataAvailable(SlimDX.Direct3D11.Asynchronous,SlimDX.Direct3D11.AsynchronousFlags)">
            <summary>
Determines if data is available for an asynchronous object.
</summary>
            <param name="data">The asynchronous data provider.</param>
            <param name="flags">Flags specifying how the command should operate.</param>
            <returns>
                <c>true</c> if query data is available for retrieval; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.IsDataAvailable(SlimDX.Direct3D11.Asynchronous)">
            <summary>
Determines if data is available for an asynchronous object.
</summary>
            <param name="data">The asynchronous data provider.</param>
            <returns>
                <c>true</c> if query data is available for retrieval; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.SetMinimumLod(SlimDX.Direct3D11.Resource,System.Single)">
            <summary>
Sets the minimum level-of-detail for a resource.
</summary>
            <param name="resource">The resource for which level-of-detail information is to be set.</param>
            <param name="minimumLod">The level-of-detail for the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.GetMinimumLod(SlimDX.Direct3D11.Resource)">
            <summary>
Gets the minimum level-of-detail for a resource.
</summary>
            <param name="resource">The resource for which level-of-detail information is to be retrieved.</param>
            <returns>The minimum level-of-detail for the specified resource.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.GenerateMips(SlimDX.Direct3D11.ShaderResourceView)">
            <summary>
Generates mipmaps for the specified shader resource.
</summary>
            <param name="view">A view of the resource for which to generate mipmaps.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.Flush">
            <summary>
Sends queued commands in the command buffer to the GPU.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.FinishCommandList(System.Boolean)">
            <summary>
Create a command list and record graphics commands into it.
</summary>
            <param name="restoreState">A flag indicating whether the immediate context state is saved (prior) and restored (after) the execution of a command list.</param>
            <returns>The created command list containing the queued rendering commands.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.ExecuteCommandList(SlimDX.Direct3D11.CommandList,System.Boolean)">
            <summary>
Queues commands from a command list onto a device.
</summary>
            <param name="commands">The list of commands to execute.</param>
            <param name="restoreState">A flag indicating whether the immediate context state is saved (prior) and restored (after) the execution of a command list.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.End(SlimDX.Direct3D11.Asynchronous)">
            <summary>
Marks the end of a series of asynchronous commands.
</summary>
            <param name="data">An asynchronous data provider.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.DrawAuto">
            <summary>
Renders primitive data of an unknown size that was created by a geometry shader.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.DrawIndexedInstancedIndirect(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Renders indexed, instanced, GPU-generated primitive data.
</summary>
            <param name="arguments">A buffer containing arguments for the draw call.</param>
            <param name="alignedOffset">A byte-aligned offset between the start of the buffer and the arguments.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.DrawIndexedInstanced(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Renders indexed, instanced primitive data.
</summary>
            <param name="indexCountPerInstance">The number of indices to use per instance.</param>
            <param name="instanceCount">The number of instances to render.</param>
            <param name="startIndexLocation">The index of the first index.</param>
            <param name="baseVertexLocation">The index of the first vertex.</param>
            <param name="startInstanceLocation">The index of the first instance.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.DrawIndexed(System.Int32,System.Int32,System.Int32)">
            <summary>
Renders indexed, non-instanced primitive data.
</summary>
            <param name="indexCount">The number of indices to use.</param>
            <param name="startIndexLocation">The index of the first index.</param>
            <param name="baseVertexLocation">The index of the first vertex.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.DrawInstancedIndirect(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Renders non-indexed, instanced, GPU-generated primitive data.
</summary>
            <param name="arguments">A buffer containing arguments for the draw call.</param>
            <param name="alignedOffset">A byte-aligned offset between the start of the buffer and the arguments.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.DrawInstanced(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Renders non-indexed, instanced primitive data.
</summary>
            <param name="vertexCountPerInstance">The number of vertices to use per instance.</param>
            <param name="instanceCount">The number of instances to render.</param>
            <param name="startVertexLocation">The index of the first vertex.</param>
            <param name="startInstanceLocation">The index of the first instance.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.Draw(System.Int32,System.Int32)">
            <summary>
Renders non-indexed, non-instanced primitive data.
</summary>
            <param name="vertexCount">The number of vertices to use.</param>
            <param name="startVertexLocation">The index of the first vertex.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.DispatchIndirect(SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Execute a command list to draw GPU-generated primitives over one of more thread groups.
</summary>
            <param name="arguments">A buffer containing arguments for the thread groups.</param>
            <param name="alignedOffset">A byte-aligned offset between the start of the buffer and the arguments.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32)">
            <summary>
Executes a command list from a thread group.
</summary>
            <param name="threadGroupCountX">The number of groups dispatched in the x direction.</param>
            <param name="threadGroupCountY">The number of groups dispatched in the y direction.</param>
            <param name="threadGroupCountZ">The number of groups dispatched in the z direction.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.UpdateSubresource(SlimDX.DataBox,SlimDX.Direct3D11.Resource,System.Int32,SlimDX.Direct3D11.ResourceRegion)">
            <summary>
Copies data from the CPU to to a non-mappable subresource region.
</summary>
            <param name="source">The source data.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="region">The destination region within the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.UpdateSubresource(SlimDX.DataBox,SlimDX.Direct3D11.Resource,System.Int32)">
            <summary>
Copies data from the CPU to to a non-mappable subresource region.
</summary>
            <param name="source">The source data.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.ResolveSubresource(SlimDX.Direct3D11.Resource,System.Int32,SlimDX.Direct3D11.Resource,System.Int32,SlimDX.DXGI.Format)">
            <summary>
Copies a multisampled resource into a non-multisampled resource.
</summary>
            <param name="source">The source resource.</param>
            <param name="sourceSubresource">The source subresource.</param>
            <param name="destination">The destination resource.</param>
            <param name="destinationSubresource">The destination subresource.</param>
            <param name="format">The format that indicates how the multisampled resource will be resolved.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.CopySubresourceRegion(SlimDX.Direct3D11.Resource,System.Int32,SlimDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Copies an entire region of a resource's subresource data using the GPU.
</summary>
            <param name="source">The source resource.</param>
            <param name="sourceSubresource">The source subresource.</param>
            <param name="destination">The destination resource.</param>
            <param name="destinationSubresource">The destination subresource.</param>
            <param name="x">The X offset between the source region origin and the destination location.</param>
            <param name="y">The Y offset between the source region origin and the destination location.</param>
            <param name="z">The Z offset between the source region origin and the destination location.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.CopySubresourceRegion(SlimDX.Direct3D11.Resource,System.Int32,SlimDX.Direct3D11.ResourceRegion,SlimDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Copies a portion of a resource's data using the GPU.
</summary>
            <param name="source">The source resource.</param>
            <param name="sourceSubresource">The source subresource.</param>
            <param name="region">The source region.</param>
            <param name="destination">The destination resource.</param>
            <param name="destinationSubresource">The destination subresource.</param>
            <param name="x">The X offset between the source region origin and the destination location.</param>
            <param name="y">The Y offset between the source region origin and the destination location.</param>
            <param name="z">The Z offset between the source region origin and the destination location.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.CopyStructureCount(SlimDX.Direct3D11.UnorderedAccessView,SlimDX.Direct3D11.Buffer,System.Int32)">
            <summary>
Copies data from a buffer holding variable length data.
</summary>
            <param name="unorderedAccessView">The view of the source resource.</param>
            <param name="destinationBuffer">The destination buffer.</param>
            <param name="destinationOffset">Aligned byte offset from the start of the destination buffer to which data will be copied.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.CopyResource(SlimDX.Direct3D11.Resource,SlimDX.Direct3D11.Resource)">
            <summary>
Copies resource data using the GPU.
</summary>
            <param name="source">The source resource.</param>
            <param name="destination">The destination resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.ClearUnorderedAccessView(SlimDX.Direct3D11.UnorderedAccessView,System.Single[])">
            <summary>
Clears an unordered access resource with the given values.
</summary>
            <param name="unorderedAccessView">The view of the resource to clear.</param>
            <param name="values">Values that will be copied to corresponding channels on the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.ClearUnorderedAccessView(SlimDX.Direct3D11.UnorderedAccessView,System.Int32[])">
            <summary>
Clears an unordered access resource with the given values.
</summary>
            <param name="unorderedAccessView">The view of the resource to clear.</param>
            <param name="values">Values that will be copied to corresponding channels on the resource.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.ClearState">
            <summary>
Restores all device state to defaults.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.ClearRenderTargetView(SlimDX.Direct3D11.RenderTargetView,SlimDX.Color4)">
            <summary>
Clears the specified render target resource.
</summary>
            <param name="view">The view of the resource to clear.</param>
            <param name="color">The color to clear to.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.ClearDepthStencilView(SlimDX.Direct3D11.DepthStencilView,SlimDX.Direct3D11.DepthStencilClearFlags,System.Single,System.Byte)">
            <summary>
Clears the specified depth-stencil resource.
</summary>
            <param name="view">The view of the resource to clear.</param>
            <param name="flags">Flags indicating which parts of the resource to clear.</param>
            <param name="depth">The depth value to clear to, if applicable.</param>
            <param name="stencil">The stencil value to clear to, if applicable.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.Begin(SlimDX.Direct3D11.Asynchronous)">
            <summary>
Marks the beginning of a series of asynchronous commands.
</summary>
            <param name="data">An asynchronous data provider.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.DeviceContext.#ctor(SlimDX.Direct3D11.Device)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D11.DeviceContext" /> class. This instance will be a deferred rendering context.
</summary>
            <param name="device">The device used to create the context.</param>
        </member>
        <member name="T:SlimDX.Direct3D11.DeviceContext">
            <summary>Represents a device context which generates rendering commands.</summary>
            <unmanaged>ID3D11DeviceContext</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D11.UnorderedAccessViewDimension">
            <summary>Identifies the type of the resource that will be viewed.</summary>
            <unmanaged>D3D11_UAV_DIMENSION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewDimension.Texture3D">
            <summary>
The resource will be accessed as a 3D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewDimension.Texture2DArray">
            <summary>
The resource will be accessed as an array of 2D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewDimension.Texture2D">
            <summary>
The resource will be accessed as a 2D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewDimension.Texture1DArray">
            <summary>
The resource will be accessed as an array of 1D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewDimension.Texture1D">
            <summary>
The resource will be accessed as a 1D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewDimension.Buffer">
            <summary>
The resource will be accessed as a buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewDimension.Unknown">
            <summary>
The type of the resource is unknown.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.UnorderedAccessViewBufferFlags">
            <summary>Specifies unordered-access-view buffer options.</summary>
            <unmanaged>D3D11_BUFFER_UAV_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter">
            <summary>
Adds a counter to the unordered-access-view buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewBufferFlags.AllowAppend">
            <summary>
Allow data to be appended to the end of the buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewBufferFlags.RawData">
            <summary>
Resource contains raw, unstructured data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.UnorderedAccessViewBufferFlags.None">
            <summary>
No specific flags specified.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.TextureAddressMode">
            <summary>Identifies techniques for resolving texture coordinates that are outside of the boundaries of a texture.</summary>
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.TextureAddressMode.MirrorOnce">
            <summary>
Similar to Mirror and Clamp. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then
clamps to the maximum value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.TextureAddressMode.Border">
            <summary>
Texture coordinates outside the range [0.0, 1.0] are set to the border color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.TextureAddressMode.Clamp">
            <summary>
Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.TextureAddressMode.Mirror">
            <summary>
Flip the texture at every (u,v) integer junction. For u values between 0 and 1, for example, the texture is addressed normally;
between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again; and so on.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.TextureAddressMode.Wrap">
            <summary>
Tile the texture at every (u,v) integer junction. For example, for u values between 0 and 3, the texture is repeated three times.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.StencilOperation">
            <summary>Specifies the stencil operations that can be performed during depth-stencil testing.</summary>
            <unmanaged>D3D11_STENCIL_OP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.StencilOperation.Decrement">
            <summary>
Decrement the stencil value by 1, and wrap the result if necessary.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.StencilOperation.Increment">
            <summary>
Increment the stencil value by 1, and wrap the result if necessary.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.StencilOperation.Invert">
            <summary>
Invert the stencil data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.StencilOperation.DecrementAndClamp">
            <summary>
Decrement the stencil value by 1, and clamp the result.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.StencilOperation.IncrementAndClamp">
            <summary>
Increment the stencil value by 1, and clamp the result.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.StencilOperation.Replace">
            <summary>
Set the stencil data to the reference value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.StencilOperation.Zero">
            <summary>
Set the stencil data to 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.StencilOperation.Keep">
            <summary>
Keep the existing stencil data.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ShaderResourceViewExtendedBufferFlags">
            <summary>Specifies shader resource view extended buffer options.</summary>
            <unmanaged>D3D11_BUFFEREX_SRV_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewExtendedBufferFlags.RawData">
            <summary>
Resource contains raw, unstructured data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewExtendedBufferFlags.None">
            <summary>
No specific flags specified.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ShaderResourceViewDimension">
            <summary>Identifies the type of the resource that will be viewed.</summary>
            <unmanaged>D3D11_SRV_DIMENSION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.ExtendedBuffer">
            <summary>
The resource will be accessed as an extended buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.TextureCubeArray">
            <summary>
The resource will be accessed as an array of cube textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.TextureCube">
            <summary>
The resource will be accessed as a cube texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Texture3D">
            <summary>
The resource will be accessed as a 3D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Texture2DMultisampledArray">
            <summary>
The resource will be accessed as an array of 2D textures with multisampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Texture2DMultisampled">
            <summary>
The resource will be accessed as a 2D texture with multisampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Texture2DArray">
            <summary>
The resource will be accessed as an array of 2D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Texture2D">
            <summary>
The resource will be accessed as a 2D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Texture1DArray">
            <summary>
The resource will be accessed as an array of 1D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Texture1D">
            <summary>
The resource will be accessed as a 1D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Buffer">
            <summary>
The resource will be accessed as a buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ShaderResourceViewDimension.Unknown">
            <summary>
The type of the resource is unknown.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ScanOpCode">
            <summary>Identifies the operation for a scan.</summary>
            <unmanaged>D3DX11_SCAN_OPCODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanOpCode.XOR">
            <summary>
The operation is XOR.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanOpCode.Or">
            <summary>
The operation is or.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanOpCode.And">
            <summary>
The operation is and.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanOpCode.Mul">
            <summary>
The operation is mul.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanOpCode.Max">
            <summary>
The operation is max.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanOpCode.Min">
            <summary>
The operation is min.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanOpCode.Add">
            <summary>
The operation is add.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ScanDirection">
            <summary>Identifies the direction of scanning.</summary>
            <unmanaged>D3DX11_SCAN_DIRECTION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanDirection.Backward">
            <summary>
The direction is backward.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanDirection.Forward">
            <summary>
The direction is forward.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ScanDataType">
            <summary>Identifies the type for scan data.</summary>
            <unmanaged>D3DX11_SCAN_DATA_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanDataType.UInt">
            <summary>
The type of the scan is uint.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanDataType.Int">
            <summary>
The type of the scan is int.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ScanDataType.Float">
            <summary>
The type of the scan is float.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ResourceUsage">
            <summary>
Identifies expected resource use during rendering. The usage directly reflects whether a resource is 
accessible by the CPU and/or the GPU.
</summary>
            <unmanaged>D3D11_USAGE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceUsage.Staging">
            <summary>
A resource that supports data transfer (copy) from the GPU to the CPU.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceUsage.Dynamic">
            <summary>
A resource that is accessible by both the GPU (read only) and the CPU (write only). A dynamic resource is a good choice
for a resource that will be updated by the CPU at least once per frame. There are two ways to update a dynamic resource:
if your data is laid exactly the way the resource stores it, use DeviceContext.UpdateSubresource, otherwise, use a Map method.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceUsage.Immutable">
            <summary>
A resource that can only be read by the GPU. It cannot be written by the GPU, and cannot be accessed at all by the CPU.
This type of resource must be initialized when it is created, since it cannot be changed after creation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceUsage.Default">
            <summary>
A resource that requires read and write access by the GPU. This is likely to be the most common usage choice.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ResourceOptionFlags">
            <summary>Identifies other, less common options for resources.</summary>
            <unmanaged>D3D11_RESOURCE_MISC_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.GdiCompatible">
            <summary>
Renders a resource compatible with GDI.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.KeyedMutex">
            <summary>
Enables a resource as a keyed mutex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.ClampedResource">
            <summary>
Enables a resource with a clamped depth bias.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.StructuredBuffer">
            <summary>
Enables a resource as a structured buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.RawBuffer">
            <summary>
Enables a resource as a byte address buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.DrawIndirect">
            <summary>
Enables instancing of GPU-generated content.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.TextureCube">
            <summary>
Enables a resource to be a cube texture created from a Texture2DArray that contains 6 textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.Shared">
            <summary>
Enables resource data sharing between two or more Direct3D devices. The only resources that can be shared are 2D non-mipmapped textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.GenerateMipMaps">
            <summary>
Enables mipmap generation on a texture resource. The resource must be created with the bind flags that specify that the
resource is a render target and a shader resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceOptionFlags.None">
            <summary>
No additional options specified.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ResourceDimension">
            <summary>Identifies the type of resource being used.</summary>
            <unmanaged>D3D11_RESOURCE_DIMENSION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceDimension.Texture3D">
            <summary>
Resource is a 3D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceDimension.Texture2D">
            <summary>
Resource is a 2D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceDimension.Texture1D">
            <summary>
Resource is a 1D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceDimension.Buffer">
            <summary>
Resource is a buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ResourceDimension.Unknown">
            <summary>
Resource is of unknown type.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ReportingLevel">
            <summary>
Options for the amount of information returned about live device objects.
</summary>
            <unmanaged>D3D11_RLDO_FLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ReportingLevel.Detail">
            <summary>
Gives a detailed report of the device information.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ReportingLevel.Summary">
            <summary>
Reports only a summary of the device information.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.RenderTargetViewDimension">
            <summary>Identifies the type of resource that will be viewed as a render target.</summary>
            <unmanaged>D3D11_RTV_DIMENSION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.RenderTargetViewDimension.Texture3D">
            <summary>
The resource will be accessed as a 3D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.RenderTargetViewDimension.Texture2DMultisampledArray">
            <summary>
The resource will be accessed as an array of 2D textures with multisampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.RenderTargetViewDimension.Texture2DMultisampled">
            <summary>
The resource will be accessed as a 2D texture with multisampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.RenderTargetViewDimension.Texture2DArray">
            <summary>
The resource will be accessed as an array of 2D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.RenderTargetViewDimension.Texture2D">
            <summary>
The resource will be accessed as a 2D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.RenderTargetViewDimension.Texture1DArray">
            <summary>
The resource will be accessed as an array of 1D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.RenderTargetViewDimension.Texture1D">
            <summary>
The resource will be accessed as a 1D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.RenderTargetViewDimension.Buffer">
            <summary>
The resource will be accessed as a buffer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.QueryType">
            <summary>
Defines possible query types.
</summary>
            <unmanaged>D3D11_QUERY</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryType.StreamOutputOverflowPredicate">
            <summary>
Determines whether or not any of the streaming output buffers overflowed in between DeviceContext.Begin and DeviceContext.End.
DeviceContext.GetData returns a boolean; <c>true</c> meaning there was an overflow, and <c>false</c> meaning there was not an overflow.
If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers.
When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used
in conjunction with a StreamOutputStatistics query so that when an overflow occurs the query will let the application know how
much memory was needed to prevent an overflow.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryType.StreamOutputStatistics">
            <summary>
Get streaming output statistics, such as the number of primitives streamed out in between DeviceContext.Begin and DeviceContext.End.
DeviceContext.GetData will return a <see cref="F:SlimDX.Direct3D11.QueryType.StreamOutputStatistics" /> structure.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryType.Predicate">
            <summary>
Similar to an occlusion query, except DeviceContext.GetData returns a boolean indicating whether or not any samples passed
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryType.PipelineStatistics">
            <summary>
Get pipeline statistics, such as the number of pixel shader invocations in between DeviceContext.Begin and DeviceContext.End.
DeviceContext.GetData will return a <see cref="F:SlimDX.Direct3D11.QueryType.PipelineStatistics" /> instance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryType.TimestampDisjoint">
            <summary>
Determines whether or not a Timestamp query is returning reliable values, and also gives the frequency of the processor
enabling you to convert the number of elapsed ticks into seconds. DeviceContext.GetData will return a <see cref="T:SlimDX.Direct3D11.TimestampQueryData" /> instance.
This type of query should only be invoked once per frame or less. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryType.Timestamp">
            <summary>
Get a timestamp value where DeviceContext.GetData returns a long. This kind of query is only useful if two timestamp queries
are done in the middle of a TimestampDisjoint query. The difference of two timestamps can be used to determine how many
ticks have elapsed, and the TimestampDisjoint query will determine if that difference is a reliable value and also
has a value that shows how to convert the number of ticks into seconds. When using this type of query,
DeviceContext.Begin is disabled. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryType.Occlusion">
            <summary>
Get the number of samples that passed the depth and stencil tests in between DeviceContext.Begin and DeviceContext.End.
DeviceContext.GetData returns a long. If a depth or stencil test is disabled, then each of those tests will be counted as a pass.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryType.Event">
            <summary>
Determines whether or not the GPU is finished processing commands. When the GPU is finished processing commands
<see cref="T:SlimDX.Direct3D11.DeviceContext">DeviceContext.GetData</see> will return success, and the result will be a boolean with a value of <c>true</c>.
When using this type of query, DeviceContext.Begin is disabled.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.QueryFlags">
            <summary>
Specifies flags for describing query options and behavior.
</summary>
            <unmanaged>D3D11_QUERY_MISC_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryFlags.PredicateHint">
            <summary>
Tell the hardware that if it is not yet sure if something is hidden or not to draw it anyway. This is only used with
an occlusion predicate. Predication data cannot be returned to your application
via <see cref="T:SlimDX.Direct3D11.DeviceContext">DeviceContext.GetData</see> when using this flag.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.QueryFlags.None">
            <summary>
No particular flags specified.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.PrimitiveTopology">
            <summary>Specifies how the pipeline should interpret vertex data bound to the input assembler stage.</summary>
            <unmanaged>D3D11_PRIMITIVE_TOPOLOGY</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith32ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 32 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith31ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 31 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith30ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 30 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith29ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 29 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith28ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 28 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith27ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 27 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith26ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 26 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith25ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 25 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith24ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 24 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith23ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 23 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith22ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 22 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith21ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 21 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith20ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 20 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith19ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 19 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith18ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 18 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith17ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 17 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith16ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 16 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith15ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 15 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith14ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 14 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith13ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 13 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith12ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 12 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith11ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 11 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith10ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 10 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith9ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 9 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith8ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 8 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith7ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 7 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith6ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 6 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith5ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 5 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith4ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 4 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith3ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 3 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith2ControlPoints">
            <summary>
Interpret the vertex data as a patch list with 2 control points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PatchListWith1ControlPoint">
            <summary>
Interpret the vertex data as a patch list with 1 control point.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.TriangleStripWithAdjacency">
            <summary>
Interpret the vertex data as triangle strip with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.TriangleListWithAdjacency">
            <summary>
Interpret the vertex data as list of triangles with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.LineStripWithAdjacency">
            <summary>
Interpret the vertex data as line strip with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.LineListWithAdjacency">
            <summary>
Interpret the vertex data as list of lines with adjacency data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.TriangleStrip">
            <summary>
Interpret the vertex data as a triangle strip.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.TriangleList">
            <summary>
Interpret the vertex data as a list of triangles.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.LineStrip">
            <summary>
Interpret the vertex data as a line strip.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.LineList">
            <summary>
Interpret the vertex data as a list of lines.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.PointList">
            <summary>
Interpret the vertex data as a list of points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.PrimitiveTopology.Undefined">
            <summary>
The IA stage has not been initialized with a primitive topology. The IA stage will not function properly unless a primitive topology is defined.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.NormalMapFlags">
            <summary>
Normal maps generation constants.
</summary>
            <unmanaged>D3DX11_NORMALMAP_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.NormalMapFlags.ComputeOcclusion">
            <summary>
Computes the per-pixel occlusion term and encodes it into the alpha. An alpha of 1 means that the
pixel is not obscured in any way, and an alpha of 0 means that the pixel is completely obscured.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.NormalMapFlags.InvertSign">
            <summary>
Inverts the direction of each normal.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.NormalMapFlags.Mirror">
            <summary>
Same as specifying the MirrorU and MirrorV flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.NormalMapFlags.MirrorV">
            <summary>
Indicates that pixels off the edge of the texture on the v-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.NormalMapFlags.MirrorU">
            <summary>
Indicates that pixels off the edge of the texture on the u-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.MessageSeverity">
            <summary>
Specifies debug message severity levels for an information queue.
</summary>
            <unmanaged>D3D11_MESSAGE_SEVERITY</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageSeverity.Info">
            <summary>
The message contains generic debug information.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageSeverity.Warning">
            <summary>
The message indicates that a warning has occurred.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageSeverity.Error">
            <summary>
The message indicates that an error has occurred.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageSeverity.Corruption">
            <summary>
The message indicates that some type of corruption has occured.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.MessageCategory">
            <summary>
Specifies various categories of debug messages.
</summary>
            <unmanaged>D3D11_MESSAGE_CATEGORY</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.Execution">
            <summary>
The message pertains to application execution.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.ResourceManipulation">
            <summary>
The message pertains to resource manipulation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.StateGetting">
            <summary>
The message pertains to the getting of state.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.StateSetting">
            <summary>
The message pertains to the setting of state.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.StateCreation">
            <summary>
The message pertains to state creation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.Compilation">
            <summary>
The message pertains to compilation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.Cleanup">
            <summary>
The message pertains to cleanup.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.Initialization">
            <summary>
The message pertains to initialization.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.Miscellaneous">
            <summary>
The message is contains miscellaneous information.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MessageCategory.ApplicationDefined">
            <summary>
The message is a custom application-defined message.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.MapMode">
            <summary>Identifies modes in which a resource can be accessed by the CPU.</summary>
            <unmanaged>D3D11_MAP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.MapMode.WriteNoOverwrite">
            <summary>
Resource is mapped for writing; the existing contents of the resource cannot be overwritten. This flag is only valid on
vertex and index buffers. The resource must have been created with write access.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MapMode.WriteDiscard">
            <summary>
Resource is mapped for writing; the previous contents of the resource will be undefined. The resource must have been created with write access.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MapMode.ReadWrite">
            <summary>
Resource is mapped for reading and writing. The resource must have been created with read and write access.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MapMode.Write">
            <summary>
Resource is mapped for writing. The resource must have been created with write access.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MapMode.Read">
            <summary>
Resource is mapped for reading. The resource must have been created with read access.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.MapFlags">
            <summary>Specifies how the CPU should respond when Map() is called on a resource being used by the GPU.</summary>
            <unmanaged>D3D11_MAP_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.MapFlags.DoNotWait">
            <summary>
Do not wait for the resource to become available. The map method will return WasStillRendering when the GPU blocks the CPU from
accessing a resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.MapFlags.None">
            <summary>
Wait for the resource to become available.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.InputClassification">
            <summary>Specifies possible types of data contained in an input slot.</summary>
            <unmanaged>D3D11_INPUT_CLASSIFICATION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.InputClassification.PerInstanceData">
            <summary>
Input data is per-instance data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.InputClassification.PerVertexData">
            <summary>
Input data is per-vertex data.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ImageFileFormat">
            <summary>Specifies image file formats supported by runtime.</summary>
            <unmanaged>D3DX11_IMAGE_FILE_FORMAT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ImageFileFormat.Wmp">
            <summary>
Windows Media Player format (WMP).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ImageFileFormat.Gif">
            <summary>
Graphics Interchange Format (GIF).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ImageFileFormat.Tiff">
            <summary>
Tagged Image File Format (TIFF).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ImageFileFormat.Dds">
            <summary>
DirectDraw surface (DDS) file format. Stores textures, volume textures, and cubic environment maps, with or without
mipmap levels, and with or without pixel compression.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ImageFileFormat.Png">
            <summary>
Portable Network Graphics (PNG) file format. A non-proprietary bitmap format using lossless compression.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ImageFileFormat.Jpg">
            <summary>
Joint Photographic Experts Group (JPEG) compressed file format. Specifies variable compression of 24-bit RGB color
and 8-bit gray-scale Tagged Image File Format (TIFF) image document files.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ImageFileFormat.Bmp">
            <summary>
Windows bitmap (BMP) file format. Contains a header that describes the resolution of the device on which the
rectangle of pixels was created, the dimensions of the rectangle, the size of the array of bits, a logical palette,
and an array of bits that defines the relationship between pixels in the bitmapped image and entries in the logical palette.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.FormatSupport">
            <summary>Identifies which resources are supported for a given format and given device.</summary>
            <unmanaged>D3D11_FORMAT_SUPPORT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.ShaderGatherComparisonIntrinsic">
            <summary>
The format can be used with the HLSL "gather" and "compare" functions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.UnorderedAccessView">
            <summary>
The format can be used for an unordered access view.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.BackBufferCast">
            <summary>
The format supports casting when the resource is used as a back buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.ShaderGatherIntrinsic">
            <summary>
The intrinsic HLSL "gather" function is supported. Available in Direct3D 10.1 or higher.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.FormatMultisampleLoadSupport">
            <summary>
The format can be used as a multisample texture and read into a shader with the HLSL "load" function.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.FormatMultisampleRenderTargetSupport">
            <summary>
The format can be used as a multisample render target.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.FormatCastSupport">
            <summary>
The format can be cast to another format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.FormatDisplaySupport">
            <summary>
The format can be displayed on screen.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.MultisampleResolve">
            <summary>
Multisampling resolution is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.CpuLocking">
            <summary>
CPU locking is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.DepthStencil">
            <summary>
Depth-stencil surfaces are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.BlendOperation">
            <summary>
Blend operations are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.RenderTarget">
            <summary>
Rendertargets are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.MipMapAutoGeneration">
            <summary>
Automatic generation of mipmaps is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.MipMap">
            <summary>
Mipmaps are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.ShaderSampleComparisonIntrinsic">
            <summary>
The intrinsic HLSL "samplecmp" and "samplecmplevelzero" are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.ShaderSampleIntrinsic">
            <summary>
The intrinsic HLSL "sample" function is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.ShaderLoadIntrinsic">
            <summary>
The intrinsic HLSL "load" function is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.TextureCube">
            <summary>
Cube textures are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.Texture3D">
            <summary>
3D textures are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.Texture2D">
            <summary>
2D textures are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.Texture1D">
            <summary>
1D textures are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.StreamOutputBuffer">
            <summary>
Streaming output buffers are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.IndexBuffer">
            <summary>
Index buffers are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.VertexBuffer">
            <summary>
Vertex buffers are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.Buffer">
            <summary>
Buffer resources are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FormatSupport.None">
            <summary>
No features are supported.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.FilterFlags">
            <summary>Specifies possible texture filtering flags.</summary>
            <unmanaged>D3DX11_FILTER_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.StandardRgb">
            <summary>
Combines the StandardRgbIn and StandardRgbOut flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.StandardRgbOut">
            <summary>
Output data is in standard RGB (sRGB) color space.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.StandardRgbIn">
            <summary>
Input data is in standard RGB (sRGB) color space.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.DitherDiffusion">
            <summary>
Do diffuse dithering on the image when changing from one format to another.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.Dither">
            <summary>
The resulting image must be dithered using a 4x4 ordered dither algorithm. This happens when converting from one format to another.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.Mirror">
            <summary>
Combines the MirrorU, MirrorV, and MirrorW flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.MirrowW">
            <summary>
Pixels off the edge of the texture on the w-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.MirrorV">
            <summary>
Pixels off the edge of the texture on the v-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.MirrorU">
            <summary>
Pixels off the edge of the texture on the u-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.Box">
            <summary>
Each pixel is computed by averaging a 2x2(x2) box of pixels from the source image. This filter works only when the
dimensions of the destination are half those of the source, as is the case with mipmaps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.Triangle">
            <summary>
Every pixel in the source image contributes equally to the destination image. This is the slowest of the filters.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.Linear">
            <summary>
Each destination pixel is computed by sampling the four nearest pixels from the source image. This filter
works best when the scale on both axes is less than two.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.Point">
            <summary>
Each destination pixel is computed by sampling the nearest pixel from the source image.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FilterFlags.None">
            <summary>
No scaling or filtering will take place. Pixels outside the bounds of the source image are assumed to be transparent black.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Filter">
            <summary>Specifies filtering options used during texture sampling.</summary>
            <unmanaged>D3D11_FILTER</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonAnisotropic">
            <summary>
Use anisotropic interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonMinMagMipLinear">
            <summary>
Use linear interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonMinMagLinearMipPoint">
            <summary>
Use linear interpolation for minification and magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonMinLinearMagPointMipLinear">
            <summary>
Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonMinLinearMagMipPoint">
            <summary>
Use linear interpolation for minification; use point sampling for magnification and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonMinPointMagMipLinear">
            <summary>
Use point sampling for minification; use linear interpolation for magnification and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonMinPointMagLinearMipPoint">
            <summary>
Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonMinMagPointMipLinear">
            <summary>
Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.
Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.ComparisonMinMagMipPoint">
            <summary>
Use point sampling for minification, magnification, and mip-level sampling. Compare the result to the comparison value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.Anisotropic">
            <summary>
Use anisotropic interpolation for minification, magnification, and mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.MinMagMipLinear">
            <summary>
Use linear interpolation for minification, magnification, and mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.MinMagLinearMipPoint">
            <summary>
Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.MinLinearMagPointMipLinear">
            <summary>
Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.MinLinearMagMipPoint">
            <summary>
Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.MinPointMagMipLinear">
            <summary>
Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.MinPointMagLinearMipPoint">
            <summary>
Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.MinMagPointMipLinear">
            <summary>
Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Filter.MinMagMipPoint">
            <summary>
Use point sampling for minification, magnification, and mip-level sampling.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.FillMode">
            <summary>Determines the fill mode to use when rendering triangles.</summary>
            <unmanaged>D3D11_FILL_MODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.FillMode.Solid">
            <summary>
Fill the triangles formed by the vertices. Adjacent vertices are not drawn.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FillMode.Wireframe">
            <summary>
Draw lines connecting the vertices. Adjacent vertices are not drawn.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.FeatureLevel">
            <summary>Describes the set of features targeted by a Direct3D device.</summary>
            <unmanaged>D3D_FEATURE_LEVEL</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.FeatureLevel.Level_9_3">
            <summary>
Targets features supported by Direct3D 9.3 including shader shader model 3.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FeatureLevel.Level_9_2">
            <summary>
Targets features supported by Direct3D 9.2 including shader shader model 2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FeatureLevel.Level_9_1">
            <summary>
Targets features supported by Direct3D 9.1 including shader shader model 2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FeatureLevel.Level_10_1">
            <summary>
Targets features supported by Direct3D 10.1 including shader shader model 4.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FeatureLevel.Level_10_0">
            <summary>
Targets features supported by Direct3D 10.0 including shader shader model 4.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.FeatureLevel.Level_11_0">
            <summary>
Targets features supported by Direct3D 11.0 including shader shader model 5.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Feature">
            <summary>Identifies device features that can be queried for support.</summary>
            <unmanaged>D3D11_FEATURE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.Feature.ComputeShaders">
            <summary>
The device supports compute shaders along with raw and structured buffers via shader 4.X.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Feature.ShaderDoubles">
            <summary>
The device supports the use of doubles in HLSL.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.EffectVariableFlags">
            <summary>Specifies detailed information about effect variables.</summary>
            <unmanaged>D3DX11_EFFECT_VARIABLE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.EffectVariableFlags.ExplicitBindPoint">
            <summary>
Indicates the variable has been explicitly bound using the register keyword in the effect code.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.EffectVariableFlags.Annotation">
            <summary>
Indicates that the variable is an annotation or global.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.EffectVariableFlags.None">
            <summary>
Standard effect variable.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DriverType">
            <summary>Specifies possible driver types.</summary>
            <unmanaged>D3D_DRIVER_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.DriverType.Warp">
            <summary>
A WARP driver, which is a high-performance software rasterizer. The rasterizer supports all current feature levels
(level 9.1 through level 10.1) with a high performance software implementation when hardware is not available.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DriverType.Software">
            <summary>
A software driver, which is a driver implemented completely in software. The software implementation is not intended
for a high-performance application due to its very slow performance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DriverType.Null">
            <summary>
A NULL driver, which is a reference driver without render capability. This driver is commonly used for debugging
non-rendering API calls, it is not appropriate for retail applications. This driver is installed by the DirectX SDK.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DriverType.Reference">
            <summary>
A reference driver, which is a software implementation that supports every Direct3D feature. A reference driver is designed
for accuracy rather than speed and as a result is slow but accurate. The rasterizer portion of the driver does make use of special
CPU instructions whenever it can, but it is not intended for retail applications; use it only for feature testing, demonstration
of functionality, debugging, or verifying bugs in other drivers. This driver is installed by the DirectX SDK.
This driver may be referred to as a REF driver, a reference driver or a reference rasterizer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DriverType.Hardware">
            <summary>
A hardware driver, which implements Direct3D features in hardware. This is the primary driver that you should use 
in your Direct3D applications because it provides the best performance. A hardware driver uses hardware acceleration
(on supported hardware) but can also use software for parts of the pipeline that are not supported in hardware. This driver 
type is often referred to as a hardware abstraction layer or HAL.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DriverType.Unknown">
            <summary>
The driver type is unknown.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DeviceCreationFlags">
            <summary>Describes parameters that are used to create a device.</summary>
            <unmanaged>D3D11_CREATE_DEVICE_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.DeviceCreationFlags.PreventThreadingOptimizations">
            <summary>
Prevents multiple threads from being created. This flag is not recommended for general use.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DeviceCreationFlags.Debug">
            <summary>
Creates a device that supports the debug layer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DeviceCreationFlags.SingleThreaded">
            <summary>
Use this flag if an application will only be calling D3D11 from a single thread. If this flag is not specified, the default 
behavior of D3D11 is to enter a lock during each API call to prevent multiple threads altering internal state. By using this flag 
no locks will be taken which can slightly increase performance, but could result in undefine behavior if D3D11 is called from 
multiple threads.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DeviceCreationFlags.None">
            <summary>
Indicates no specific behavior.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DeviceContextType">
            <summary>Specifies possible device context types.</summary>
            <unmanaged>D3D11_DEVICE_CONTEXT_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.DeviceContextType.Deferred">
            <summary>
The device context is a deferred context.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DeviceContextType.Immediate">
            <summary>
The device context is an immediate context.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DepthWriteMask">
            <summary>Identifies the portion of a depth-stencil buffer for writing depth data.</summary>
            <unmanaged>D3D11_DEPTH_WRITE_MASK</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthWriteMask.All">
            <summary>
Turn on writes to the depth-stencil buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthWriteMask.Zero">
            <summary>
Turn off writes to the depth-stencil buffer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DepthStencilViewDimension">
            <summary>Specifies how to access a resource used in a depth-stencil view.</summary>
            <unmanaged>D3D11_DSV_DIMENSION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilViewDimension.Texture2DMultisampledArray">
            <summary>
The resource will be accessed as an array of 2D textures with multisampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilViewDimension.Texture2DMultisampled">
            <summary>
The resource will be accessed as a 2D texture with multisampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilViewDimension.Texture2DArray">
            <summary>
The resource will be accessed as an array of 2D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilViewDimension.Texture2D">
            <summary>
The resource will be accessed as a 2D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilViewDimension.Texture1DArray">
            <summary>
The resource will be accessed as an array of 1D textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilViewDimension.Texture1D">
            <summary>
The resource will be accessed as a 1D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilViewDimension.Unknown">
            <summary>
The resource will be accessed according to its type as determined from the actual instance this enumeration is 
paired with when the depth-stencil view is created.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DepthStencilClearFlags">
            <summary>Specifies the parts of the depth stencil surface to clear.</summary>
            <unmanaged>D3D11_CLEAR_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilClearFlags.Stencil">
            <summary>
Clear the stencil buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DepthStencilClearFlags.Depth">
            <summary>
Clear the depth buffer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DebugFeatureFlags">
            <summary>
Contains debug features that can be enabled and disabled.
</summary>
            <unmanaged>D3D11_DEBUG_FEATURE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugFeatureFlags.PresentPerRender">
            <summary>
Runtime will call SwapChain.Present. Presentation of render buffers will occur according to the settings established by prior calls
to Debug.SwapChain and Debug.PresentDelay.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugFeatureFlags.FlushPerRender">
            <summary>
Runtime will additionally call DeviceContext.Flush.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.DebugFeatureFlags.FinishPerRender">
            <summary>
Application will wait for the GPU to finish processing the rendering operation before continuing.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.CullMode">
            <summary>Specifies possible culling modes.</summary>
            <unmanaged>D3D11_CULL_MODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.CullMode.Back">
            <summary>
Do not draw triangles that are back-facing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.CullMode.Front">
            <summary>
Do not draw triangles that are front-facing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.CullMode.None">
            <summary>
Always draw all triangles.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.CpuAccessFlags">
            <summary>Specifies the types of CPU access allowed for a resource.</summary>
            <unmanaged>D3D11_CPU_ACCESS_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.CpuAccessFlags.Read">
            <summary>
The resource is to be mappable so that the CPU can read its contents. Resources created with this flag cannot be set as either 
inputs or outputs to the pipeline and must be created with staging usage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.CpuAccessFlags.Write">
            <summary>
The resource is to be mappable so that the CPU can change its contents. Resources created with this flag cannot be set as 
outputs of the pipeline and must be created with either dynamic or staging usage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.CpuAccessFlags.None">
            <summary>
Indicates no specific behavior.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.CounterType">
            <summary>Defines data types for performance counters.</summary>
            <unmanaged>D3D11_COUNTER_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.CounterType.UnsignedInt64">
            <summary>
64-bit unsigned integer counter.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.CounterType.UnsignedInt32">
            <summary>
32-bit unsigned integer counter.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.CounterType.UnsignedInt16">
            <summary>
16-bit unsigned integer counter.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.CounterType.Float32">
            <summary>
32-bit floating point counter.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.CounterKind">
            <summary>Specifies possible performance counter types.</summary>
            <unmanaged>D3D11_COUNTER</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.CounterKind.DeviceDependent">
            <summary>
A performance counter that is dependent on a hardware device.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ComputeShaderFormatSupport">
            <summary>Specifies unordered resource support options for a compute shader resource.</summary>
            <unmanaged>D3D11_FORMAT_SUPPORT2</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.TypedStore">
            <summary>
Format supports a typed store.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.TypedLoad">
            <summary>
Format supports a typed load.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.AtomicUnsignedMinMax">
            <summary>
Format supports atomic unsigned min and max.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.AtomicSignedMinMax">
            <summary>
Format supports atomic min and max.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.AtomicExchange">
            <summary>
Format supports atomic exchange.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.AtomicCompareStoreOrCompareExchange">
            <summary>
Format supports atomic compare with store or exchange.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.AtomicBitwiseOperations">
            <summary>
Format supports atomic bitwise operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.AtomicAdd">
            <summary>
Format supports atomic add.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ComputeShaderFormatSupport.None">
            <summary>
No specific options supported.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Comparison">
            <summary>Specifies possible comparison functions.</summary>
            <unmanaged>D3D11_COMPARISON_FUNC</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.Comparison.Always">
            <summary>
Always pass the comparison.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Comparison.GreaterEqual">
            <summary>
Pass the comparison if the source data is greater than or equal to the destination data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Comparison.NotEqual">
            <summary>
Pass the comparison if the source data is not equal to the destination data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Comparison.Greater">
            <summary>
Pass the comparison if the source data is greater than the destination data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Comparison.LessEqual">
            <summary>
Pass the comparison if the source data is less than or equal to the destination data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Comparison.Equal">
            <summary>
Pass the comparison if the source data is equal to the destination data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Comparison.Less">
            <summary>
Pass the comparison if the source data is less than the destination data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Comparison.Never">
            <summary>
Never pass the comparison.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.ColorWriteMaskFlags">
            <summary>Identifies which components of each pixel of a render target are writable during blending.</summary>
            <unmanaged>D3D11_COLOR_WRITE_ENABLE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.ColorWriteMaskFlags.All">
            <summary>
Allow data to be stored in all components.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ColorWriteMaskFlags.Alpha">
            <summary>
Allow data to be stored in the alpha component.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ColorWriteMaskFlags.Blue">
            <summary>
Allow data to be stored in the blue component.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ColorWriteMaskFlags.Green">
            <summary>
Allow data to be stored in the green component.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ColorWriteMaskFlags.Red">
            <summary>
Allow data to be stored in the red component.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.ColorWriteMaskFlags.None">
            <summary>
Indicates no specific behavior.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Channel">
            <summary>
The following flags are used to specify which channels in a texture to operate on.
</summary>
            <unmanaged>D3DX11_CHANNEL_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.Channel.Luminance">
            <summary>
Indicates the luminances of the red, green, and blue channels should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Channel.Alpha">
            <summary>
Indicates the alpha channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Channel.Green">
            <summary>
Indicates the green channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Channel.Blue">
            <summary>
Indicates the blue channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.Channel.Red">
            <summary>
Indicates the red channel should be used.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.BlendOption">
            <summary>Blend options. A blend option identifies the data source and an optional pre-blend operation.</summary>
            <unmanaged>D3D11_BLEND</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.InverseSecondarySourceAlpha">
            <summary>
The data sources are both alpha data from a pixel shader. The pre-blend operation inverts the data, generating 1 - A. This option supports dual-source blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.SecondarySourceAlpha">
            <summary>
The data sources are both alpha data from a pixel shader. No pre-blend operation. This option supports dual-source blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.InverseSecondarySourceColor">
            <summary>
The data sources are both color data from a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB. This option supports dual-source blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.SecondarySourceColor">
            <summary>
The data sources are both color data from a pixel shader. No pre-blend operation. This option supports dual-source blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.InverseBlendFactor">
            <summary>
The data source is the blend factor set in the output-merger blend state. The pre-blend operation inverts the data, generating 1 - blend_factor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.BlendFactor">
            <summary>
The data source is the blend factor set in the output-merger blend state. No pre-blend operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.SourceAlphaSaturate">
            <summary>
The data source is alpha data from a pixel shader. The pre-blend operation clamps the data to 1 or less.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.InverseDestinationColor">
            <summary>
The data source is color data from a render target. The pre-blend operation inverts the data, generating 1 - RGB.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.DestinationColor">
            <summary>
The data source is color data from a render target. No pre-blend operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.InverseDestinationAlpha">
            <summary>
The data source is alpha data from a render target. The pre-blend operation inverts the data, generating 1 - A.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.DestinationAlpha">
            <summary>
The data source is alpha data from a render target. No pre-blend operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.InverseSourceAlpha">
            <summary>
The data source is alpha data from a pixel shader. The pre-blend operation inverts the data, generating 1 - A.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.SourceAlpha">
            <summary>
The data source is alpha data from a pixel shader. No pre-blend operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.InverseSourceColor">
            <summary>
The data source is color data from a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.SourceColor">
            <summary>
The data source is color data from a pixel shader. No pre-blend operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.One">
            <summary>
The data source is the color white (1, 1, 1, 1). No pre-blend operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOption.Zero">
            <summary>
The data source is the color black (0, 0, 0, 0). No pre-blend operation.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.BlendOperation">
            <summary>RGB or alpha blending operation.</summary>
            <unmanaged>D3D11_BLEND_OP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOperation.Maximum">
            <summary>
Find the maximum of source 1 and source 2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOperation.Minimum">
            <summary>
Find the minimum of source 1 and source 2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOperation.ReverseSubtract">
            <summary>
Subtract source 2 from source 1.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOperation.Subtract">
            <summary>
Subtract source 1 from source 2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BlendOperation.Add">
            <summary>
Add source 1 and source 2.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.BindFlags">
            <summary>Identifies how to bind a resource to the pipeline.</summary>
            <unmanaged>D3D11_BIND_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.UnorderedAccess">
            <summary>
Indicates the resource can be bound as an unordered access resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.DepthStencil">
            <summary>
Indicates the resource can be bound to the output-merger stage as a depth-stencil target. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.RenderTarget">
            <summary>
Indicates the resource can be bound to the output-merger stage as a render target. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.StreamOutput">
            <summary>
Indicates the resource can be bound to the stream-output stage as an output buffer. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.ShaderResource">
            <summary>
Indicates the resource can be bound to the shader stage as a buffer or texture. 
Note that it is invalid to specify this flag and subsequently map the resource
using MapMode.WriteNoOverwrite.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.ConstantBuffer">
            <summary>
Indicates the resource can be bound to the shader stage as a constant buffer 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.IndexBuffer">
            <summary>
Indicates the resource can be bound to the input-assembler stage as an index buffer 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.VertexBuffer">
            <summary>
Indicates the resource can be bound to the input-assembler stage as a vertex buffer. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.BindFlags.None">
            <summary>
Indicates no specific behavior.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.AsynchronousFlags">
            <summary>Optional flags that control the behavior of <see cref="T:SlimDX.Direct3D11.Asynchronous">Asynchronous.GetData</see>.</summary>
            <unmanaged>D3D11_ASYNC_GETDATA_FLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D11.AsynchronousFlags.DoNotFlush">
            <summary>
Indicates the command buffer should not be flushed.
Note that this can cause an infinite loop if GetData() is called repeatedly until 
returning successfully: there may still be commands in the buffer than need
to be processed in order for GetData() to return successfully. Since the buffer 
will not be flushed, those commands will not be processed and GetData() will never
return successfully.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D11.AsynchronousFlags.None">
            <summary>
Indicates no specific behavior.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceChild.DebugName">
            <summary>
Gets or sets a friendly debug name for the object. This name is used in debug messages
as well as in the PIX object browser.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.DeviceChild.Device">
            <summary>
Gets the device to which the object is bound.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.DeviceChild">
            <summary>
An object that is bound to a device.
</summary>
            <unmanaged>ID3D11DeviceChild</unmanaged>
        </member>
        <member name="P:SlimDX.DataBox.Data">
            <summary>
Gets the <see cref="T:SlimDX.DataStream" /> containing the actual data bytes.
</summary>
        </member>
        <member name="P:SlimDX.DataBox.SlicePitch">
            <summary>
Gets or sets the number of bytes of data between two consecutive (2D) slices of data.
</summary>
        </member>
        <member name="P:SlimDX.DataBox.RowPitch">
            <summary>
Gets or sets the number of bytes of data between two consecutive (1D) rows of data.
</summary>
        </member>
        <member name="M:SlimDX.DataBox.#ctor(System.Int32,System.Int32,SlimDX.DataStream)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DataBox" /> class.
</summary>
            <param name="rowPitch">The row pitch, in bytes.</param>
            <param name="slicePitch">The slice pitch, in bytes.</param>
            <param name="data">The data.</param>
        </member>
        <member name="T:SlimDX.DataBox">
            <summary>
A DataBox provides supporting information for a <see cref="T:SlimDX.DataStream" /> whose
data is organized within three dimensions (a box).
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.Color4.Equals(SlimDX.Color4@,SlimDX.Color4@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1" />
            <param name="value2" />
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Color4.Equals(SlimDX.Color4)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Color4.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Color4.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Color4.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(SlimDX.Color4)~System.Drawing.Color">
            <summary>
Performs an implicit conversion from <see cref="T:SlimDX.Color4" /> to <see cref="T:System.Drawing.Color" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Implicit(System.Drawing.Color)~SlimDX.Color4">
            <summary>
Performs an implicit conversion from <see cref="T:System.Drawing.Color" /> to <see cref="T:SlimDX.Color4" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(SlimDX.Vector4)~SlimDX.Color4">
            <summary>
Performs an explicit conversion from <see cref="T:SlimDX.Vector4" /> to <see cref="T:SlimDX.Color4" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(SlimDX.Vector3)~SlimDX.Color4">
            <summary>
Performs an explicit conversion from <see cref="T:SlimDX.Vector3" /> to <see cref="T:SlimDX.Color4" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(SlimDX.Color3)~SlimDX.Color4">
            <summary>
Performs an explicit conversion from <see cref="T:SlimDX.Color3" /> to <see cref="T:SlimDX.Color4" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(System.Int32)~SlimDX.Color4">
            <summary>
Performs an explicit conversion from <see cref="T:System.Int32" /> to <see cref="T:SlimDX.Color4" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(SlimDX.Color4)~SlimDX.Vector4">
            <summary>
Performs an explicit conversion from <see cref="T:SlimDX.Color4" /> to <see cref="T:SlimDX.Vector4" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(SlimDX.Color4)~SlimDX.Vector3">
            <summary>
Performs an explicit conversion from <see cref="T:SlimDX.Color4" /> to <see cref="T:SlimDX.Vector3" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(SlimDX.Color4)~SlimDX.Color3">
            <summary>
Performs an explicit conversion from <see cref="T:SlimDX.Color4" /> to <see cref="T:SlimDX.Color3" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Explicit(SlimDX.Color4)~System.Int32">
            <summary>
Performs an explicit conversion from <see cref="T:SlimDX.Color4" /> to <see cref="T:System.Int32" />.
</summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Inequality(SlimDX.Color4,SlimDX.Color4)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Equality(SlimDX.Color4,SlimDX.Color4)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Multiply(SlimDX.Color4,SlimDX.Color4)">
            <summary>
Modulates two colors.
</summary>
            <param name="color1">The first color to modulate.</param>
            <param name="color2">The second color to modulate.</param>
            <returns>The modulation of the two colors.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Multiply(System.Single,SlimDX.Color4)">
            <summary>
Scales a color by the specified amount.
</summary>
            <param name="value">The color to scale.</param>
            <param name="scale">The amount by which to scale.</param>
            <returns>The scaled color.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Multiply(SlimDX.Color4,System.Single)">
            <summary>
Scales a color by the specified amount.
</summary>
            <param name="value">The color to scale.</param>
            <param name="scale">The amount by which to scale.</param>
            <returns>The scaled color.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_UnaryNegation(SlimDX.Color4)">
            <summary>
Negates a color.
</summary>
            <param name="value">The color to negate.</param>
            <returns>The negated color.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Subtraction(SlimDX.Color4,SlimDX.Color4)">
            <summary>
Subtracts two colors.
</summary>
            <param name="left">The first color to subtract.</param>
            <param name="right">The second color to subtract.</param>
            <returns>The difference between the two colors.</returns>
        </member>
        <member name="M:SlimDX.Color4.op_Addition(SlimDX.Color4,SlimDX.Color4)">
            <summary>
Adds two colors.
</summary>
            <param name="left">The first color to add.</param>
            <param name="right">The second color to add.</param>
            <returns>The sum of the two colors.</returns>
        </member>
        <member name="M:SlimDX.Color4.AdjustSaturation(SlimDX.Color4@,System.Single,SlimDX.Color4@)">
            <summary>
Adjusts the saturation of a color.
</summary>
            <param name="color">The color whose saturation is to be adjusted.</param>
            <param name="saturation">The amount by which to adjust the saturation.</param>
            <param name="result">When the method completes, contains the adjusted color.</param>
        </member>
        <member name="M:SlimDX.Color4.AdjustSaturation(SlimDX.Color4,System.Single)">
            <summary>
Adjusts the saturation of a color.
</summary>
            <param name="color">The color whose saturation is to be adjusted.</param>
            <param name="saturation">The amount by which to adjust the saturation.</param>
            <returns>The adjusted color.</returns>
        </member>
        <member name="M:SlimDX.Color4.AdjustContrast(SlimDX.Color4@,System.Single,SlimDX.Color4@)">
            <summary>
Adjusts the contrast of a color.
</summary>
            <param name="color">The color whose contrast is to be adjusted.</param>
            <param name="contrast">The amount by which to adjust the contrast.</param>
            <param name="result">When the method completes, contains the adjusted color.</param>
        </member>
        <member name="M:SlimDX.Color4.AdjustContrast(SlimDX.Color4,System.Single)">
            <summary>
Adjusts the contrast of a color.
</summary>
            <param name="color">The color whose contrast is to be adjusted.</param>
            <param name="contrast">The amount by which to adjust the contrast.</param>
            <returns>The adjusted color.</returns>
        </member>
        <member name="M:SlimDX.Color4.Scale(SlimDX.Color4@,System.Single,SlimDX.Color4@)">
            <summary>
Scales a color by the specified amount.
</summary>
            <param name="color">The color to scale.</param>
            <param name="scale">The amount by which to scale.</param>
            <param name="result">When the method completes, contains the scaled color.</param>
        </member>
        <member name="M:SlimDX.Color4.Scale(SlimDX.Color4,System.Single)">
            <summary>
Scales a color by the specified amount.
</summary>
            <param name="color">The color to scale.</param>
            <param name="scale">The amount by which to scale.</param>
            <returns>The scaled color.</returns>
        </member>
        <member name="M:SlimDX.Color4.Negate(SlimDX.Color4@,SlimDX.Color4@)">
            <summary>
Negates a color.
</summary>
            <param name="color">The color to negate.</param>
            <param name="result">When the method completes, contains the negated color.</param>
        </member>
        <member name="M:SlimDX.Color4.Negate(SlimDX.Color4)">
            <summary>
Negates a color.
</summary>
            <param name="color">The color to negate.</param>
            <returns>The negated color.</returns>
        </member>
        <member name="M:SlimDX.Color4.Lerp(SlimDX.Color4@,SlimDX.Color4@,System.Single,SlimDX.Color4@)">
            <summary>
Performs a linear interpolation between two colors.
</summary>
            <param name="color1">Start color.</param>
            <param name="color2">End color.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="color2" />.</param>
            <param name="result">When the method completes, contains the linear interpolation of the two colors.</param>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>color1 + (color2 - color1) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="color1" /> to be returned; a value of 1 will cause <paramref name="color2" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Color4.Lerp(SlimDX.Color4,SlimDX.Color4,System.Single)">
            <summary>
Performs a linear interpolation between two colors.
</summary>
            <param name="color1">Start color.</param>
            <param name="color2">End color.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="color2" />.</param>
            <returns>The linear interpolation of the two colors.</returns>
            <remarks>
This method performs the linear interpolation based on the following formula.
<code>color1 + (color2 - color1) * amount</code>
Passing <paramref name="amount" /> a value of 0 will cause <paramref name="color1" /> to be returned; a value of 1 will cause <paramref name="color2" /> to be returned. 
</remarks>
        </member>
        <member name="M:SlimDX.Color4.Modulate(SlimDX.Color4@,SlimDX.Color4@,SlimDX.Color4@)">
            <summary>
Modulates two colors.
</summary>
            <param name="color1">The first color to modulate.</param>
            <param name="color2">The second color to modulate.</param>
            <param name="result">When the method completes, contains the modulation of the two colors.</param>
        </member>
        <member name="M:SlimDX.Color4.Modulate(SlimDX.Color4,SlimDX.Color4)">
            <summary>
Modulates two colors.
</summary>
            <param name="color1">The first color to modulate.</param>
            <param name="color2">The second color to modulate.</param>
            <returns>The modulation of the two colors.</returns>
        </member>
        <member name="M:SlimDX.Color4.Subtract(SlimDX.Color4@,SlimDX.Color4@,SlimDX.Color4@)">
            <summary>
Subtracts two colors.
</summary>
            <param name="color1">The first color to subtract.</param>
            <param name="color2">The second color to subtract.</param>
            <param name="result">When the method completes, contains the difference between the two colors.</param>
        </member>
        <member name="M:SlimDX.Color4.Subtract(SlimDX.Color4,SlimDX.Color4)">
            <summary>
Subtracts two colors.
</summary>
            <param name="color1">The first color to subtract.</param>
            <param name="color2">The second color to subtract.</param>
            <returns>The difference between the two colors.</returns>
        </member>
        <member name="M:SlimDX.Color4.Add(SlimDX.Color4@,SlimDX.Color4@,SlimDX.Color4@)">
            <summary>
Adds two colors.
</summary>
            <param name="color1">The first color to add.</param>
            <param name="color2">The second color to add.</param>
            <param name="result">When the method completes, contains the sum of the two colors.</param>
        </member>
        <member name="M:SlimDX.Color4.Add(SlimDX.Color4,SlimDX.Color4)">
            <summary>
Adds two colors.
</summary>
            <param name="color1">The first color to add.</param>
            <param name="color2">The second color to add.</param>
            <returns>The sum of the two colors.</returns>
        </member>
        <member name="M:SlimDX.Color4.ToVector4">
            <summary>
Converts the color into a four component vector.
</summary>
            <returns>A four component vector containing all four color components.</returns>
        </member>
        <member name="M:SlimDX.Color4.ToVector3">
            <summary>
Converts the color into a three component vector.
</summary>
            <returns>A three component vector containing the red, green, and blue components of the color.</returns>
        </member>
        <member name="M:SlimDX.Color4.ToArgb">
            <summary>
Converts the color into a packed integer.
</summary>
            <returns>A packed integer containing all four color components.</returns>
        </member>
        <member name="M:SlimDX.Color4.ToColor">
            <summary>
Converts the color to a <see cref="T:System.Drawing.Color" />.
</summary>
            <returns>The <see cref="T:System.Drawing.Color" /> that is equivalent to this instance.</returns>
        </member>
        <member name="M:SlimDX.Color4.ToColor3">
            <summary>
Converts the color to a a 3 component (RGB) color.
</summary>
            <returns>The 3 component (RGB) color that is equivalent to this instance, without the alpha channel.</returns>
        </member>
        <member name="M:SlimDX.Color4.#ctor(System.Int32)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Color4" /> structure.
</summary>
            <param name="argb">A packed integer containing all four color components.</param>
        </member>
        <member name="M:SlimDX.Color4.#ctor(SlimDX.Vector4)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Color4" /> structure.
</summary>
            <param name="color">The color whose components should be converted.</param>
        </member>
        <member name="M:SlimDX.Color4.#ctor(SlimDX.Vector3)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Color4" /> structure.
</summary>
            <param name="color">The color whose components should be converted.</param>
        </member>
        <member name="M:SlimDX.Color4.#ctor(SlimDX.Color3)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Color4" /> structure.
</summary>
            <param name="color">The color whose components should be converted.</param>
        </member>
        <member name="M:SlimDX.Color4.#ctor(System.Drawing.Color)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Color4" /> structure.
</summary>
            <param name="color">The color whose components should be converted.</param>
        </member>
        <member name="M:SlimDX.Color4.#ctor(System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Color4" /> structure.
</summary>
            <param name="red">The red component of the color.</param>
            <param name="green">The green component of the color.</param>
            <param name="blue">The blue component of the color.</param>
        </member>
        <member name="M:SlimDX.Color4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Color4" /> structure.
</summary>
            <param name="alpha">The alpha component of the color.</param>
            <param name="red">The red component of the color.</param>
            <param name="green">The green component of the color.</param>
            <param name="blue">The blue component of the color.</param>
        </member>
        <member name="F:SlimDX.Color4.Alpha">
            <summary>
Gets or sets the color's alpha component.
</summary>
        </member>
        <member name="F:SlimDX.Color4.Blue">
            <summary>
Gets or sets the color's blue component.
</summary>
        </member>
        <member name="F:SlimDX.Color4.Green">
            <summary>
Gets or sets the color's green component.
</summary>
        </member>
        <member name="F:SlimDX.Color4.Red">
            <summary>
Gets or sets the color's red component.
</summary>
        </member>
        <member name="T:SlimDX.Color4">
            <summary>
A four-component (RGBA) color value; each component is a float in the range [0,1].
</summary>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties. </param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<c>Nothing</c> in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether this object supports properties, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>true</c> if GetProperties should be called to find the properties of this object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <c>null</c> if the object cannot be created.</returns>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
Returns whether changing a value on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c>
to create a new value, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>
                <c>false</c> if changing a property on this object requires a call to <c>System::ComponentModel::TypeConverter::CreateInstance(System::Collections::IDictionary^)</c></returns>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
Converts the given object to the type of this converter, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
Converts the given value object to the specified type, using the specified context and culture information.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <c>null</c> is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A System::Type that represents the type you want to convert from.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
Returns whether this converter can convert the object to the specified type, using the specified context.
</summary>
            <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
                <c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Design.Color4Converter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Design.Color4Converter" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Design.Color4Converter">
            <summary>
Provides a type converter to convert <see cref="T:SlimDX.Color4" /> objects to and from various 
other representations.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.Direct3D11Exception.#ctor(SlimDX.Result)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Direct3D11Exception.#ctor(System.String,System.Exception)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Direct3D11Exception.#ctor(System.String)">
            <summary>
Constructs a new exception object.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D11.Direct3D11Exception.#ctor">
            <summary>
Constructs a new exception object.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.Direct3D11Exception">
            <summary>
Represents errors that occur in the Direct3D 11 subsystem.
</summary>
        </member>
        <member name="P:SlimDX.DXGI.Adapter1.Description1">
            <summary>
Gets the adapter's extended description.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.Adapter1">
            <summary>
Represents a display subsystem (one or more GPUs, DACs, and video memory).
</summary>
            <unmanaged>IDXGIAdapter1</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.Adapter.ToString">
            <summary>
Converts the value of the object to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Adapter.IsInterfaceSupported(System.Type,System.Int64@)">
            <summary>
Determines if a device interface for a graphics component is supported by the adapter.
</summary>
            <param name="type">The device interface type.</param>
            <param name="userModeVersion">Receives the user-mode driver version of the interface.</param>
            <returns>
                <c>true</c> if the device interface is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Adapter.IsInterfaceSupported(System.Type)">
            <summary>
Determines if a device interface for a graphics component is supported by the adapter.
</summary>
            <param name="type">The device interface type.</param>
            <returns>
                <c>true</c> if the device interface is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Adapter.GetOutput(System.Int32)">
            <summary>
Gets the specified output.
</summary>
            <returns>The desired output, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Adapter.GetOutputCount">
            <summary>
Gets the number of outputs on the adapter.
</summary>
            <returns>The number of outputs on the adapter.</returns>
        </member>
        <member name="P:SlimDX.DXGI.Adapter.Description">
            <summary>
Gets the adapter's description.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.Adapter">
            <summary>
Represents a display subsystem (one or more GPUs, DACs, and video memory).
</summary>
            <unmanaged>IDXGIAdapter</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.Factory1.IsCurrent">
            <summary>
Gets a value indicating the possible need to re-enumerate adapters -- new adapter(s) have become available, current adapter(s) have become unavailable.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.Factory1.GetAdapter1(System.Int32)">
            <summary>
Gets the adapter at the specified index.
</summary>
            <param name="index">The index of the desired adapter.</param>
            <returns>The specified adapter, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Factory1.GetAdapterCount1">
            <summary>
Gets the number of available adapters, including remote adapters and those without visible outputs.
</summary>
            <returns>The total number of available adapters.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Factory1.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.Factory1" /> class.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.Factory1">
            <summary>
Implements methods for generating DXGI objects.
</summary>
            <unmanaged>IDXGIFactory1</unmanaged>
        </member>
        <member name="M:SlimDX.DXGI.Factory.SetWindowAssociation(System.IntPtr,SlimDX.DXGI.WindowAssociationFlags)">
            <summary>
Sets the window handle associated with the factory (the window through which the user signals fullscreen transitions).
</summary>
            <param name="handle">The window handle.</param>
            <param name="flags">Flags controlling window association behavior.</param>
            <returns>A <see cref="T:SlimDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Factory.GetWindowAssociation">
            <summary>
Gets the window handle associated with the factory (the window through which the user signals fullscreen transitions).
</summary>
            <returns>The window handle.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Factory.CreateSoftwareAdapter(System.Reflection.Module)">
            <summary>
Creates a software adapater interface.
</summary>
            <param name="softwareModule">The module for the software adapter DLL.</param>
            <returns>The specified adapter, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Factory.CreateSoftwareAdapter(System.IntPtr)">
            <summary>
Creates a software adapter interface.
</summary>
            <param name="softwareModule">The unmanaged HMODULE for the software adapter DLL.</param>
            <returns>The specified adapter, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Factory.GetAdapter(System.Int32)">
            <summary>
Gets the specified adapter.
</summary>
            <param name="index">The index of the desired adapter.</param>
            <returns>The specified adapter, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Factory.GetAdapterCount">
            <summary>
Gets the number of available adapters.
</summary>
            <returns>The number of available adapters.</returns>
        </member>
        <member name="M:SlimDX.DXGI.Factory.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.Factory" /> class.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.Factory">
            <summary>
Implements methods for generating DXGI objects.
</summary>
            <unmanaged>IDXGIFactory</unmanaged>
        </member>
        <member name="P:SlimDX.DXGI.DXGIObject.DebugName">
            <summary>
Gets or sets a friendly debug name for the object. This name is used in debug messages
as well as in the PIX object browser.
</summary>
        </member>
        <member name="M:SlimDX.DXGI.DXGIObject.GetParent``1">
            <summary>
Gets the parent of the object.
</summary>
            <typeparam name="T">The type of the parent object.</typeparam>
        </member>
        <member name="T:SlimDX.DXGI.DXGIObject">
            <summary>
Base class for all DXGI objects
</summary>
        </member>
        <member name="T:SlimDX.DXGI.WindowAssociationFlags">
            <summary>
Specifies values which control a swap chain's window association behavior.
</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.BC7_UNorm_SRGB">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.BC7_UNorm">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.BC7_Typeless">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.BC6_SFloat16">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.BC6_UFloat16">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.BC6_Typeless">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.B8G8R8X8_UNorm_SRGB">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.B8G8R8X8_Typeless">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.B8G8R8A8_UNorm_SRGB">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.B8G8R8A8_Typeless">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="F:SlimDX.DXGI.Format.R10G10B10_XR_Bias_A2_UNorm">
            <summary>Not Supported below DirectX 11.</summary>
        </member>
        <member name="M:SlimDX.DXGI.DXGIException.#ctor(SlimDX.Result)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.DXGIException" /> class.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.DXGI.DXGIException.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.DXGIException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.DXGI.DXGIException.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.DXGIException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.DXGI.DXGIException.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.DXGI.DXGIException" /> class.
</summary>
        </member>
        <member name="T:SlimDX.DXGI.DXGIException">
            <summary>
Represents errors that occur in the DXGI subsystem.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3DEx.EnumerateAdapterModesEx(System.Int32,SlimDX.Direct3D9.DisplayModeFilter,System.Int32)">
            <summary>
Returns the actual display mode info based on the given mode index.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="format">The desired characteristics of the display mode.</param>
            <param name="modeIndex">Index of the desired display mode.</param>
            <returns>The extended display mode that matches the specified information.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3DEx.GetAdapterModeCountEx(System.Int32,SlimDX.Direct3D9.DisplayModeFilter)">
            <summary>
Returns the number of display modes available on the specified adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="filter">The desired characteristics of the display mode.</param>
            <returns>The number of display modes available on the specified adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3DEx.GetAdapterLuid(System.Int32)">
            <summary>
Returns a unique identifier for the adapter that is specific to the adapter hardware.
Applications can use this identifier to define robust mappings across various APIs (Direct3D 9, DXGI).
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <returns>A unique identifier for the given adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3DEx.GetAdapterDisplayModeEx(System.Int32,SlimDX.Direct3D9.DisplayRotation@)">
            <summary>
Retrieves the current extended display mode for the specified adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <returns>The current extended display mode for the specified adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3DEx.GetAdapterDisplayModeEx(System.Int32)">
            <summary>
Retrieves the current extended display mode for the specified adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <returns>The current extended display mode for the specified adapter.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.Direct3DEx.AdaptersEx">
            <summary>
Gets a collection of installed extended adapters.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterInformationEx.Details">
            <summary>
Gets or sets the adapter details.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.AdapterInformationEx.GetCaps(SlimDX.Direct3D9.DeviceType)">
            <summary>
Gets the capabilities of the adapter.
</summary>
            <param name="type">The desired device type.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.Capabilities" /> object containing the capabilities of the adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.AdapterInformationEx.GetDisplayModes(SlimDX.Direct3D9.DisplayModeFilter)">
            <summary>
Gets a list of all possible display modes for the adapter.
</summary>
            <param name="filter">The desired characteristics of the display mode.</param>
            <returns>A collection of possibly display modes.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterInformationEx.CurrentDisplayMode">
            <summary>
Gets the current extended display mode of the adapter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterInformationEx.Monitor">
            <summary>
Gets the monitor associated with the adapter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterInformationEx.Adapter">
            <summary>
Gets the adapter ordinal.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.AdapterInformationEx">
            <summary>Dscribes the capabilities and properties of an available adapter.</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterExCollection.DefaultAdapter">
            <summary>
Gets the default <see cref="T:SlimDX.Direct3D9.AdapterInformationEx" /> item.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.AdapterExCollection">
            <summary>Implements a read-only collection of <see cref="T:SlimDX.Direct3D9.AdapterInformationEx" /> instances.</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DisplayModeExCollection">
            <summary>Implements a read-only collection of <see cref="T:SlimDX.Direct3D9.DisplayMode" /> instances.</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeEx.Equals(SlimDX.Direct3D9.DisplayModeEx@,SlimDX.Direct3D9.DisplayModeEx@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeEx.Equals(SlimDX.Direct3D9.DisplayModeEx)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeEx.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeEx.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeEx.op_Inequality(SlimDX.Direct3D9.DisplayModeEx,SlimDX.Direct3D9.DisplayModeEx)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeEx.op_Equality(SlimDX.Direct3D9.DisplayModeEx,SlimDX.Direct3D9.DisplayModeEx)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayModeEx.ScanlineOrdering">
            <summary>
The scanline ordering used by the display mode.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayModeEx.Format">
            <summary>
The surface format of the display mode.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayModeEx.RefreshRate">
            <summary>
Refresh rate of the monitor.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayModeEx.Height">
            <summary>
Screen height, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayModeEx.Width">
            <summary>
Screen width, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DisplayModeEx">
            <summary>Describes an extended display mode.</summary>
            <unmanaged>D3DDISPLAYMODEEX</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeFilter.Equals(SlimDX.Direct3D9.DisplayModeFilter@,SlimDX.Direct3D9.DisplayModeFilter@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeFilter.Equals(SlimDX.Direct3D9.DisplayModeFilter)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeFilter.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeFilter.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeFilter.op_Inequality(SlimDX.Direct3D9.DisplayModeFilter,SlimDX.Direct3D9.DisplayModeFilter)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayModeFilter.op_Equality(SlimDX.Direct3D9.DisplayModeFilter,SlimDX.Direct3D9.DisplayModeFilter)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayModeFilter.ScanlineOrdering">
            <summary>
The scanline ordering used by the display mode.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayModeFilter.Format">
            <summary>
The surface format of the display mode.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DisplayModeFilter">
            <summary>Describes an extended display mode.</summary>
            <unmanaged>D3DDISPLAYMODEFILTER</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.SupportsR2VB(System.Int32,SlimDX.Direct3D9.DeviceType)">
            <summary>
Determines whether the device supports Render-To-Vertex-Buffer (R2VB).
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <returns>
                <c>true</c> if the adapter supports R2VB; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.GetDeviceCaps(System.Int32,SlimDX.Direct3D9.DeviceType)">
            <summary>
Retrieves device-specific information about a device.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">Desired device type.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.Capabilities" /> object containing the capabilities of the adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.GetAdapterMonitor(System.Int32)">
            <summary>
Returns the handle of the monitor associated with the Direct3D object.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <returns>Handle of the monitor associated with the Direct3D object.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.EnumerateAdapterModes(System.Int32,SlimDX.Direct3D9.Format,System.Int32)">
            <summary>
Queries the device to determine whether the specified adapter supports the requested 
format and display mode.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="format">Desired surface format.</param>
            <param name="modeIndex">Index of the desired display mode.</param>
            <returns>The display mode that matches the specified information.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.GetAdapterModeCount(System.Int32,SlimDX.Direct3D9.Format)">
            <summary>
Returns the number of display modes available on the specified adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="format">Desired surface format.</param>
            <returns>The number of display modes available on the specified adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.GetAdapterIdentifier(System.Int32)">
            <summary>
Retrieves information about the specified adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <returns>Information about the specified adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.GetAdapterDisplayMode(System.Int32)">
            <summary>
Retrieves the current display mode for the specified adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <returns>The current display mode for the specified adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceMultisampleType(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,System.Boolean,SlimDX.Direct3D9.MultisampleType)">
            <summary>
Determines if a multisampling technique is available on this device.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="surfaceFormat">Format of the surface to be multisampled.</param>
            <param name="windowed">
                <c>true</c> to inquire about windowed multisampling, <c>false</c> to inquire about fullscreen multisampling.</param>
            <param name="multisampleType">The multisampling technique to test.</param>
            <returns>
                <c>true</c> if the device can perform the specified multisampling method; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceMultisampleType(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,System.Boolean,SlimDX.Direct3D9.MultisampleType,System.Int32@)">
            <summary>
Determines if a multisampling technique is available on this device.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="surfaceFormat">Format of the surface to be multisampled.</param>
            <param name="windowed">
                <c>true</c> to inquire about windowed multisampling, <c>false</c> to inquire about fullscreen multisampling.</param>
            <param name="multisampleType">The multisampling technique to test.</param>
            <param name="qualityLevels">When the method completes, contains the number of quality stops available for a given multisample type.</param>
            <returns>
                <c>true</c> if the device can perform the specified multisampling method; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceMultisampleType(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,System.Boolean,SlimDX.Direct3D9.MultisampleType,System.Int32@,SlimDX.Result@)">
            <summary>
Determines if a multisampling technique is available on this device.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="surfaceFormat">Format of the surface to be multisampled.</param>
            <param name="windowed">
                <c>true</c> to inquire about windowed multisampling, <c>false</c> to inquire about fullscreen multisampling.</param>
            <param name="multisampleType">The multisampling technique to test.</param>
            <param name="qualityLevels">When the method completes, contains the number of quality stops available for a given multisample type.</param>
            <param name="result">When the method completes, contains a <see cref="T:SlimDX.Result" /> object describing the result of the operation.</param>
            <returns>
                <c>true</c> if the device can perform the specified multisampling method; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDepthStencilMatch(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Format)">
            <summary>
Determines whether a depth-stencil format is compatible with a render-target format in a particular display mode.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="adapterFormat">Format of the display mode into which the adapter will be placed.</param>
            <param name="renderTargetFormat">Format of the render target surface.</param>
            <param name="depthStencilFormat">Format of the depth-stencil surface.</param>
            <returns>
                <c>true</c> if the depth-stencil surface is compatible with the render target format; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDepthStencilMatch(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Format,SlimDX.Result@)">
            <summary>
Determines whether a depth-stencil format is compatible with a render-target format in a particular display mode.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="adapterFormat">Format of the display mode into which the adapter will be placed.</param>
            <param name="renderTargetFormat">Format of the render target surface.</param>
            <param name="depthStencilFormat">Format of the depth-stencil surface.</param>
            <param name="result">When the method completes, contains a <see cref="T:SlimDX.Result" /> object describing the result of the operation.</param>
            <returns>
                <c>true</c> if the depth-stencil surface is compatible with the render target format; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceType(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Format,System.Boolean)">
            <summary>
Verifies whether a hardware accelerated device type can be used on this adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="adapterFormat">Format of the display mode into which the adapter will be placed.</param>
            <param name="backBufferFormat">Format of the back buffer.</param>
            <param name="windowed">Value indicating whether the device type will be used in full-screen or windowed mode.</param>
            <returns>
                <c>true</c> if the device can be used with the specified settings; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceType(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Format,System.Boolean,SlimDX.Result@)">
            <summary>
Verifies whether a hardware accelerated device type can be used on this adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="adapterFormat">Format of the display mode into which the adapter will be placed.</param>
            <param name="backBufferFormat">Format of the back buffer.</param>
            <param name="windowed">Value indicating whether the device type will be used in full-screen or windowed mode.</param>
            <param name="result">When the method completes, contains a <see cref="T:SlimDX.Result" /> object describing the result of the operation.</param>
            <returns>
                <c>true</c> if the device can be used with the specified settings; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceFormat(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.ResourceType,SlimDX.Direct3D9.Format)">
            <summary>
Determines whether a surface format is available as a specified resource type and can be
used as a texture, depth-stencil buffer, or render target, or any combination of the three,
on a device representing this adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="adapterFormat">Format of the display mode into which the adapter will be placed.</param>
            <param name="usage">Requested usage options for the surface.</param>
            <param name="resourceType">Resource type requested for use with the queried format.</param>
            <param name="checkFormat">The format that will be checked for compatibility.</param>
            <returns>
                <c>true</c> if the format is compatible with the specified device; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceFormat(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Usage,SlimDX.Direct3D9.ResourceType,SlimDX.Direct3D9.Format,SlimDX.Result@)">
            <summary>
Determines whether a surface format is available as a specified resource type and can be
used as a texture, depth-stencil buffer, or render target, or any combination of the three,
on a device representing this adapter.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="adapterFormat">Format of the display mode into which the adapter will be placed.</param>
            <param name="usage">Requested usage options for the surface.</param>
            <param name="resourceType">Resource type requested for use with the queried format.</param>
            <param name="checkFormat">The format that will be checked for compatibility.</param>
            <param name="result">When the method completes, contains a <see cref="T:SlimDX.Result" /> object describing the result of the operation.</param>
            <returns>
                <c>true</c> if the format is compatible with the specified device; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceFormatConversion(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Format)">
            <summary>
Tests the device to see if it supports conversion from one display format to another.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="sourceFormat">Source adapter format.</param>
            <param name="targetFormat">Destination adapter format.</param>
            <returns>
                <c>true</c> if the conversion is possible; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D.CheckDeviceFormatConversion(System.Int32,SlimDX.Direct3D9.DeviceType,SlimDX.Direct3D9.Format,SlimDX.Direct3D9.Format,SlimDX.Result@)">
            <summary>
Tests the device to see if it supports conversion from one display format to another.
</summary>
            <param name="adapter">Index of the adapter to use.</param>
            <param name="deviceType">The desired device type.</param>
            <param name="sourceFormat">Source adapter format.</param>
            <param name="targetFormat">Destination adapter format.</param>
            <param name="result">When the method completes, contains a <see cref="T:SlimDX.Result" /> object describing the result of the operation.</param>
            <returns>
                <c>true</c> if the conversion is possible; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.Direct3D.AdapterCount">
            <summary>
Gets the number of adapters on the system.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Direct3D.Adapters">
            <summary>
Gets a collection of installed adapters.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Direct3D.CheckWhql">
            <summary>
Gets or sets a value indicating whether Direct3D should check WHQL levels. If this value
is set to <c>true</c>, Direct3D can connect to the internet in order to download
new Microsoft Windows Hardware Quality Labs (WHQL) certificates.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Direct3D">
            <summary>
Used to create Microsoft Direct3D objects and set up the environment. This class 
includes methods for enumerating and retrieving capabilities of the device.
</summary>
            <unmanaged>IDirect3D9</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterInformation.Details">
            <summary>
Gets or sets the adapter details.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.AdapterInformation.GetCaps(SlimDX.Direct3D9.DeviceType)">
            <summary>
Gets the capabilities of the adapter.
</summary>
            <param name="type">The desired device type.</param>
            <returns>A <see cref="T:SlimDX.Direct3D9.Capabilities" /> object containing the capabilities of the adapter.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.AdapterInformation.GetDisplayModes(SlimDX.Direct3D9.Format)">
            <summary>
Gets a list of all possible display modes for the adapter.
</summary>
            <param name="format">The desired pixel format.</param>
            <returns>A collection of possibly display modes.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterInformation.CurrentDisplayMode">
            <summary>
Gets the current display mode of the adapter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterInformation.Monitor">
            <summary>
Gets the monitor associated with the adapter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterInformation.Adapter">
            <summary>
Gets the adapter ordinal.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.AdapterInformation">
            <summary>Dscribes the capabilities and properties of an available adapter.</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterCollection.DefaultAdapter">
            <summary>
Gets the default <see cref="T:SlimDX.Direct3D9.AdapterInformation" /> item.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.AdapterCollection">
            <summary>Implements a read-only collection of <see cref="T:SlimDX.Direct3D9.AdapterInformation" /> instances.</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.CertificationDate">
            <summary>
Gets a value indicating when the adapter was WHQL certified.
A value of DateTime.MinValue indicates that the adapter is certified, but no specific date
information is available. A value of DateTime.MaxValue indicates that the driver is not
WHQL certified.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.Certified">
            <summary>
Gets a value indicating whether the adapter is WHQL certified.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.WhqlLevel">
            <summary>
The Windows Hardware Quality Labs validation level for the driver/device pair.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.VendorId">
            <summary>
Gets the manufacturer identifier.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.SubsystemId">
            <summary>
Gets the subsystem identifier for the chip set.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.Revision">
            <summary>
Gets the revision level of the chip set.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.DriverVersion">
            <summary>
Gets the version of the driver running on the adapter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.DriverName">
            <summary>
Gets the name of the driver running on the adapter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.DeviceName">
            <summary>
Gets the name of the adapter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.DeviceIdentifier">
            <summary>
Gets a unique identifier for the adapter/chip set pair.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.DeviceId">
            <summary>
Gets the identifier of the adapter chip set.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.Description">
            <summary>
Gets a friendly description string for the adapter.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.AdapterDetails.Adapter">
            <summary>
Gets the adapter ordinal.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.AdapterDetails">
            <summary>Contains information identifying an adapter.</summary>
            <unmanaged>D3DADAPTER_IDENTIFIER9</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.DisplayModeCollection">
            <summary>Implements a read-only collection of <see cref="T:SlimDX.Direct3D9.DisplayMode" /> instances.</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayMode.Equals(SlimDX.Direct3D9.DisplayMode@,SlimDX.Direct3D9.DisplayMode@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayMode.Equals(SlimDX.Direct3D9.DisplayMode)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayMode.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayMode.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayMode.op_Inequality(SlimDX.Direct3D9.DisplayMode,SlimDX.Direct3D9.DisplayMode)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.DisplayMode.op_Equality(SlimDX.Direct3D9.DisplayMode,SlimDX.Direct3D9.DisplayMode)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayMode.Format">
            <summary>
The surface format of the display mode.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayMode.RefreshRate">
            <summary>
Refresh rate of the monitor.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayMode.Height">
            <summary>
Screen height, in pixels.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.DisplayMode.Width">
            <summary>
Screen width, in pixels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DisplayMode">
            <summary>Describes a display mode.</summary>
            <unmanaged>D3DDISPLAYMODE</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D9Exception.#ctor(SlimDX.Result)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3D9Exception" /> class.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D9Exception.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3D9Exception" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D9Exception.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3D9Exception" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.Direct3D9.Direct3D9Exception.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.Direct3D9.Direct3D9Exception" /> class.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Direct3D9Exception">
            <summary>
Represents errors that occur in the XInput subsystem.
</summary>
        </member>
        <member name="M:SlimDX.ComObject.Dispose">
            <summary>
Releases all resources used by the <see cref="T:SlimDX.ComObject" />.
</summary>
        </member>
        <member name="P:SlimDX.ComObject.Tag">
            <summary>
Extra tag data stored along with the object. This member is intended for use by users of SlimDX
and has no internal meaning to the library.
</summary>
        </member>
        <member name="P:SlimDX.ComObject.IsDefaultPool">
            <summary>
Gets or sets a value indicating whether or not the object is in the default allocation pool.
</summary>
        </member>
        <member name="P:SlimDX.ComObject.CreationTime">
            <summary>
Gets the timestamp, in milliseconds, of the object'ss creation.
</summary>
        </member>
        <member name="P:SlimDX.ComObject.CreationSource">
            <summary>
Gets a <see cref="T:System.Diagnostics.StackTrace" /> to the location where the object was created.
</summary>
        </member>
        <member name="P:SlimDX.ComObject.ComPointer">
            <summary>
Gets an <see cref="T:System.IntPtr">IntPtr</see> to the underlying native COM interface.
</summary>
        </member>
        <member name="P:SlimDX.ComObject.Disposed">
            <summary>
Gets a value that indicates whether the object has been disposed.
</summary>
        </member>
        <member name="T:SlimDX.ComObject">
            <summary>
The base class for all SlimDX types which represent COM interfaces.
</summary>
            <unmanaged>IUnknown</unmanaged>
        </member>
        <member name="M:SlimDX.Utilities.CheckArrayBounds(System.Array,System.Int32,System.Int32@)">
            <summary>
Checks that a range to be read is within the boundaries of a source array, and fills in the number of elements to read if necessary.
</summary>
            <param name="data">The source array to be read from.</param>
            <param name="offset">The index at which the caller intends to begin reading from the source.</param>
            <param name="count">The number of elements intended to be read from the source. If 0 is passed, count will be adjusted to be size - offset.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="data" /> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</exception>
        </member>
        <member name="M:SlimDX.Utilities.CheckBounds(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
Checks that a range to be read are within the boundaries of a source.
</summary>
            <param name="lowerBound">The minimum bound that can be read from the source, and fills in the number of elements to read if necessary.</param>
            <param name="size">The total size of the source.</param>
            <param name="offset">The index at which the caller intends to begin reading from the source.</param>
            <param name="count">The number of elements intended to be read from the source. If 0 is passed, count will be adjusted to be size - offset.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is less than <paramref name="lowerBound" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="count" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</exception>
        </member>
        <member name="M:SlimDX.ObjectTable.ReportLeaks">
            <summary>
Generates a report of all outstanding COM objects (objects that have not been disposed)
tracked by SlimDX. The report includes the object's type and a stack trace to its creation point.
</summary>
            <returns>A string containing the leak report.</returns>
        </member>
        <member name="M:SlimDX.ObjectTable.Remove(SlimDX.ComObject)">
            <summary>
Removes a <see cref="T:SlimDX.ComObject">COM object</see> from the table.
</summary>
            <param name="comObject">The object to remove.</param>
            <returns>
                <c>true</c> if the object was in the table and was removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.ObjectTable.Add(SlimDX.ComObject,SlimDX.ComObject)">
            <summary>
Adds a <see cref="T:SlimDX.ComObject">COM object</see> to the table. This will set the object's <see cref="T:SlimDX.ComObject" /><c>::CreationSource</c> property if
<see cref="T:SlimDX.Configuration" /><c>::EnableObjectTracking</c>object tracking is on.
</summary>
            <param name="comObject">The object to add.</param>
        </member>
        <member name="P:SlimDX.ObjectTable.SyncObject">
            <summary>
Gets the synchronization object used by the ObjectTable. This object can be used to safely
access the internal object list.
</summary>
            <remarks>
This member should only be used if it is necesssary to access the <see cref="P:SlimDX.ObjectTable.Objects" /> property
in a thread-safe manner, and should not be used as anything other than a parameter for
functions in <see cref="T:System.Threading.Monitor" />.
</remarks>
        </member>
        <member name="E:SlimDX.ObjectTable.ObjectRemoved">
            <summary>
Occurs after an object has been removed from the object table.
</summary>
        </member>
        <member name="E:SlimDX.ObjectTable.ObjectAdded">
            <summary>
Occurs after a new object has been added to the object table.
</summary>
        </member>
        <member name="P:SlimDX.ObjectTable.Objects">
            <summary>
Gets a list of all the <see cref="T:SlimDX.ComObject">COM objects</see> tracked by SlimDX.
</summary>
            <remarks>
Access through this member is NOT thread-safe. Use <see cref="P:SlimDX.ObjectTable.SyncObject" />
to protect multithreaded access if necessary.
</remarks>
        </member>
        <member name="T:SlimDX.ObjectTable">
            <summary>
Maintains a list of all the <see cref="T:SlimDX.ComObject">COM objects</see> managed by SlimDX.
</summary>
        </member>
        <member name="P:SlimDX.ObjectTableEventArgs.ComObject">
            <summary>
The <see cref="P:SlimDX.ObjectTableEventArgs.ComObject">COM object</see> that this notification refers to.
</summary>
        </member>
        <member name="M:SlimDX.XAudio2.XAudio2Exception.#ctor(SlimDX.Result)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XAudio2.XAudio2Exception" /> class.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.XAudio2.XAudio2Exception.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XAudio2.XAudio2Exception" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.XAudio2.XAudio2Exception.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XAudio2.XAudio2Exception" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.XAudio2.XAudio2Exception.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.XAudio2.XAudio2Exception" /> class.
</summary>
        </member>
        <member name="T:SlimDX.XAudio2.XAudio2Exception">
            <summary>
Represents errors that occur in the XAudio2 subsystem.
</summary>
        </member>
        <member name="M:SlimDX.SlimDXException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:SlimDX.SlimDXException.#ctor(SlimDX.Result)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.SlimDXException" /> class.
</summary>
            <param name="result">The result code that caused this exception.</param>
        </member>
        <member name="M:SlimDX.SlimDXException.#ctor(System.String,System.Exception)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.SlimDXException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:SlimDX.SlimDXException.#ctor(System.String)">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.SlimDXException" /> class.
</summary>
            <param name="message">The message describing the exception.</param>
        </member>
        <member name="M:SlimDX.SlimDXException.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:SlimDX.SlimDXException" /> class.
</summary>
        </member>
        <member name="P:SlimDX.SlimDXException.ResultCode">
            <summary>
Gets the <see cref="T:SlimDX.Result">Result code</see> for the exception. This value indicates
the specific type of failure that occured within SlimDX.
</summary>
        </member>
        <member name="T:SlimDX.SlimDXException">
            <summary>
The base class for errors that occur in SlimDX.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="M:SlimDX.Configuration.ClearResultWatches">
            <summary>
Clears out all watches on all <see cref="T:SlimDX.Result">result codes</see>.
</summary>
        </member>
        <member name="M:SlimDX.Configuration.RemoveResultWatch(SlimDX.Result)">
            <summary>
Removes a watch on the specified <see cref="T:SlimDX.Result">result code</see>.
If no watch was set, this call is ignored.
</summary>
            <param>The result code to stop watching.</param>
        </member>
        <member name="M:SlimDX.Configuration.AddResultWatch(SlimDX.Result,SlimDX.ResultWatchFlags)">
            <summary>
Adds a watch indicating the action to be taken when a method returns the
specified <see cref="T:SlimDX.Result">result code</see>.
</summary>
            <param name="result">The result code to watch for.</param>
            <param name="flags">The action to take when the specified result code occurs.</param>
        </member>
        <member name="P:SlimDX.Configuration.Timer">
            <summary>
Gets or sets the SlimDX wide timer object.
</summary>
            <remarks>This Timer is automatically created and started when SlimDX is loaded.</remarks>
        </member>
        <member name="P:SlimDX.Configuration.DetectDoubleDispose">
            <summary>
Gets or sets whether SlimDX detects double disposal of objects. If set to <c>true</c>, SlimDX will throw
an <see cref="T:System.ObjectDisposedException" /> when an already disposed object is disposed. If set to <c>false</c>, double
disposals will be silently ignored. The default value is <c>false</c>.
</summary>
        </member>
        <member name="P:SlimDX.Configuration.ThrowOnShaderCompileError">
            <summary>
Gets or sets whether SlimDX defaults to throwing exceptions when a shader or effect compilation fails. The default value is <c>true</c>.
</summary>
        </member>
        <member name="P:SlimDX.Configuration.ThrowOnError">
            <summary>
Gets or sets whether SlimDX defaults to throwing exceptions on <see cref="T:SlimDX.Result">result codes</see>
that indicate errors. The default value is <c>true</c>.
</summary>
        </member>
        <member name="P:SlimDX.Configuration.EnableObjectTracking">
            <summary>
Gets or sets whether SlimDX is currently tracking call stacks from object creation. If set to <c>false</c>,
objects will not carry a call stack from when they were created. The default value is <c>false</c>.
</summary>
            <remarks>Object tracking is a useful debugging facility, but may have a significant negative
impact on performance. The default value is <c>false</c>.</remarks>
        </member>
        <member name="T:SlimDX.Configuration">
            <summary>
Used to control global options that affect all of SlimDX.
</summary>
        </member>
        <member name="M:SlimDX.Result.Equals(SlimDX.Result@,SlimDX.Result@)">
            <summary>
Returns a value indicating whether the two results are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Result.Equals(SlimDX.Result)">
            <summary>
Returns a value indicating whether this instance is equal to the specified result.
</summary>
            <param name="other">A <see cref="T:SlimDX.Result" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Result.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Result.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Result.ToString">
            <summary>
Converts the value of the result to its equivalent string representation.
</summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:SlimDX.Result.op_Inequality(SlimDX.Result,SlimDX.Result)">
            <summary>
Tests for inequality between two results.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Result.op_Equality(SlimDX.Result,SlimDX.Result)">
            <summary>
Tests for equality between two results.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Result.Last">
            <summary>
Gets the last recorded result of a method or operation.
</summary>
        </member>
        <member name="P:SlimDX.Result.IsFailure">
            <summary>
Gets a value indicating whether or not the result represents a failed operation.
</summary>
        </member>
        <member name="P:SlimDX.Result.IsSuccess">
            <summary>
Gets a value indicating whether or not the result represents a successful operation.
</summary>
        </member>
        <member name="P:SlimDX.Result.Description">
            <summary>
Gets the friendly description of the result.
</summary>
        </member>
        <member name="P:SlimDX.Result.Name">
            <summary>
Gets the name of the result.
</summary>
        </member>
        <member name="P:SlimDX.Result.Code">
            <summary>
Gets the actual HRESULT result code.
</summary>
        </member>
        <member name="T:SlimDX.Result">
            <summary>
Represents the result of a method or operation.
</summary>
            <unmanaged href="ms679692">HRESULT</unmanaged>
        </member>
        <member name="T:SlimDX.ResultWatchFlags">
            <summary>
Specifies possible behaviors of result watches.
</summary>
        </member>
        <member name="F:SlimDX.ResultWatchFlags.Throw">
            <summary>
Throw an exception whenever the result occurs.
</summary>
        </member>
        <member name="F:SlimDX.ResultWatchFlags.Break">
            <summary>
Break whenever the result occurs.
</summary>
        </member>
        <member name="F:SlimDX.ResultWatchFlags.AlwaysIgnore">
            <summary>
Always ignore the result.
</summary>
        </member>
        <member name="T:SlimDX.PerformanceOptions">
            <summary>
Specifies possible performance profiling options.
</summary>
        </member>
        <member name="F:SlimDX.PerformanceOptions.DoNotAllowProfiling">
            <summary>
Do not allow performance profiling.
</summary>
        </member>
        <member name="F:SlimDX.PerformanceOptions.None">
            <summary>
No performance options specified.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D9.Capabilities.Equals(SlimDX.Direct3D9.Capabilities,SlimDX.Direct3D9.Capabilities)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Capabilities.Equals(SlimDX.Direct3D9.Capabilities)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Capabilities.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Capabilities.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Capabilities.op_Inequality(SlimDX.Direct3D9.Capabilities,SlimDX.Direct3D9.Capabilities)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.Capabilities.op_Equality(SlimDX.Direct3D9.Capabilities,SlimDX.Direct3D9.Capabilities)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxPixelShader30InstructionSlots">
            <summary>
Maximum number of pixel shader instruction slots.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxVertexShader30InstructionSlots">
            <summary>
Maximum number of vertex shader instruction slots.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxPShaderInstructionsExecuted">
            <summary>
Maximum number of pixel shader instructions that can be run when using flow control.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxVShaderInstructionsExecuted">
            <summary>
Maximum number of vertex shader instructions that can be run when using flow control.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.VertexTextureFilterCaps">
            <summary>
Vertex shader texture filtering capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.PS20Caps">
            <summary>
Extended capabilities for pixel shader version 2.0.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.VS20Caps">
            <summary>
Extended capabilities for vertex shader version 2.0.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.StretchRectFilterCaps">
            <summary>
Describes the operations supported by <see cref="T:SlimDX.Direct3D9.Device">Device.StretchRectangle</see>.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.SimultaneousRTCount">
            <summary>
Number of simultaenous render targets.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.DeclarationTypes">
            <summary>
Possible data types contained in a vertex declaration.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.NumberOfAdaptersInGroup">
            <summary>
The number of adapters in the group.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.AdapterOrdinalInGroup">
            <summary>
Indicates the order in which heads are referenced by the API.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MasterAdapterOrdinal">
            <summary>
Indicates which device is master for this subordinate.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxNPatchTessellationLevel">
            <summary>
Maximum tessellation level for N-patches.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.DeviceCaps2">
            <summary>
Device driver capabilities for adaptive tessellation.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.PixelShader1xMaxValue">
            <summary>
Maximum value of the pixel shader arithmetic component.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.PixelShaderVersion">
            <summary>
The pixel shader version.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxVertexShaderConstants">
            <summary>
The number of vertex shaders registers that are reserved for constants.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.VertexShaderVersion">
            <summary>
The vertex shader version.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxStreamStride">
            <summary>
Maximum stride for data streams.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxStreams">
            <summary>
Maximum number of concurrent data streams.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxVertexIndex">
            <summary>
Maximum size of indices supported for hardware vertex processing.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxPrimitiveCount">
            <summary>
Maximum number of primitives for each <see cref="T:SlimDX.Direct3D9.Device">Device.DrawPrimitive</see> call.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxPointSize">
            <summary>
Maximum size of a point primitive.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxVertexBlendMatrixIndex">
            <summary>
Maximum matrix index that can be indexed into using the per-vertex indices.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxVertexBlendMatrices">
            <summary>
Maximum number of matrices that the device can apply when performing multimatrix vertex blending.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxUserClipPlanes">
            <summary>
Maximum number of user defined clip planes supported.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxActiveLights">
            <summary>
Maximum number of lights that can be activated simultaneously.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.VertexProcessingCaps">
            <summary>
Specifies the vertex processing capabilities of the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxSimultaneousTextures">
            <summary>
Maximum number of textures that can be simulatenously bound to the fixed function pipeline
sampler stages.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxTextureBlendStages">
            <summary>
Maximum number of texture blending stages supported in the fixed function pipeline. In
the programmable pipeline, this corresponds to the number of unique texture registers
used by pixel shader instructions.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.TextureOperationCaps">
            <summary>
Describes the texture operations supported by the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.FVFCaps">
            <summary>
Capabilities of the flexible vertex format system.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.StencilCaps">
            <summary>
Specifies supported stencil buffer operations. Stencil operations are assumed to be 
valid for all three stencil-buffer operation render states.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.ExtentsAdjust">
            <summary>
Number of pixels to adjust the extents rectangle outward to accommodate antialiasing kernels. 
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.GuardBandBottom">
            <summary>
Screen space coordinate of the guard band clipping region. Coordinates inside this rectangle 
but outside the viewport rectangle are automatically clipped.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.GuardBandRight">
            <summary>
Screen space coordinate of the guard band clipping region. Coordinates inside this rectangle 
but outside the viewport rectangle are automatically clipped.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.GuardBandTop">
            <summary>
Screen space coordinate of the guard band clipping region. Coordinates inside this rectangle 
but outside the viewport rectangle are automatically clipped.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.GuardBandLeft">
            <summary>
Screen space coordinate of the guard band clipping region. Coordinates inside this rectangle 
but outside the viewport rectangle are automatically clipped.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxVertexW">
            <summary>
Maximum W-based depth value that the device supports.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxAnisotropy">
            <summary>
Maximum valid value for the anisotropy texture-stage state.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxTextureAspectRatio">
            <summary>
Maximum texture aspect ratio supported by the hardware, typically a power of two.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxTextureRepeat">
            <summary>
Represents the maximum range of the integer bits of the post-normalized texture coordinates.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxVolumeExtent">
            <summary>
Maximum value for any of the three dimensions (width, height, and depth) of a volume texture.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxTextureHeight">
            <summary>
Maximum possible texture height.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.MaxTextureWidth">
            <summary>
Maximum possible texture width.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.LineCaps">
            <summary>
Defines capabilities for line drawing primitives.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.VolumeTextureAddressCaps">
            <summary>
Texture-addressing capabilities for volume texture objects.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.TextureAddressCaps">
            <summary>
Texture-addressing capabilities for texture objects.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.VolumeTextureFilterCaps">
            <summary>
Specifies volume texture filtering capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.CubeTextureFilterCaps">
            <summary>
Specifies cube texture filtering capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.TextureFilterCaps">
            <summary>
Specifies texture filtering capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.TextureCaps">
            <summary>
Miscellaneous texture mapping capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.ShadeCaps">
            <summary>
Shading operations capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.AlphaCompareCaps">
            <summary>
Alpah test comparison capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.DestinationBlendCaps">
            <summary>
Specifies possible destination blending capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.SourceBlendCaps">
            <summary>
Specifies possible source blending capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.DepthCompareCaps">
            <summary>
Z-Buffer comparison capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.RasterCaps">
            <summary>
Information on raster-drawing capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.PrimitiveMiscCaps">
            <summary>
Miscellaneous driver primitive capabilities.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.DeviceCaps">
            <summary>
A set of flags describing the general capabilities of the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.CursorCaps">
            <summary>
Indicates the amount of hardware support available for cursors.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.PresentationIntervals">
            <summary>
Specifies the set of presentation swap chain intervals that are allowed on the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.Caps3">
            <summary>
Driver-specific capabilities for the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.Caps2">
            <summary>
Driver-specific capabilities for the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.Caps">
            <summary>
Driver-specific capabilities for the device.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.AdapterOrdinal">
            <summary>
The ordinal of the adapter on which the device resides.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.Capabilities.DeviceType">
            <summary>
Specifies the type of the device, which identifies which type of resources are used to process vertices.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Capabilities">
            <summary>Represents the capabilities of the hardware exposed through the Direct3D object.</summary>
            <unmanaged>D3DCAPS9</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.PixelShader20Caps.Equals(SlimDX.Direct3D9.PixelShader20Caps@,SlimDX.Direct3D9.PixelShader20Caps@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PixelShader20Caps.Equals(SlimDX.Direct3D9.PixelShader20Caps)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PixelShader20Caps.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PixelShader20Caps.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PixelShader20Caps.op_Inequality(SlimDX.Direct3D9.PixelShader20Caps,SlimDX.Direct3D9.PixelShader20Caps)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.PixelShader20Caps.op_Equality(SlimDX.Direct3D9.PixelShader20Caps,SlimDX.Direct3D9.PixelShader20Caps)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.PixelShader20Caps.InstructionSlotCount">
            <summary>
Number of supported instruction slots.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PixelShader20Caps.StaticFlowControlDepth">
            <summary>
The depth of static flow control nesting.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PixelShader20Caps.TempCount">
            <summary>
The number of temporary registers supported.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PixelShader20Caps.DynamicFlowControlDepth">
            <summary>
The depth of dynamic flow control nesting.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.PixelShader20Caps.Caps">
            <summary>
Generic pixel shader caps.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PixelShader20Caps">
            <summary>Describes the pixel shader capabilities of a device.</summary>
            <unmanaged>D3DPSHADERCAPS2_0</unmanaged>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexShader20Caps.Equals(SlimDX.Direct3D9.VertexShader20Caps@,SlimDX.Direct3D9.VertexShader20Caps@)">
            <summary>
Determines whether the specified object instances are considered equal. 
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> is the same instance as <paramref name="value2" /> or 
if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexShader20Caps.Equals(SlimDX.Direct3D9.VertexShader20Caps)">
            <summary>
Returns a value that indicates whether the current instance is equal to the specified object. 
</summary>
            <param name="other">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexShader20Caps.Equals(System.Object)">
            <summary>
Returns a value that indicates whether the current instance is equal to a specified object. 
</summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns>
                <c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexShader20Caps.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexShader20Caps.op_Inequality(SlimDX.Direct3D9.VertexShader20Caps,SlimDX.Direct3D9.VertexShader20Caps)">
            <summary>
Tests for inequality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D9.VertexShader20Caps.op_Equality(SlimDX.Direct3D9.VertexShader20Caps,SlimDX.Direct3D9.VertexShader20Caps)">
            <summary>
Tests for equality between two objects.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexShader20Caps.StaticFlowControlDepth">
            <summary>
The depth of static flow control nesting.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexShader20Caps.TempCount">
            <summary>
The number of temporary registers supported.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexShader20Caps.DynamicFlowControlDepth">
            <summary>
The depth of dynamic flow control nesting.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D9.VertexShader20Caps.Caps">
            <summary>
Generic vertex shader capabilities.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexShader20Caps">
            <summary>Describes the vertex shader capabilities of a device.</summary>
            <unmanaged>D3DVSHADERCAPS2_0</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexTextureSampler">
            <summary>
Identifies texture samplers used by vertex shaders.
</summary>
            <unmanaged>D3DVERTEXTEXTURESAMPLER</unmanaged>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureStage">
            <summary>
Texture stage states define multi-blender texture operations. Some sampler states set up 
vertex processing, and some set up pixel processing. Texture stage states can be saved and 
restored using stateblocks.
</summary>
            <unmanaged>D3DTEXTURESTAGESTATETYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.Constant">
            <summary>
Per-stage constant color. Use packed integer colors to set this state.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.ResultArg">
            <summary>
Setting to select the destination register for the result of this stage. Use values from
<see cref="T:SlimDX.Direct3D9.TextureArgument" /> to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureArgument" />.Current.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.AlphaArg0">
            <summary>
Settings for the third alpha operand for triadic operations. Use values from <see cref="T:SlimDX.Direct3D9.TextureArgument" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureArgument" />.Current.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.ColorArg0">
            <summary>
Settings for the third color operand for triadic operations. Use values from <see cref="T:SlimDX.Direct3D9.TextureArgument" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureArgument" />.Current.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.TextureTransformFlags">
            <summary>
Specifies transformation options for texture coordinates. Use values from <see cref="T:SlimDX.Direct3D9.TextureTransform" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureTransform" />.Disable.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.BumpEnvironmentLOffset">
            <summary>
Floating-point offset value for bump-map luminance. The default value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.BumpEnvironmentLScale">
            <summary>
Floating-point scale value for bump-map luminance. The default value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.TexCoordIndex">
            <summary>
Index of the texture coordinate set to use with this texture stage. You can specify up to 
eight sets of texture coordinates per vertex. If a vertex does not include a set of texture 
coordinates at the specified index, the system defaults to the u and v coordinates (0,0). 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.BumpEnvironmentMat11">
            <summary>
Texture-stage state is a floating-point value for the [1][1] coefficient in a bump-mapping 
matrix. The default value is 0.0f. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.BumpEnvironmentMat10">
            <summary>
Texture-stage state is a floating-point value for the [1][0] coefficient in a bump-mapping 
matrix. The default value is 0.0f. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.BumpEnvironmentMat01">
            <summary>
Texture-stage state is a floating-point value for the [0][1] coefficient in a bump-mapping 
matrix. The default value is 0.0f. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.BumpEnvironmentMat00">
            <summary>
Texture-stage state is a floating-point value for the [0][0] coefficient in a bump-mapping 
matrix. The default value is 0.0f. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.AlphaArg2">
            <summary>
Texture-stage state is the second alpha argument for the stage. Use values from <see cref="T:SlimDX.Direct3D9.TextureArgument" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureArgument" />.Current.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.AlphaArg1">
            <summary>
Texture-stage state is the first alpha argument for the stage. Use values from <see cref="T:SlimDX.Direct3D9.TextureArgument" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureArgument" />.Texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.AlphaOperation">
            <summary>
Texture-stage state is a texture alpha blending operation. Use values from <see cref="T:SlimDX.Direct3D9.TextureOperation" />
to set this state. The default value for the first stage is <see cref="T:SlimDX.Direct3D9.TextureOperation" />.SelectArg1;
for all other stages the default is <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Disable"/&gt;.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.ColorArg2">
            <summary>
Texture-stage state is the second color argument for the stage. Use values from <see cref="T:SlimDX.Direct3D9.TextureArgument" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureArgument" />.Current.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.ColorArg1">
            <summary>
Texture-stage state is the first color argument for the stage. Use values from <see cref="T:SlimDX.Direct3D9.TextureArgument" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureArgument" />.Texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureStage.ColorOperation">
            <summary>
Texture-stage state is a texture color blending operation. Use values from <see cref="T:SlimDX.Direct3D9.TextureOperation" />
to set this state. The default value for the first stage is <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Modulate;
for all other stages the default is <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Disable.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureOperationCaps">
            <summary>
Specifies the texture operations supported by the device.
</summary>
            <unmanaged>D3DTEXOPCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.Lerp">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Lerp.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.MultiplyAdd">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.MultiplyAdd.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.DotProduct3">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.DotProduct3.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.BumpEnvironmentMapLuminance">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.BumpEnvironmentMapLuminance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.BumpEnvironmentMap">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.BumpEnvironmentMap.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.ModulateInvColorAddAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.ModulateInvColorAddAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.ModulateInvAlphaAddColor">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.ModulateInvAlphaAddColor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.ModulateColorAddAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.ModulateColorAddAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.ModulateAlphaAddColor">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.ModulateAlphaAddColor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.Premodulate">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Premodulate.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.BlendCurrentAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.BlendCurrentAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.BlendTextureAlphaPM">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.BlendTextureAlphaPM.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.BlendFactorAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.BlendFactorAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.BlendTextureAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.BlendTextureAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.BlendDiffuseAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.BlendDiffuseAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.AddSmooth">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.AddSmooth.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.Subtract">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Subtract.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.AddSigned2X">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.AddSigned2X.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.AddSigned">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.AddSigned.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.Add">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Add.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.Modulate4X">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Modulate4X.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.Modulate2X">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Modulate2X.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.Modulate">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Modulate.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.SelectArg2">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.SelectArg2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.SelectArg1">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.SelectArg1.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperationCaps.Disable">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureOperation" />.Disable.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureOperation">
            <summary>
Defines per-stage texture blending operations.
</summary>
            <unmanaged>D3DTEXTUREOP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.Lerp">
            <summary>
Linearly interpolates between the second and third source arguments by a proportion specified 
in the first source argument. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.MultiplyAdd">
            <summary>
Performs a multiply-accumulate operation. It takes the last two arguments, multiplies them 
together, and adds them to the remaining input/source argument, and places that into the result. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.DotProduct3">
            <summary>
Modulate the components of each argument as signed components, add their products; then 
replicate the sum to all color channels, including alpha. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.BumpEnvironmentMapLuminance">
            <summary>
Perform per-pixel bump mapping, using the environment map in the next stage, with luminance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.BumpEnvironmentMap">
            <summary>
Perform per-pixel bump mapping, using the environment map in the next stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.ModulateInvColorAddAlpha">
            <summary>
Modulate the arguments, inverting the first argument, then add the alpha of the first argument.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.ModulateInvAlphaAddColor">
            <summary>
Modulate the color of the second argument, using the inverted alpha from the first argument, and then
add the result to argument one.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.ModulateColorAddAlpha">
            <summary>
Modulate the arguments, then add the alpha of the first argument.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.ModulateAlphaAddColor">
            <summary>
Modulate the color of the second argument, using the alpha from the first argument, and then
add the result to argument one.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.Premodulate">
            <summary>
Premodulate the arguments with the next stage's values.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.BlendCurrentAlpha">
            <summary>
Linearly blend the current stage, using the alpha from the previous stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.BlendTextureAlphaPM">
            <summary>
Linearly blend the current stage, using a premultiplied alpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.BlendFactorAlpha">
            <summary>
Linearly blend the current stage, using the current texture factor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.BlendTextureAlpha">
            <summary>
Linearly blend the current stage, using the alpha from the stage's texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.BlendDiffuseAlpha">
            <summary>
Linearly blend the current stage, using the interpolated alpha from each vertex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.AddSmooth">
            <summary>
Add the first and second arguments, and then subtract their product from the sum.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.Subtract">
            <summary>
Subtract the components of the second argument from the components of the first argument.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.AddSigned2X">
            <summary>
Add the components of the arguments with a -0.5 bias, and then multiply them by 2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.AddSigned">
            <summary>
Add the components of the arguments with a -0.5 bias.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.Add">
            <summary>
Add the components of the arguments.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.Modulate4X">
            <summary>
Multiply the components of the arguments, and then multiply them by 2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.Modulate2X">
            <summary>
Multiply the components of the arguments, and then multiply them by 2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.Modulate">
            <summary>
Multiply the components of the arguments.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.SelectArg2">
            <summary>
Use the current stage's second color or alpha argument, unmodified, as the output.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.SelectArg1">
            <summary>
Use the current stage's first color or alpha argument, unmodified, as the output.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureOperation.Disable">
            <summary>
Disabled output from the current stage and all higher stages.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureCoordIndex">
            <summary>
Driver texture coordinate capability flags.
</summary>
            <unmanaged>D3DTSS_TCI</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCoordIndex.SphereMap">
            <summary>
Use the specified coordinates for sphere mapping.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCoordIndex.CameraSpaceReflectionVector">
            <summary>
Use the reflection vector, transformed to camera space, as the input texture coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCoordIndex.CameraSpacePosition">
            <summary>
Use the vertex position, transformed to camera space, as the input texture coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCoordIndex.CameraSpaceNormal">
            <summary>
Use the vertex normal, transformed to camera space, as the input texture coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCoordIndex.PassThru">
            <summary>
Use the specified texture coordinates contained in the vertex format.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureCaps">
            <summary>
Specifies miscellaneous texture mapping capabilities supported by the device.
</summary>
            <unmanaged>D3DPTEXTURECAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.NoProjectedBumpEnvironment">
            <summary>
Specifies that the device does not support a projected bump environment lookup operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.VolumeMapPow2">
            <summary>
Specifies whether volume textures must have powers of 2 sizes.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.CubeMapPow2">
            <summary>
Specifies whether cube maps must have powers of 2 sizes.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.MipCubeMap">
            <summary>
Device supports mipmaps for cube textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.MipVolumeMap">
            <summary>
Device supports mipmaps for volume textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.MipMap">
            <summary>
Device supports mipmaps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.VolumeMap">
            <summary>
Supports volume textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.CubeMap">
            <summary>
Supports cube map textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.Projected">
            <summary>
The device supports the <see cref="T:SlimDX.Direct3D9.TextureTransform" />.Projected texture transformation flag.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.NonPow2Conditional">
            <summary>
Determines whether power of 2 texture sizes are required by the device.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.AlphaPalette">
            <summary>
Device can draw alpha from texture palettes.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.TextureRepeatNotScaledBySize">
            <summary>
Texture indices are not scaled by their size prior to rendering.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.SquareOnly">
            <summary>
Specifies that all textures must be square.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.Alpha">
            <summary>
Alpha in texture pixels is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.Pow2">
            <summary>
Specifies that the device requires power of 2 texture sizes.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureCaps.Perspective">
            <summary>
Perspective correction is supported.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureArgument">
            <summary>
Specifies possible texture arguments.
</summary>
            <unmanaged>D3DTA</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.AlphaReplicate">
            <summary>
Replicate the alpha information to all channels before the method completes.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.Complement">
            <summary>
Specifies that the function should take the complement of the argument.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.Constant">
            <summary>
Selects a constant from a texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.Temp">
            <summary>
The texture argument is a temporary color register.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.Specular">
            <summary>
The texture argument is the specular color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.TFactor">
            <summary>
The texture argument is the texture factor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.Texture">
            <summary>
The texture argument is the texture color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.Current">
            <summary>
The texture argument is the result of the previous blending stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.Diffuse">
            <summary>
The texture argument is the diffuse color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureArgument.SelectMask">
            <summary>
Mask value for all arguments.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureAddressCaps">
            <summary>
Specifies the set of texture addressing modes supported by the device.
</summary>
            <unmanaged>D3DPTADDRESSCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddressCaps.MirrorOnce">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureAddress" />.MirrorOnce.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddressCaps.IndependentUV">
            <summary>
The device can separate the texture-addressing modes of the u and v coordinates of the texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddressCaps.Border">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureAddress" />.Border.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddressCaps.Clamp">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureAddress" />.Clamp.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddressCaps.Mirror">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureAddress" />.Mirror.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddressCaps.Wrap">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.TextureAddress" />.Wrap.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.StreamFrequency">
            <summary>
Specifies possible stream frequencies.
</summary>
            <unmanaged>D3DSTREAMSOURCE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.StreamFrequency.InstanceData">
            <summary>
The stream uses instance data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StreamFrequency.IndexedData">
            <summary>
The stream uses indexed data.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.StencilCaps">
            <summary>
Defines a set of stencil operations supported by a device.
</summary>
            <unmanaged>D3DSTENCILCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.TwoSided">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.TwoSided.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.Decrement">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Decrement.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.Increment">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Increment.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.Invert">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Invert.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.DecrementClamp">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.DecrementClamp.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.IncrementClamp">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.IncrementClamp.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.Replace">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Replace.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.Zero">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Zero.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilCaps.Keep">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Keep.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.StateBlockType">
            <summary>
Predefined sets of pipeline states used by state blocks.
</summary>
            <unmanaged>D3DSTATEBLOCKTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.StateBlockType.VertexState">
            <summary>
Capture the current vertex state.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StateBlockType.PixelState">
            <summary>
Capture the current pixel state.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StateBlockType.All">
            <summary>
Capture the current device state.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ScanlineOrdering">
            <summary>
Flags indicating the method the rasterizer uses to create an image on a surface.
</summary>
            <unmanaged>D3DSCANLINEORDERING</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ScanlineOrdering.Interlaced">
            <summary>
Every other line is interlaced with the previous one to build the final image.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ScanlineOrdering.Progressive">
            <summary>
All scanlines are used to build the final image.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ShadeCaps">
            <summary>
Specifies the shading operations that a device supports.
</summary>
            <unmanaged>D3DPSHADECAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ShadeCaps.FogGouraud">
            <summary>
Device supports Gouraud fog.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShadeCaps.AlphaGouraudBlend">
            <summary>
Device supports Gouraud-blended transparency.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShadeCaps.SpecularGouraudRgb">
            <summary>
Device supports Gouraud shading of specular highlights.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShadeCaps.ColorGouraudRgb">
            <summary>
Device supports colored Gouraud shading.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.SamplerState">
            <summary>
Sampler states define texture sampling operations such as texture addressing and texture filtering. 
Some sampler states set-up vertex processing, and some set-up pixel processing. Sampler states can 
be saved and restored using stateblocks 
</summary>
            <unmanaged>D3DSAMPLERSTATETYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.DisplacementMapOffset">
            <summary>
An integer value that specifies the vertex offset into a presampled displacement map. The default value is 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.ElementIndex">
            <summary>
An integer value that specifies which element of a multielement texture to use. The default value is 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.SrgbTexture">
            <summary>
An integer value that specifies sRGB gamma correction. The default value is 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.MaxAnisotropy">
            <summary>
An integer value that specifies the maximum anisotropy level. The default value is 1.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.MaxMipLevel">
            <summary>
An integer value that specifies the maximum mipmap level. The default value is 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.MipMapLodBias">
            <summary>
An integer value that specifies the level-of-detail bias. The default value is 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.MipFilter">
            <summary>
Specifies the mipmap filter. Use values from <see cref="T:SlimDX.Direct3D9.TextureFilter" /> to set this
state. The default value is <see cref="T:SlimDX.Direct3D9.TextureFilter" />.Point.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.MinFilter">
            <summary>
Specifies the minification filter. Use values from <see cref="T:SlimDX.Direct3D9.TextureFilter" /> to set this
state. The default value is <see cref="T:SlimDX.Direct3D9.TextureFilter" />.Point.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.MagFilter">
            <summary>
Specifies the magnification filter. Use values from <see cref="T:SlimDX.Direct3D9.TextureFilter" /> to set this
state. The default value is <see cref="T:SlimDX.Direct3D9.TextureFilter" />.Point.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.BorderColor">
            <summary>
Specifies the texture border color. Use packed integer color values to set this state.
The default value is 0 (black).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.AddressW">
            <summary>
Specifies the texture address mode for the W coordinate. Use values from <see cref="T:SlimDX.Direct3D9.TextureAddress" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureAddress" />.Wrap.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.AddressV">
            <summary>
Specifies the texture address mode for the V coordinate. Use values from <see cref="T:SlimDX.Direct3D9.TextureAddress" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureAddress" />.Wrap.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SamplerState.AddressU">
            <summary>
Specifies the texture address mode for the U coordinate. Use values from <see cref="T:SlimDX.Direct3D9.TextureAddress" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.TextureAddress" />.Wrap.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ResourceType">
            <summary>
Defines resource types.
</summary>
            <unmanaged>D3DRESOURCETYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ResourceType.IndexBuffer">
            <summary>
Index buffer resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ResourceType.VertexBuffer">
            <summary>
Vertex buffer resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ResourceType.CubeTexture">
            <summary>
Cube texture resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ResourceType.VolumeTexture">
            <summary>
Volume texture resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ResourceType.Texture">
            <summary>
Texture resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ResourceType.Volume">
            <summary>
Volume resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ResourceType.Surface">
            <summary>
Surface resource.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.RenderState">
            <summary>
Render states define set-up states for all kinds of vertex and pixel processing. 
Some render states set up vertex processing, and some set up pixel processing.
Render states can be saved and restored using stateblocks.
</summary>
            <unmanaged>D3DRENDERSTATETYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.BlendOperationAlpha">
            <summary>
Specifies the operation to perform for separate alpha blending. Use values from <see cref="F:SlimDX.Direct3D9.RenderState.BlendOperation" />
to set this state. The default value is <see cref="F:SlimDX.Direct3D9.RenderState.BlendOperation" />.Add.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.DestinationBlendAlpha">
            <summary>
Specifies the destination alpha blending function. Use values from <see cref="T:SlimDX.Direct3D9.Blend" /> to set this state.
The default value is <see cref="T:SlimDX.Direct3D9.Blend" />.Zero.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.SourceBlendAlpha">
            <summary>
Specifies the source alpha blending function. Use values from <see cref="T:SlimDX.Direct3D9.Blend" /> to set this state.
The default value is <see cref="T:SlimDX.Direct3D9.Blend" />.One.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.SeparateAlphaBlendEnable">
            <summary>
Set this state to <c>true</c> to enable separate blending modes for the alpha channel, and <c>false</c>
to disable them. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.DepthBias">
            <summary>
A floating point value that is used for comparison of depth values.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.SrgbWriteEnable">
            <summary>
Set this state to <c>true</c> to enable sRGB gamma correction, and <c>false</c>
to disable it. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.BlendFactor">
            <summary>
Specifies a color to use as a constant blend factor for alpha blending. Use integer color values 
to set this state. The default value is 0xFFFFFFFF (white).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable3">
            <summary>
Specifies additional color write enable settings for the device. Use values from <see cref="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable" />
to set this state. The default value is <see cref="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable" />.All".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable2">
            <summary>
Specifies additional color write enable settings for the device. Use values from <see cref="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable" />
to set this state. The default value is <see cref="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable" />.All".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable1">
            <summary>
Specifies additional color write enable settings for the device. Use values from <see cref="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable" />
to set this state. The default value is <see cref="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable" />.All".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.CcwStencilFunc">
            <summary>
Specifies the comparison function for stencil tests.. Use values from
<see cref="T:SlimDX.Direct3D9.Compare" /> to set the state. The default value is <see cref="T:SlimDX.Direct3D9.Compare" />.Always".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.CcwStencilPass">
            <summary>
Specifies the operation to perform if both the stencil and depth tests pass. Use values from
<see cref="T:SlimDX.Direct3D9.StencilOperation" /> to set the state. The default value is <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Keep".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.CcwStencilZFail">
            <summary>
Specifies the operation to perform if the stencil test passes and depth test fails. Use values from
<see cref="T:SlimDX.Direct3D9.StencilOperation" /> to set the state. The default value is <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Keep".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.CcwStencilFail">
            <summary>
Specifies the operation to perform if the stencil test fails. Use values from
<see cref="T:SlimDX.Direct3D9.StencilOperation" /> to set the state. The default value is <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Keep".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.TwoSidedStencilMode">
            <summary>
Set this state to <c>true</c> to enable two sided stenciling, and <c>false</c>
to disable it. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.EnableAdaptiveTessellation">
            <summary>
Set this state to <c>true</c> to enable adaptive tessellation, and <c>false</c>
to disable it. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AdaptiveTessW">
            <summary>
A floating point value that specifies the amount to adaptively tessellate, in the W direction.
The default value is 1.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AdaptiveTessZ">
            <summary>
A floating point value that specifies the amount to adaptively tessellate, in the Z direction.
The default value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AdaptiveTessY">
            <summary>
A floating point value that specifies the amount to adaptively tessellate, in the Y direction.
The default value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AdaptiveTessX">
            <summary>
A floating point value that specifies the amount to adaptively tessellate, in the X direction.
The default value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.MaxTessellationLevel">
            <summary>
A floating point value that specifies the maximum tessellation level. The default value is 1.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.MinTessellationLevel">
            <summary>
A floating point value that specifies the minium tessellation level. The default value is 1.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AntialiasedLineEnable">
            <summary>
Set this state to <c>true</c> to enable antialiased lines, and <c>false</c>
to disable them. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.SlopeScaleDepthBias">
            <summary>
An integer value that specifies how much bias can be applied to co-planar primitives to reduce
Z-fighting. The default value is 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ScissorTestEnable">
            <summary>
Set this state to <c>true</c> to enable scissor testing, and <c>false</c>
to disable it. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.NormalDegree">
            <summary>
Specifies the N-patch normal interpolation degree. Use values from <see cref="T:SlimDX.Direct3D9.Degree" /> to
set this state. The default value is <see cref="T:SlimDX.Direct3D9.Degree" />.Linear".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PositionDegree">
            <summary>
Specifies the N-patch position interpolation degree. Use values from <see cref="T:SlimDX.Direct3D9.Degree" /> to
set this state. The default value is <see cref="T:SlimDX.Direct3D9.Degree" />.Cubic".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.BlendOperation">
            <summary>
Specifies the blending operation to use when alpha blending is enabled. Use values from
<see cref="F:SlimDX.Direct3D9.RenderState.BlendOperation" /> to set this state. The default value is <see cref="F:SlimDX.Direct3D9.RenderState.BlendOperation" />.Add".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.TweenFactor">
            <summary>
A floating point value that specifies the tweening factor. The default value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable">
            <summary>
Specifies the current color write state of the device. Use values from <see cref="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable" />
to set this state. The default value is <see cref="F:SlimDX.Direct3D9.RenderState.ColorWriteEnable" />.All".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.IndexedVertexBlendEnable">
            <summary>
Set this state to <c>true</c> to enable indexed vertex blending, and <c>false</c>
to disable it. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PointSizeMax">
            <summary>
A floating point value that specifies the maximum size of point primitives.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.DebugMonitorToken">
            <summary>
Specifies the current debug monitor token. Use values from <see cref="F:SlimDX.Direct3D9.RenderState.DebugMonitorToken" /> to
set this state. The default value is <see cref="F:SlimDX.Direct3D9.RenderState.DebugMonitorToken" />.Enable".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PatchEdgeStyle">
            <summary>
Specifies the current patch edge style. Use values from <see cref="F:SlimDX.Direct3D9.RenderState.PatchEdgeStyle" /> to
set this state. The default value is <see cref="F:SlimDX.Direct3D9.RenderState.PatchEdgeStyle" />.Discrete".
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.MultisampleMask">
            <summary>
An integer mask that controls the samples in a multisampling render target.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.MultisampleAntialias">
            <summary>
Set this state to <c>true</c> to enable point multisampling, and <c>false</c>
to disable it. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PointScaleC">
            <summary>
A floating point value that specifies attenuation when point scaling is applied. The default
value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PointScaleB">
            <summary>
A floating point value that specifies attenuation when point scaling is applied. The default
value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PointScaleA">
            <summary>
A floating point value that specifies attenuation when point scaling is applied. The default
value is 1.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PointScaleEnable">
            <summary>
Set this state to <c>true</c> to enable point scaling, and <c>false</c>
to disable it. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PointSpriteEnable">
            <summary>
Set this state to <c>true</c> to enable point sprites, and <c>false</c>
to disable them. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PointSizeMin">
            <summary>
A floating point value that specifies the minimum size of point primitives.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.PointSize">
            <summary>
A floating point value that specifies the size of points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ClipPlaneEnable">
            <summary>
An integer value that specifies which user-defined clip planes are active. Use
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.VertexBlend">
            <summary>
An integer value that specifies the number of matrices to use to perform geometry blending.
Use values from <see cref="F:SlimDX.Direct3D9.RenderState.VertexBlend" /> to set this state. The default value is
<see cref="T:SlimDX.Direct3D9.VertexBlend" />.Disable.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.EmissiveMaterialSource">
            <summary>
Specifies the source for emissive colors. Use values from <see cref="T:SlimDX.Direct3D9.ColorSource" /> to set
this state. The default value is <see cref="T:SlimDX.Direct3D9.ColorSource" />.Material.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AmbientMaterialSource">
            <summary>
Specifies the source for ambient colors. Use values from <see cref="T:SlimDX.Direct3D9.ColorSource" /> to set
this state. The default value is <see cref="T:SlimDX.Direct3D9.ColorSource" />.Material.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.SpecularMaterialSource">
            <summary>
Specifies the source for specular colors. Use values from <see cref="T:SlimDX.Direct3D9.ColorSource" /> to set
this state. The default value is <see cref="T:SlimDX.Direct3D9.ColorSource" />.Color2.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.DiffuseMaterialSource">
            <summary>
Specifies the source for diffuse colors. Use values from <see cref="T:SlimDX.Direct3D9.ColorSource" /> to set
this state. The default value is <see cref="T:SlimDX.Direct3D9.ColorSource" />.Color1.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.NormalizeNormals">
            <summary>
Set this state to <c>true</c> to enable automatic normalization of vertex normals, and <c>false</c>
to disable it. The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.LocalViewer">
            <summary>
Set this state to <c>true</c> to enable camera-relative specular highlights, and <c>false</c>
to use orthogonal specular highlights. The default value is <c>true</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ColorVertex">
            <summary>
Set this state to <c>true</c> to enable colored vertices, and <c>false</c>
to disable them. The default value is <c>true</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.FogVertexMode">
            <summary>
Specifies the current fog formula to be used for vertex fog. Use values from <see cref="T:SlimDX.Direct3D9.FogMode" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.FogMode" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Ambient">
            <summary>
Specifies the ambient light color. Use integer color values to set this state. The default value 
is 0 (black).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Lighting">
            <summary>
Set this state to <c>true</c> to enable lighting, and <c>false</c>
to disable it. The default value is <c>true</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Clipping">
            <summary>
Set this state to <c>true</c> to enable primitive clipping, and <c>false</c>
to disable it. The default value is <c>true</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap15">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap14">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap13">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap12">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap11">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap10">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap9">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap8">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap7">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap6">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap5">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap4">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap3">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap2">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap1">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.Wrap0">
            <summary>
Texture wrapping behavior for multiple sets of texture coordinates. Use values from
<see cref="T:SlimDX.Direct3D9.TextureWrapping" /> to set this state. The default value for this state is <see cref="T:SlimDX.Direct3D9.TextureWrapping" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.TextureFactor">
            <summary>
Specifies the color used for multiple texture blending. Use integer color values to set this 
state. The default value is 0xFFFFFFFF (white).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.StencilWriteMask">
            <summary>
An integer value that specifies the write mask used for values written into the stencil buffer.
The default value is 0xFFFFFFFF.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.StencilMask">
            <summary>
An integer value that specifies the mask for stencil values. The default value is 0xFFFFFFFF.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.StencilRef">
            <summary>
An integer value that specifies the reference value against which pixels are tested when
stencil testing is enabled. The default value is 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.StencilFunc">
            <summary>
Specifies the comparison function for stencil tests. Use values from <see cref="T:SlimDX.Direct3D9.Compare" /> 
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.Compare" />.Always.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.StencilPass">
            <summary>
Specifies the stencil operation to perform if both the stencil and depth tests pass. Use values from 
<see cref="T:SlimDX.Direct3D9.StencilOperation" /> to set this state. The default value is <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Keep.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.StencilZFail">
            <summary>
Specifies the stencil operation to perform if the stencil test passes and the depth test fails. 
Use values from <see cref="T:SlimDX.Direct3D9.StencilOperation" /> to set this state. The default value is 
<see cref="T:SlimDX.Direct3D9.StencilOperation" />.Keep.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.StencilFail">
            <summary>
Specifies the stencil operation to perform if the stencil test fails. Use values from 
<see cref="T:SlimDX.Direct3D9.StencilOperation" /> to set this state. The default value is <see cref="T:SlimDX.Direct3D9.StencilOperation" />.Keep.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.StencilEnable">
            <summary>
Set this state to <c>true</c> to enable stenciling, and <c>false</c> to disable it. 
The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.RangeFogEnable">
            <summary>
Set this state to <c>true</c> to enable range based fog, and <c>false</c> to use depth based fog. 
The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.FogDensity">
            <summary>
A floating point value that defines the density of fog used in exponential fog modes.
The default value is 1.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.FogEnd">
            <summary>
A floating point value that defines the depth at which pixel or vertex fog effects end.
The default value is 1.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.FogStart">
            <summary>
A floating point value that defines the depth at which pixel or vertex fog effects begin.
The default value is 0.0f.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.FogTableMode">
            <summary>
Specifies the current fog formula to be used for pixel fog. Use values from <see cref="T:SlimDX.Direct3D9.FogMode" />
to set this state. The default value is <see cref="T:SlimDX.Direct3D9.FogMode" />.None.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.FogColor">
            <summary>
Specifies current fog color. Use integer color values to set this state. The default value is
0 (black).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.SpecularEnable">
            <summary>
Set this state to <c>true</c> to enable specular highlights, and <c>false</c> to disable them. 
The default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.FogEnable">
            <summary>
Set this state to <c>true</c> to enable fog blending, and <c>false</c> to disable it. The default
value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AlphaBlendEnable">
            <summary>
Set this state to <c>true</c> to enable alpha blending, and <c>false</c> to disable it. The default
value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.DitherEnable">
            <summary>
Set this state to <c>true</c> to enable dithering, and <c>false</c> to disable it. The default
value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AlphaFunc">
            <summary>
Specifies the current alpha testing function. Use values from <see cref="T:SlimDX.Direct3D9.Compare" /> to
set this state. The default value is <see cref="T:SlimDX.Direct3D9.Compare" />.Always.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AlphaRef">
            <summary>
An integer value that specifies the reference alpha against which pixels are tested when
alpha blending is enabled. The default value is 0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ZFunc">
            <summary>
Specifies the current depth testing function. Use values from <see cref="T:SlimDX.Direct3D9.Compare" /> to
set this state. The default value is <see cref="T:SlimDX.Direct3D9.Compare" />.LessEqual.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.CullMode">
            <summary>
Specifies how back-facing triangles are culled. Use values from <see cref="T:SlimDX.Direct3D9.Cull" /> to
set this state. The default value is <see cref="T:SlimDX.Direct3D9.Cull" />.Counterclockwise.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.DestinationBlend">
            <summary>
Defines the current destination blending mode of the device. Use values from <see cref="T:SlimDX.Direct3D9.Blend" /> to
set this state. The default value is <see cref="T:SlimDX.Direct3D9.Blend" />.Zero.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.SourceBlend">
            <summary>
Defines the current source blending mode of the device. Use values from <see cref="T:SlimDX.Direct3D9.Blend" /> to
set this state. The default value is <see cref="T:SlimDX.Direct3D9.Blend" />.One.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.LastPixel">
            <summary>
Set this state to <c>true</c> to enable drawing of the last pixel in a line, and <c>false</c>
to disable it. The default value is <c>true</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.AlphaTestEnable">
            <summary>
Set this state to <c>true</c> to enable alpha testing, and <c>false</c> to disable it. The
default value is <c>false</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ZWriteEnable">
            <summary>
Set this state to <c>true</c> to enable writes to the depth buffer, and <c>false</c> to disable
them. The default value is <c>true</c>.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ShadeMode">
            <summary>
Defines the current shade mode of the device. Use values from <see cref="T:SlimDX.Direct3D9.ShadeMode" /> to set this state.
The default value is <see cref="T:SlimDX.Direct3D9.ShadeMode" />.Gouraud.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.FillMode">
            <summary>
Defines the current fill mode of the device. Use values from <see cref="F:SlimDX.Direct3D9.RenderState.FillMode" /> to set this state.
The default value is <see cref="T:SlimDX.Direct3D9.FillMode" />.Solid.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RenderState.ZEnable">
            <summary>
Depth-buffering state. Use values from <see cref="T:SlimDX.Direct3D9.ZBufferType" /> to set this state. The
default value for this state is <see cref="T:SlimDX.Direct3D9.ZBufferType" />.UseZBuffer if a depth stencil was created
along with the device, or <see cref="T:SlimDX.Direct3D9.ZBufferType" />.DontUseZBuffer otherwise.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.RasterCaps">
            <summary>
Specifies information about raster capabilities of the device.
</summary>
            <unmanaged>D3DPRASTERCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.MultisampleToggle">
            <summary>
Device supports toggling multisampling on and off.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.DepthBias">
            <summary>
Device supports legacy depth bias.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.SlopeScaleDepthBias">
            <summary>
Device performs true slope-scale depth bias.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.ScissorTest">
            <summary>
Device supports scissor testing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.ColorPerspective">
            <summary>
Device iterates colors perspective correctly.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.ZFog">
            <summary>
Device supports z-based fog.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.WFog">
            <summary>
Device supports w-based fog.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.WBuffer">
            <summary>
Device supports depth buffering using w.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.Anisotropy">
            <summary>
Device supports anisotropic filtering.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.FogRange">
            <summary>
Device supports range-based fog.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.ZBufferLessHsr">
            <summary>
Device can perform hidden surface removal (HSR) without requiring the application to
sort polygons and without requiring the allocation of a depth buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.MipMapLodBias">
            <summary>
Device supports level-of-detail bias adjustments.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.FogTable">
            <summary>
Device calculates the fog value by referring to a lookup table.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.FogVertex">
            <summary>
Device calculates the fog value during the lighting operation and interpolates the value during rasterization.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.DepthTest">
            <summary>
Device can perform Z-test operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RasterCaps.Dither">
            <summary>
Device can dither to improve color resolution.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.R2VBSampler">
            <summary>
Specifies sampler values for Render-To-Vertex-Buffer (R2VB).
</summary>
            <unmanaged>R2VB_VSMP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.R2VBSampler.Count">
            <summary>
Number of available texture samplers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.R2VBSampler.OverrideVtx3">
            <summary>
Override the stream with vertex texture 3 sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.R2VBSampler.OverrideVtx2">
            <summary>
Override the stream with vertex texture 2 sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.R2VBSampler.OverrideVtx1">
            <summary>
Override the stream with vertex texture 1 sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.R2VBSampler.OverrideVtx0">
            <summary>
Override the stream with vertex texture 0 sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.R2VBSampler.OverrideDMap">
            <summary>
Override the stream with displacement map sampler.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.QueryType">
            <summary>
Identifies possible query types.
</summary>
            <unmanaged>D3DQUERYTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.CacheUtilization">
            <summary>
Measure the cache hit-rate performance for textures and indexed vertices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.BandwidthTimings">
            <summary>
Query for bandwidth timings.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.PixelTimings">
            <summary>
Query for pixel shader timings.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.VertexTimings">
            <summary>
Query for vertex shader timings.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.InterfaceTimings">
            <summary>
Query for interface timings.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.PipelineTimings">
            <summary>
Query for pipeline timings.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.TimestampFreq">
            <summary>
Queries the device to see if timestamp frequencies can change mid-call.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.TimestampDisjoint">
            <summary>
Notifies the application that the timestamp frequency has changed.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.Timestamp">
            <summary>
Queryies the 64-bit timestamp.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.Occlusion">
            <summary>
Query for occluded pixels.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.Event">
            <summary>
Query for any and all asynchronous events that have been issued from API calls.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.VertexStats">
            <summary>
Query vertex statistics.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.ResourceManager">
            <summary>
Query the resource manager.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.QueryType.VCache">
            <summary>
Query for driver hints about data layout for vertex caching.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PrimitiveType">
            <summary>
Defines the primitives supported by Direct3D.
</summary>
            <unmanaged>D3DPRIMITIVETYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveType.TriangleFan">
            <summary>
Renders the vertices as a triangle fan.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveType.TriangleStrip">
            <summary>
Renders the vertices as a triangle strip.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveType.TriangleList">
            <summary>
Renders the vertices as a sequence of isolated triangles.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveType.LineStrip">
            <summary>
Renders the vertices as a single polyline.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveType.LineList">
            <summary>
Renders the vertices as a list of isolated line segments.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveType.PointList">
            <summary>
Renders the vertices as a collection of isolated points.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PrimitiveMiscCaps">
            <summary>
Specifies miscellaneous capabilities for primitive rendering supported by the device.
</summary>
            <unmanaged>D3DPMISCCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.FogVertexClamped">
            <summary>
Device clamps fog blend factor per vertex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.MrtPostPixelShaderBlending">
            <summary>
Device supports post pixel shader operations for multiple render targets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.MrtIndependentBitDepths">
            <summary>
Device supports different bit depths for multiple render targets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.SeparateAlphaBlend">
            <summary>
Device supports separate blend settings for the alpha channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.FogAndSpecularAlpha">
            <summary>
Device supports fog and specular alpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.PostBlendSrgbConvert">
            <summary>
Device supports conversion to sRGB after blending. Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.PerStageConstant">
            <summary>
Device supports per-stage constants.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.IndependentWriteMasks">
            <summary>
Device supports independent write masks for multiple render targets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.NullReference">
            <summary>
A reference device that does not render.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.BlendOperation">
            <summary>
Device supports alpha blending operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.TssArgTemp">
            <summary>
Device supports temporary texture arguments.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.ClipTLVertices">
            <summary>
Device clips post-transformed vertex primitives.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.ClipPlanesScaledPoints">
            <summary>
Device correctly clips scaled points of size greater than 1.0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.ColorWriteEnable">
            <summary>
Device supports per-channel writes of the color buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.CullCCW">
            <summary>
The driver supports counterclockwise culling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.CullCW">
            <summary>
The driver supports clockwise culling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.CullNone">
            <summary>
The driver does not perform triangle culling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PrimitiveMiscCaps.MaskZ">
            <summary>
Device can enabled and disable modification of the depth buffer on pixel operations.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PresentInterval">
            <summary>
Specifies presentation intervals.
</summary>
            <unmanaged>D3DPRESENT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentInterval.Four">
            <summary>
Present operations will not be affected more than four times every screen refresh.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentInterval.Three">
            <summary>
Present operations will not be affected more than three times every screen refresh.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentInterval.Two">
            <summary>
Present operations will not be affected more than twice every screen refresh.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentInterval.One">
            <summary>
The device will wait for the vertical retrace period.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentInterval.Immediate">
            <summary>
The device will present immediately without waiting for the refresh.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentInterval.Default">
            <summary>
The device will wait for the vertical retrace period.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PresentFlags">
            <summary>
Specifies possible presentation flags.
</summary>
            <unmanaged>D3DPRESENTFLAG</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.RestrictSharedResourceDriver">
            <summary>
Indicates that the driver should restrict access to any shared
resources that are created for DWM interaction. The caller must create an authenticated
channel with the driver. The driver should then allow access to processes that attempt to
open those shared resources. Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.RestrictedContent">
            <summary>
Indicates that the swapchain contains protected content and automatically causes
the runtime to restrict access to the swapchain so that only the Desktop Windows Manager
(DWM) can use the swapchain. Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.OverlayYCbCr_xvYCC">
            <summary>
Indicates that the overlay is extended YCbCr (xvYCC). Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.OverlayYCbCr_BT709">
            <summary>
Indicates that the overlay is BT.709, for high-definition TV (HDTV). Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.OverlayLimitedRgb">
            <summary>
Indicates limited range RGB. In limited range RGB, the RGB range is compressed such that
16:16:16 is black and 235:235:235 is white. Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.Video">
            <summary>
This is a hint to the driver that the back buffers will contain video data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.UnprunedMode">
            <summary>
Allows the device to use invalid display modes as if they were valid. Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.NoAutoRotate">
            <summary>
Specifies that the application will perform its own display rotation. Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.None">
            <summary>
No extra presentation flags specified.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.LockableBackBuffer">
            <summary>
Set when the application requires the ability to lock the back buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.DiscardDepthStencil">
            <summary>
Discards the contents of the depth/stencil surface after each presentation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PresentFlags.DeviceClip">
            <summary>
Clips the presentation to the device.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Present">
            <summary>
Defines flags for presentation calls.
</summary>
            <unmanaged>D3DPRESENT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.UpdateColorKey">
            <summary>
Redraws the colorkey data. Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.HideOverlay">
            <summary>
Turns off the overlay hardware. Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.UpdateOverlayOnly">
            <summary>
Updates the overlay position or the colorkey data without causing an actual flip and without
changing the duration with which the image is displayed. Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.ForceImmediate">
            <summary>
PresentInterval.Immediate is enforced on this Present call. This flag can only be specified when
using SwapEffect.FlipEx. Windowed and fullscreen presentation behaviors are the same. This is
especially useful for media apps that want to discard frames that have been detected as late and
present subsequent frames at composition time. An invalid parameter error will be returned if this
flag is improperly specified. When multiple consecutive frames with Present.ForceImmediate are
queued, only the last frame is displayed, for both windowed and fullscreen presentation.
Available in Direct3D9Ex on Windows 7 only
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.LinearContent">
            <summary>
The content of the backbuffer to be presented is in linear color space.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.VideoRestrictToMonitor">
            <summary>
Clips the rendered content to the monitor/device that the adapter is targetting. Available in
Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.FlipRestart">
            <summary>
The application will discard all previously queued frames and present the current frame next.
Available in Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.DoNotWait">
            <summary>
Specifies that the application should not wait for rendering to finish.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.DoNotFlip">
            <summary>
Use the front buffer as both the source and the target surface during rendering.
Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Present.None">
            <summary>
No extra presentation flags.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Precision">
            <summary>
Defines precision levels for font rendering.
</summary>
            <unmanaged href="cc215248">OutPrecision</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.PostScriptOnly">
            <summary>
PostScript only precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.ScreenOutline">
            <summary>
Screen outline precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.Outline">
            <summary>
Outline precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.TrueTypeOnly">
            <summary>
TrueType only precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.Raster">
            <summary>
Raster precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.Device">
            <summary>
Device precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.TrueType">
            <summary>
TrueType precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.Stroke">
            <summary>
Stroke-level precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.Character">
            <summary>
Character-level precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.String">
            <summary>
String-level precision.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Precision.Default">
            <summary>
Default precision.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Pool">
            <summary>
Defines the memory class that holds the buffers for a resource.
</summary>
            <unmanaged>D3DPOOL</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Pool.Scratch">
            <summary>
Resources are placed in scratch memory. These resources cannot be used as textures or render
targets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Pool.SystemMemory">
            <summary>
Resources are placed in system memory that is not accessable by the device. These resources
do not need to be recreated when the device is lost.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Pool.Managed">
            <summary>
Resources are copied automatically to device-accessable memory as needed. Managed resources are
backed by system memory and do not need to be recreated when the device is lost.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Pool.Default">
            <summary>
Resources are placed in the memory pool most appropriate for the set of usages requested for the resource.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PixelShaderCaps">
            <summary>
Specifies pixel shader capabilities supported by the device.
</summary>
            <unmanaged>D3DPS20CAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShaderCaps.NoTextureInstructionLimit">
            <summary>
There is no limit on the number of texture instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShaderCaps.NoDependentReadLimit">
            <summary>
There is no limit on the number of dependent reads.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShaderCaps.Predication">
            <summary>
Instruction predication is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShaderCaps.GradientInstructions">
            <summary>
Gradient instructions are supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShaderCaps.ArbitrarySwizzle">
            <summary>
Arbitrary swizzling is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PixelShaderCaps.None">
            <summary>
No extra pixel shader capabilities specified.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PitchAndFamily">
            <summary>
Defines pitch and family settings for fonts.
</summary>
            <unmanaged href="ms901140">(various font constants)</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Decorative">
            <summary>
Use the Decorative family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Script">
            <summary>
Use the Script family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Modern">
            <summary>
Use the Modern family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Swiss">
            <summary>
Use the Swiss family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Roman">
            <summary>
Use the Roman family.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.DontCare">
            <summary>
The font family doesn't matter.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Mono">
            <summary>
Mono pitch.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Variable">
            <summary>
Variable pitch.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Fixed">
            <summary>
Fixed pitch.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PitchAndFamily.Default">
            <summary>
Default pitch.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PatchEdgeStyle">
            <summary>
Defines whether the current tessellation mode is discrete or continuous.
</summary>
            <unmanaged>D3DPATCHEDGESTYLE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PatchEdgeStyle.Continuous">
            <summary>
Continuous edge style.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PatchEdgeStyle.Discrete">
            <summary>
Discrete edge style.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.MultisampleType">
            <summary>
Defines the levels of full-scene multisampling that the device can apply.
</summary>
            <unmanaged>D3DMULTISAMPLE_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.SixteenSamples">
            <summary>
Level of full-scene multisampling using 16 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.FifteenSamples">
            <summary>
Level of full-scene multisampling using 15 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.FourteenSamples">
            <summary>
Level of full-scene multisampling using 14 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.ThirteenSamples">
            <summary>
Level of full-scene multisampling using 13 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.TwelveSamples">
            <summary>
Level of full-scene multisampling using 12 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.ElevenSamples">
            <summary>
Level of full-scene multisampling using 11 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.TenSamples">
            <summary>
Level of full-scene multisampling using 10 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.NineSamples">
            <summary>
Level of full-scene multisampling using 9 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.EightSamples">
            <summary>
Level of full-scene multisampling using 8 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.SevenSamples">
            <summary>
Level of full-scene multisampling using 7 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.SixSamples">
            <summary>
Level of full-scene multisampling using 6 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.FiveSamples">
            <summary>
Level of full-scene multisampling using 5 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.FourSamples">
            <summary>
Level of full-scene multisampling using 4 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.ThreeSamples">
            <summary>
Level of full-scene multisampling using 3 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.TwoSamples">
            <summary>
Level of full-scene multisampling using 2 samples.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.NonMaskable">
            <summary>
Enables the multisampling quality value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MultisampleType.None">
            <summary>
No level of multisampling is available.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.LockFlags">
            <summary>
Defines flags for buffer locking.
</summary>
            <unmanaged>D3DLOCK</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.LockFlags.ReadOnly">
            <summary>
The application will not write to the buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LockFlags.NoSystemLock">
            <summary>
Prevents the allocation of a system wide resource lock.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LockFlags.NoOverwrite">
            <summary>
Indicates that the last set of data written will not be modified during this lock call.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LockFlags.None">
            <summary>
No locking flags specified.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LockFlags.NoDirtyUpdate">
            <summary>
Prevents any changes to the dirty state of the resource.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LockFlags.DoNotWait">
            <summary>
Allows the application to gain back CPU cycles if the driver cannot lock the surface immediately.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LockFlags.Discard">
            <summary>
The application discards all memory within the locked region.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.LineCaps">
            <summary>
Specifies the line drawing capabilities of a device.
</summary>
            <unmanaged>D3DLINECAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.LineCaps.Antialias">
            <summary>
Supports antialiasing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LineCaps.Fog">
            <summary>
Supports fog.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LineCaps.AlphaCompare">
            <summary>
Supports alpha test comparisons.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LineCaps.Blend">
            <summary>
Supports source-blending.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LineCaps.DepthTest">
            <summary>
Supports depth test.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LineCaps.Texture">
            <summary>
Supports texture-mapping.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.LightType">
            <summary>
Defines possible light types.
</summary>
            <unmanaged>D3DLIGHTTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.LightType.Directional">
            <summary>
Light is a directional light source. This is equivalent to using a point light source at an infinite distance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LightType.Spot">
            <summary>
Light is a spotlight source. Illumination is limited to a cone.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.LightType.Point">
            <summary>
Light is a point source. The light has a position in space and radiates in all directions.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Issue">
            <summary>
Defines constants for query issues.
</summary>
            <unmanaged>D3DISSUE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Issue.End">
            <summary>
End a query issue.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Issue.Begin">
            <summary>
Start a query issue.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Format">
            <summary>
Defines the various types of surface formats.
</summary>
            <unmanaged>D3DFORMAT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Unknown">
            <summary>
Unknown surface format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.ATI_R2VB">
            <summary>
Surface format for Render-To-Vertex-Buffer (R2VB).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.BinaryBuffer">
            <summary>
Binary buffer format indicating that the data has no inherent type. Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A1">
            <summary>
1-bit monochrome format. Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A4L4">
            <summary>
8-bit format using 4 bits each for alpha and luminance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A8L8">
            <summary>
16-bit format using 8 bits each for alpha and luminance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.L8">
            <summary>
8-bit luminance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.L16">
            <summary>
16-bit luminance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.P8">
            <summary>
8-bit color indexed.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A8P8">
            <summary>
8-bit color indexed with 8 bits of alpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A16B16G16R16">
            <summary>
64-bit pixel ABGR format using 16 bits for each channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.G16R16">
            <summary>
32-bit pixel format using 16 bits each for green and red.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.X8B8G8R8">
            <summary>
32-bit BGR format using 8 bits for each color channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A8B8G8R8">
            <summary>
32-bit ABGR format using 8 bits for each channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A2B10G10R10">
            <summary>
32-bit ABGR format using 2 bits for alpha and 10 bits for each color component.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.X4R4G4B4">
            <summary>
16-bit RGB format using 4 bits for each color channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A8R3G3B2">
            <summary>
16-bit ARGB format using 8 bits for alpha, 3 bits for red and green, and 2 bits for blue.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A8">
            <summary>
8-bit alpha format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.R3G3B2">
            <summary>
8-bit RGB format using 3 bits for red and green and 2 bits for blue.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A4R4G4B4">
            <summary>
16-bit ARGB format using 4 bits for each channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.R8G8B8">
            <summary>
24-bit RGB format using 8 bits per channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.CxV8U8">
            <summary>
16-bit normal compression format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Q16W16V16U16">
            <summary>
64-bit bump map format using 16 bits for each channel (Q, W, V, U).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.V16U16">
            <summary>
32-bit bump map format using 16 bits each for V and U.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Q8W8V8U8">
            <summary>
32-bit bump map format using 8 bits for each channel (Q, W, V, U).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.V8U8">
            <summary>
16-bit bump map format using 8 bits each for U and V.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A2W10V10U10">
            <summary>
32-bit bump map format using 2 bits for alpha and 10 bits each for W, V, and U.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.X8L8V8U8">
            <summary>
32-bit bump map format using 8 bits for each channel (luminance, V, U).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.L6V5U5">
            <summary>
16-bit bump map format using 6 bits for luminance and 5 bits each for V and U.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A32B32G32R32F">
            <summary>
128-bit floating point format using 32 bits for each channel (alpha, blue, green, red).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.G32R32F">
            <summary>
64-bit floating point format using 32 bits for the red channel and 32 bits for the green channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.R32F">
            <summary>
32-bit floating point format using 32 bits for the red channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Yuy2">
            <summary>
YUY2 format (PC98 compliance).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Uyvy">
            <summary>
UYUV format (PC98 compliance).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.R8G8_B8G8">
            <summary>
16-bit packed RGB format consisting of pixel pairs to express color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.G8R8_G8B8">
            <summary>
16-bit packed RGB format consisting of pixel pairs to express color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Multi2Argb8">
            <summary>
Multielement texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A16B16G16R16F">
            <summary>
64-bit floating point format using 16 bits for each channel (alpha, blue, green, red).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.G16R16F">
            <summary>
32-bit floating point format using 16 bits for the red channel and 16 bits for the green channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.R16F">
            <summary>
16-bit floating point format using 16 bits for the red channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Dxt5">
            <summary>
DXT5 compression texture format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Dxt4">
            <summary>
DXT4 compression texture format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Dxt3">
            <summary>
DXT3 compression texture format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Dxt2">
            <summary>
DXT2 compression texture format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Dxt1">
            <summary>
DXT1 compression texture format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Index32">
            <summary>
32-bit index buffer bit depth.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.Index16">
            <summary>
16-bit index buffer bit depth.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.VertexData">
            <summary>
Describes a vertex buffer surface.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D16">
            <summary>
16-bit z-buffer format with 16 bits for depth.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.S8Lockable">
            <summary>
Lockable 8-bit stencil buffer. Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D32Lockable">
            <summary>
Lockable 32-bit depth buffer. Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D24SingleS8">
            <summary>
32-bit z-buffer format with 24 bits for depth (in 24-bit floating point format) and 8 bits for stencil.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D32SingleLockable">
            <summary>
32-bit z-buffer lockable format with 32 bits for depth (in standard IEEE floating point format).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D24X4S4">
            <summary>
32-bit z-buffer format with 24 bits for depth and 4 bits for stencil.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D24X8">
            <summary>
32-bit z-buffer format with 24 bits for depth.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D24S8">
            <summary>
32-bit z-buffer format with 24 bits for depth and 8 bits for stencil.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D15S1">
            <summary>
16-bit z-buffer format with 15 bits for depth and 1 bit for stencil.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D32">
            <summary>
32-bit z-buffer format with 32 bits for depth.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.D16Lockable">
            <summary>
16-bit z-buffer lockable format with 16 bits for depth.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.R5G6B5">
            <summary>
16-bit surface format using 5 bits for red and blue and 6 bits for green.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.X1R5G5B5">
            <summary>
16-bit surface format using 5 bits for each color component (red, green, blue).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A1R5G5B5">
            <summary>
16-bit surface format using 1 bit for alpha and 5 bits for each channel (red, green, blue).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.X8R8G8B8">
            <summary>
32-bit surface format using 8 bits for each color component (red, green, blue).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A8R8G8B8">
            <summary>
32-bit surface format using 8 bits for each channel (alpha, red, green, blue). 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Format.A2R10G10B10">
            <summary>
32-bit surface format using 2 bits for alpha and 10 bits for color components (red, green, blue).
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.FontWeight">
            <summary>
Specifies weights for font rendering.
</summary>
            <unmanaged href="ms901140">FW</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.Black">
            <summary>
Use a black weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.Heavy">
            <summary>
Use a heavy weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.UltraBold">
            <summary>
Use an ultra bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.ExtraBold">
            <summary>
Use an extra bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.Bold">
            <summary>
Use a bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.DemiBold">
            <summary>
Use a demi-bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.SemiBold">
            <summary>
Use a semi-bold weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.Medium">
            <summary>
Use a medium weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.Regular">
            <summary>
Use a regular weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.Normal">
            <summary>
Use a normal weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.Light">
            <summary>
Make the font light.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.UltraLight">
            <summary>
Make the font ultra light.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.ExtraLight">
            <summary>
Make the font extra light.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.Thin">
            <summary>
Make the font thin.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontWeight.DoNotCare">
            <summary>
The font weight doesn't matter.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.FontQuality">
            <summary>
Specifies quality options for font rendering.
</summary>
            <unmanaged href="ms901140">QUALITY</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.FontQuality.ClearTypeNatural">
            <summary>
Clear type natural quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontQuality.ClearType">
            <summary>
Clear type quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontQuality.Antialiased">
            <summary>
Antialiased quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontQuality.NonAntialiased">
            <summary>
Non-antialiased quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontQuality.Proof">
            <summary>
Proof quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontQuality.Draft">
            <summary>
Draft quality.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FontQuality.Default">
            <summary>
Default quality levels.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.FogMode">
            <summary>
Device constants that describe the fog mode.
</summary>
            <unmanaged>D3DFOGMODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.FogMode.Linear">
            <summary>
Fog effect intesifies linearly between the start and end points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FogMode.ExponentialSquared">
            <summary>
Fog effect intesifies exponentially with the square of the distance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FogMode.Exponential">
            <summary>
Fog effect intensifies exponentially.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FogMode.None">
            <summary>
No fog effect.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.FilterCaps">
            <summary>
Defines the filter capabilities of the device.
</summary>
            <unmanaged>D3DPTFILTERCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MagGaussianQuad">
            <summary>
Device supports per-stage Gaussian quad filtering for magnifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MagPyramidalQuad">
            <summary>
Device supports per-stage pyramidal sample filtering for magnifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MagAnisotropic">
            <summary>
Device supports per-stage anisotropic filtering for magnifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MagLinear">
            <summary>
Device supports per-stage linaer filtering for magnifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MagPoint">
            <summary>
Device supports per-stage point-sample filtering for magnifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MipLinear">
            <summary>
Device supports per-stage linear filtering for mipmaps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MipPoint">
            <summary>
Device supports per-stage point-sample filtering for mipmaps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MinGaussianQuad">
            <summary>
Device supports per-stage Gaussian quad filtering for minifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MinPyramidalQuad">
            <summary>
Device supports per-stage pyramidal sample filtering for minifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MinAnisotropic">
            <summary>
Device supports per-stage anisotropic filtering for minifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MinLinear">
            <summary>
Device supports per-stage linear filtering for minifying textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FilterCaps.MinPoint">
            <summary>
Device supports per-stage point-sample filtering for minifying textures.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.FillMode">
            <summary>
Defines constants describing the fill mode.
</summary>
            <unmanaged>D3DFILLMODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.FillMode.Solid">
            <summary>
Fill solid.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FillMode.Wireframe">
            <summary>
Fill wireframe.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FillMode.Point">
            <summary>
Fill points.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DisplayRotation">
            <summary>
Specifies how the monitor being used to display a fullscreen application is rotated.
</summary>
            <unmanaged>D3DDISPLAYROTATION</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.DisplayRotation.Rotation270">
            <summary>
Display is rotated 270 degrees.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DisplayRotation.Rotation180">
            <summary>
Display is rotated 180 degrees.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DisplayRotation.Rotation90">
            <summary>
Display is rotated 90 degrees.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DisplayRotation.Identity">
            <summary>
Display is not rotated.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DriverLevel">
            <summary>
Specifies possible driver levels.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.DriverLevel.Direct3D9">
            <summary>
The driver supports at least Direct3D9.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DriverLevel.Direct3D8">
            <summary>
The driver supports at least Direct3D8.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DriverLevel.Direct3D7">
            <summary>
The driver supports at least Direct3D7.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DrawTextFormat">
            <summary>
Specifies formatting options for text rendering.
</summary>
            <unmanaged href="bb773199">DT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.RtlReading">
            <summary>
Rendering the text in right-to-left reading order.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.NoClip">
            <summary>
Don't clip the text.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.ExpandTabs">
            <summary>
Expand tab characters.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.SingleLine">
            <summary>
Force all text to a single line.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.WordBreak">
            <summary>
Allow word breaks.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.Bottom">
            <summary>
Align the text to the bottom.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.VerticalCenter">
            <summary>
Vertically align the text to the center.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.Right">
            <summary>
Align the text to the right.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.Center">
            <summary>
Align the text to the center.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.Left">
            <summary>
Align the text to the left.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DrawTextFormat.Top">
            <summary>
Align the text to the top.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DeviceType">
            <summary>Defines device types.</summary>
            <unmanaged>D3DDEVTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceType.Software">
            <summary>
A pluggable software renderer has been registered. Not supported by SlimDX.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceType.Reference">
            <summary>
Direct3D features are implemented in software.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceType.NullReference">
            <summary>
Initialize Direct3D on a computer that has neither hardware nor reference rasterization available.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceType.Hardware">
            <summary>
Hardware rasterization.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DeviceCaps">
            <summary>
Flags identifying the capabilities of the device.
</summary>
            <unmanaged href="bb172513">D3DDEVCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.NPatches">
            <summary>
Device supports N-patches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.RTPatchHandleZero">
            <summary>
The device does not require caching of any patch information.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.RTPatches">
            <summary>
Device supports rectangular and triangular patches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.QuinticRTPatches">
            <summary>
Device supports quintic bezier curves and b-splines.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.PureDevice">
            <summary>
Device can support rasterization, transform, lighting, and shading in hardware.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.HWRasterization">
            <summary>
Device has hardware acceleration for scene rasterization.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.CanBlitSysToNonLocal">
            <summary>
Device supports blits from system-memory textures to nonlocal video-memory textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.HWTransformAndLight">
            <summary>
Device can support hardware transformation and lighting.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.DrawPrimitives2Extended">
            <summary>
Device can support at least a DirectX 7-compliant driver.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.SeparateTextureMemory">
            <summary>
Device is texturing from separate memory pools.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.DrawPrimitives2">
            <summary>
Device can support at least a DirectX 5-compliant driver.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.TextureNonLocalVideoMemory">
            <summary>
Device can retrieve textures from non-local video memory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.CanRenderAfterFlip">
            <summary>
Device can queue rendering commands after a page flip.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.DrawPrimTLVertex">
            <summary>
Device exports a DrawPrimitive aware HAL.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.TextureVideoMemory">
            <summary>
Device can retrieve textures from video memory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.TextureSystemMemory">
            <summary>
Device can retrieve textures from system memory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.TLVertexVideoMemory">
            <summary>
Device can use buffers from video memory for transformed and lit vertices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.TLVertexSystemMemory">
            <summary>
Device can use buffers from system memory for transformed and lit vertices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.ExecuteVideoMemory">
            <summary>
Device can use execute buffers from video memory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps.ExecuteSystemMemory">
            <summary>
Device can use execute buffers from system memory.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DeviceCaps2">
            <summary>Driver capability flags.</summary>
            <unmanaged>D3DDEVCAPS2</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps2.VertexElementsCanShareStreamOffset">
            <summary>
Multiple vertex elements can share the same stream offset in a stream.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps2.PresampledMapNPatch">
            <summary>
Devices supports presampled displacement maps for N-patches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps2.CanStretchRectFromTextures">
            <summary>
Device supports texture stretching using a texture as the source.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps2.AdaptiveTessNPatch">
            <summary>
Device supports adaptive tessellation of N-patches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps2.AdaptiveTessRTPatch">
            <summary>
Device supports adaptive tessellation of RT-patches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps2.DMapNPatch">
            <summary>
Device supports displacement maps for N-patches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeviceCaps2.StreamOffset">
            <summary>
Device supports stream offsets.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Degree">
            <summary>Defines the degree of the variables in the equation that describes a curve.</summary>
            <unmanaged>D3DDEGREETYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Degree.Quintic">
            <summary>
Curve is described by variables of fourth order.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Degree.Cubic">
            <summary>
Curve is described by variables of third order.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Degree.Quadratic">
            <summary>
Curve is described by variables of second order.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Degree.Linear">
            <summary>
Curve is described by variables of first order.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DeclarationUsage">
            <summary>Identifies the intended use of vertex data.</summary>
            <unmanaged>D3DDECLUSAGE</unmanaged>
        </member>
        <member name="F:&lt;unknown type&gt;.Sample">
            <summary>
Vertex data contains sampler data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Depth">
            <summary>
Vertex data contains depth data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Fog">
            <summary>
Vertex data contains fog data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.PositionTransformed">
            <summary>
Vertex data contains transformed position data ranging from (0, 0) to (viewport width, viewport height).
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.TessellateFactor">
            <summary>
Single positive floating point value.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Binormal">
            <summary>
Vertex binormal data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Tangent">
            <summary>
Vertex tangent data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.TextureCoordinate">
            <summary>
Texture coordinate data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.PointSize">
            <summary>
Point size data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Normal">
            <summary>
Vertex normal data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.BlendIndices">
            <summary>
Blending indices data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.BlendWeight">
            <summary>
Blending weight data.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Position">
            <summary>
Position data ranging from (-1, -1) to (1, 1).
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DeclarationTypeCaps">
            <summary>
Specifies the declaration types supported by the device.
</summary>
            <unmanaged>D3DDTCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.HalfFour">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.HalfFour.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.HalfTwo">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.HalfTwo.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.Dec3N">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.Dec3N.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.UDec3">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.UDec3.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.UShort4N">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.UShort4N.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.UShort2N">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.UShort2N.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.Short4N">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.Short4N.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.Short2N">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.Short2N.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.UByte4N">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.UByte4N.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DeclarationTypeCaps.UByte4">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.DeclarationType" />.UByte4.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DeclarationType">
            <summary>Defines a vertex declaration data type.</summary>
            <unmanaged>D3DDECLTYPE</unmanaged>
        </member>
        <member name="F:&lt;unknown type&gt;.Unused">
            <summary>
Type field in the declaration is unused.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.HalfFour">
            <summary>
Four component, 16 bit, floating point.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.HalfTwo">
            <summary>
Two component, 16 bit, floating point.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Dec3N">
            <summary>
Three component, signed, 10 10 10 format normalized by dividing by 511.0f.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.UDec3">
            <summary>
Three component, unsigned, 10 10 10 format.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.UShort4N">
            <summary>
Normalized, four component, unsigned short normalized by dividing by 65535.0f.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.UShort2N">
            <summary>
Normalized, two component, unsigned short normalized by dividing by 65535.0f.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Short4N">
            <summary>
Normalized, four component, signed short normalized by dividing by 32767.0f.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Short2N">
            <summary>
Normalized, two component, signed short normalized by dividing by 32767.0f.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.UByte4N">
            <summary>
Four component byte with each byte normalized by dividing by 255.0f.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Short4">
            <summary>
Four component, signed short.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Short2">
            <summary>
Two component, signed short.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Ubyte4">
            <summary>
Four component, unsigned byte.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Color">
            <summary>
Four component, packed, unsigned bytes mapped to the 0 to 1 range. Input is a color
and is expanded to RGBA order.
</summary>
            <summary>
Vertex data contains diffuse or specular color.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Float4">
            <summary>
Four component float.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Float3">
            <summary>
Three component float.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Float2">
            <summary>
Two component float.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Float1">
            <summary>
One component float.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DeclarationMethod">
            <summary>
Defines the vertex declaration method which is a predefined operation performed by the
tessellator (or any procedural geometry routine on the vertex data during tessellation).
</summary>
            <unmanaged>D3DDECLMETHOD</unmanaged>
        </member>
        <member name="F:&lt;unknown type&gt;.LookupPresampled">
            <summary>
Lookup a presampled displacement map.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Lookup">
            <summary>
Look up a displacement map.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.UV">
            <summary>
Copies out the U and V values at a point on the rectangle or triangle patch.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.CrossUV">
            <summary>
Computes the normal at a point on the rectangle or triangle patch by taking the cross product of the two tangents.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.PartialV">
            <summary>
Computes the tangent at a point on the rectangle or triangle patch in the V direction.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.PartialU">
            <summary>
Computes the tangent at a point on the rectangle or triangle patch in the U direction.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Default">
            <summary>
Default value. The tessellator copies the vertex data as is, with no additional calculations.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.DebugMonitorTokens">
            <summary>
Defines settings for debug monitor tokens.
</summary>
            <unmanaged>D3DDEBUGMONITORTOKENS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.DebugMonitorTokens.Disable">
            <summary>
Disable the debug monitor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.DebugMonitorTokens.Enable">
            <summary>
Enable the debug monitor.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CursorCaps">
            <summary>Driver cursor capability flags.</summary>
            <unmanaged>D3DCURSORCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.CursorCaps.LowResolution">
            <summary>
The driver supports cursors in low resolution modes.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CursorCaps.Color">
            <summary>
The driver supports color cursors.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Cull">
            <summary>Defines the supported culling modes.</summary>
            <unmanaged>D3DCULL</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Cull.None">
            <summary>
Do not cull back faces.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Cull.Counterclockwise">
            <summary>
Cull back faces with counterclockwise vertices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Cull.Clockwise">
            <summary>
Cull back faces with clockwise vertices.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CubeMapFace">
            <summary>Defines the faces of a cubemap.</summary>
            <unmanaged>D3DCUBEMAP_FACES</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.CubeMapFace.NegativeZ">
            <summary>
Negative z-face of the cubemap.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CubeMapFace.PositiveZ">
            <summary>
Positive z-face of the cubemap.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CubeMapFace.NegativeY">
            <summary>
Negative y-face of the cubemap.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CubeMapFace.PositiveY">
            <summary>
Positive y-face of the cubemap.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CubeMapFace.NegativeX">
            <summary>
Negative x-face of the cubemap.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CubeMapFace.PositiveX">
            <summary>
Positive x-face of the cubemap.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ComposeRectOperation">
            <summary>
Specifies how to combine glyph data from the source and destination surfaces in a ComposeRect operation.
</summary>
            <unmanaged>D3DCOMPOSERECTSOP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ComposeRectOperation.Negate">
            <summary>
Copy the negated source to the destination.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ComposeRectOperation.And">
            <summary>
Bitwise AND the source and the destination.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ComposeRectOperation.Or">
            <summary>
Bitwise OR the source and the destination.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ComposeRectOperation.Copy">
            <summary>
Copy the source to the destination.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CreateFlags">
            <summary>A combination of one or more flags that control the device creation behavior.</summary>
            <unmanaged>D3DCREATE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.SoftwareVertexProcessing">
            <summary>
Tells the device to use software vertex processing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.AllowScreensavers">
            <summary>
Allows screensavers during a fullscreen application.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.PureDevice">
            <summary>
Specifies that the device does not support Get* calls for anything that can be stored
in state blocks.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.NoWindowChanges">
            <summary>
Indicates that Direct3D must not alter the focus window in any way.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.Multithreaded">
            <summary>
Indicates that the application requests Direct3D to be multithread safe.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.MixedVertexProcessing">
            <summary>
Tells the device to use mixed vertex processing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.HardwareVertexProcessing">
            <summary>
Tells the device to use hardware vertex processing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.FpuPreserve">
            <summary>
Preserve the floating point precision used in the calling thread.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.EnablePresentStatistics">
            <summary>
Enables the gathering of presentation statistics. Only available in Direct3D9Ex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.DisablePsgpThreading">
            <summary>
Restrict computation to the main application thread. Only available on Windows Vista.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.DisablePrintScreen">
            <summary>
Causes the runtime to not register hotkeys for print screen. Only available in Direct3D9Ex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.DisableExtendedDriverManagement">
            <summary>
Direct3D will managed resources instead of the driver. Errors will still be thrown
for conditions such as insufficient video memory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.DisableDriverManagement">
            <summary>
Direct3D will managed resources instead of the driver.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.AdapterGroupDevice">
            <summary>
Asks the device to drive all heads that the master adapter owns.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CreateFlags.None">
            <summary>
No extra creation flags specified.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CompareCaps">
            <summary>
Specifies a set of flags that describe the supported compare capabilities of the device.
</summary>
            <unmanaged>D3DPCMPCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.CompareCaps.Always">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Compare" />.Always.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CompareCaps.GreaterEqual">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Compare" />.GreaterEqual.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CompareCaps.NotEqual">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Compare" />.NotEqual.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CompareCaps.Greater">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Compare" />.Greater.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CompareCaps.LessEqual">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Compare" />.lessEqual.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CompareCaps.Equal">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Compare" />.Equal.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CompareCaps.Less">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Compare" />.Less.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CompareCaps.Never">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Compare" />.Never.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Compare">
            <summary>Specifies possible compare functions.</summary>
            <unmanaged>D3DCMPFUNC</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Compare.Always">
            <summary>
Always pass the test.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Compare.GreaterEqual">
            <summary>
Accept the new pixel if its value is greater than or equal to the value of the current pixel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Compare.NotEqual">
            <summary>
Accept the new pixel if its value does not equal the value of the current pixel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Compare.Greater">
            <summary>
Accept the new pixel if its value is greater than the value of the current pixel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Compare.LessEqual">
            <summary>
Accept the new pixel if its value is less than or equal to the value of the current pixel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Compare.Equal">
            <summary>
Accept the new pixel if its value equals the value of the current pixel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Compare.Less">
            <summary>
Accept the new pixel if its value is less than the value of the current pixel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Compare.Never">
            <summary>
Always fail the test.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ColorWriteEnable">
            <summary>
Flags that enable a per-channel write for the render target color buffer.
</summary>
            <unmanaged href="bb172599">D3DCOLORWRITEENABLE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ColorWriteEnable.All">
            <summary>
Allow writes to all channels.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ColorWriteEnable.Red">
            <summary>
Allow writes to the red channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ColorWriteEnable.Green">
            <summary>
Allow writes to the green channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ColorWriteEnable.Blue">
            <summary>
Allow writes to the blue channel.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ColorWriteEnable.Alpha">
            <summary>
Allow writes to the alpha channel.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ColorSource">
            <summary>
Defines the location at which a color or color component must be accessed for lighting calculations.
</summary>
            <unmanaged>D3DMATERIALCOLORSOURCE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ColorSource.Color2">
            <summary>
Use the specular vertex color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ColorSource.Color1">
            <summary>
Use the diffuse vertex color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ColorSource.Material">
            <summary>
Use the color from the current material.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ClipFlags">
            <summary>
Specifies a set of values that describe the current clip status.
</summary>
            <unmanaged>D3DCS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Plane5">
            <summary>
Application defined clipping plane.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Plane4">
            <summary>
Application defined clipping plane.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Plane3">
            <summary>
Application defined clipping plane.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Plane2">
            <summary>
Application defined clipping plane.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Plane1">
            <summary>
Application defined clipping plane.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Plane0">
            <summary>
Application defined clipping plane.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Back">
            <summary>
All vertices are clipped by the back plane of the viewing frustum.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Front">
            <summary>
All vertices are clipped by the front plane of the viewing frustum.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Bottom">
            <summary>
All vertices are clipped by the bottom plane of the viewing frustum.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Top">
            <summary>
All vertices are clipped by the top plane of the viewing frustum.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Right">
            <summary>
All vertices are clipped by the right plane of the viewing frustum.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.Left">
            <summary>
All vertices are clipped by the left plane of the viewing frustum.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClipFlags.All">
            <summary>
Combination of all clip flags.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ClearFlags">
            <summary>
These flags identify a surface to reset when calling <see cref="T:SlimDX.Direct3D9.Device">Device.Clear</see>.
</summary>
            <unmanaged>D3DCLEAR</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ClearFlags.ZBuffer">
            <summary>
Clear the depth buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClearFlags.Target">
            <summary>
Clear the render target.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClearFlags.Stencil">
            <summary>
Clear the stencil surface.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ClearFlags.None">
            <summary>
Don't clear any surfaces.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CharacterSet">
            <summary>
Defines possible character sets for fonts.
</summary>
            <unmanaged>CHARSET</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Mac">
            <summary>
The Mac character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Baltic">
            <summary>
The Baltic character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Russian">
            <summary>
The Russian character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.EastEurope">
            <summary>
The East Europe character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Thai">
            <summary>
The Thai character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Vietnamese">
            <summary>
The Vietnamese character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Turkish">
            <summary>
The Turkish character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Greek">
            <summary>
The Greek character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Arabic">
            <summary>
The Arabic character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Hebrew">
            <summary>
The Hebrew character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Johab">
            <summary>
The Johab character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Oem">
            <summary>
The OEM character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.ChineseBig5">
            <summary>
The Chinese character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.GB2312">
            <summary>
The GB2312 character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Hangul">
            <summary>
The Hangul character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.ShiftJIS">
            <summary>
The ShiftJIS character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Symbol">
            <summary>
The symbol character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Default">
            <summary>
The default system character set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CharacterSet.Ansi">
            <summary>
The ANSI character set.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Caps3">
            <summary>Driver-specific capability flags.</summary>
            <unmanaged>D3DCAPS3</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps3.CopyToSystemMemory">
            <summary>
Device can accelerate a memory copy from local video memory to system memory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps3.CopyToVideoMemory">
            <summary>
Device can accelerate a memory copy from system memory to local video memory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps3.LinearToSrgbPresentation">
            <summary>
Indicates that the device can perform gamma correction from a windowed back buffer to
an sRGB desktop.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps3.AlphaFullScreenFlipOrDiscard">
            <summary>
Indicates that the device can respect the AlphaBlendEnable render state in fullscreen mode
while using the Flip or Discard swap effect.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps3.None">
            <summary>
No extra capabilities defined.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Caps2">
            <summary>Driver-specific capability flags.</summary>
            <unmanaged>D3DCAPS2</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps2.CanAutoGenerateMipMap">
            <summary>
The driver is capable of automatically generating mipmaps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps2.DynamicTextures">
            <summary>
The driver supports dynamic textures.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps2.CanManageResource">
            <summary>
The driver is capable of managing resources.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps2.CanCalibrateGamma">
            <summary>
The system has a calibrator installed that can automatically adjust the gamma ramp so that
the result is identical on all systems that have a calibrator.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps2.FullScreenGamma">
            <summary>
The driver supports dynamic gamma ramp adjustment in fullscreen mode.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps2.None">
            <summary>
No extra capabilities defined.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Caps">
            <summary>Driver-specific capability flags.</summary>
            <unmanaged>D3DCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps.ReadScanline">
            <summary>
Display hardware is capable of returning the current scan line.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Caps.None">
            <summary>
No extra capabilities defined.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.BlendOperation">
            <summary>Defines the supported blend operations.</summary>
            <unmanaged>D3DBLENDOP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendOperation.Maximum">
            <summary>
The result is the maximum of the source and destination.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendOperation.Minimum">
            <summary>
The result is the minimum of the source and destination.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendOperation.ReverseSubtract">
            <summary>
The result is the source subtracted from the destination.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendOperation.Subtract">
            <summary>
The result is the destination subtracted from the source.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendOperation.Add">
            <summary>
The result is the destination added to the source.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.BlendCaps">
            <summary>
Defines possible source blending capabilities.
</summary>
            <unmanaged href="bb172513">D3DPBLENDCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.BlendFactor">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.BlendFactor and <see cref="T:SlimDX.Direct3D9.Blend" />.InverseBlendFactor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.BothInverseSourceAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.BothInverseSourceAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.SourceAlphaSaturated">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.SourceAlphaSaturated.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.InverseDestinationColor">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.InverseDestinationColor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.DestinationColor">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.DestinationColor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.InverseDestinationAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.InverseDestinationAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.DestinationAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.DestinationAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.InverseSourceAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.InverseSourceAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.SourceAlpha">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.SourceAlpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.InverseSourceColor">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.InverseSourceColor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.SourceColor">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.SourceColor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.One">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.One.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.BlendCaps.Zero">
            <summary>
The device supports <see cref="T:SlimDX.Direct3D9.Blend" />.Zero.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Blend">
            <summary>Defines the supported blend mode.</summary>
            <unmanaged>D3DBLEND</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.InverseSourceColor2">
            <summary>
Blend factor is one minus the output color of the pixel shader. Only available in Direct3D9Ex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.SourceColor2">
            <summary>
Blend factor is the output color of the pixel shader. Only available in Direct3D9Ex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.InverseBlendFactor">
            <summary>
Inverted constant color blending factor used by the frame-buffer blender.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.BlendFactor">
            <summary>
Constant color blending factor used by the frame-buffer blender.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.BothInverseSourceAlpha">
            <summary>
Source blend factor is one minus the source alpha, and destination blend factor
is one minus the destination alpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.SourceAlphaSaturated">
            <summary>
Blend factor is (f, f, f, 1); where f = min(As, 1 - Ad).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.InverseDestinationColor">
            <summary>
Blend factor is one minus the destination color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.DestinationColor">
            <summary>
Blend factor is the destination color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.InverseDestinationAlpha">
            <summary>
Blend factor is one minus the destination alpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.DestinationAlpha">
            <summary>
Blend factor is the destination alpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.InverseSourceAlpha">
            <summary>
Blend factor is one minus the source alpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.SourceAlpha">
            <summary>
Blend factor is the source alpha.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.InverseSourceColor">
            <summary>
Blend factor is one minus the source color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.SourceColor">
            <summary>
Blend factor is the source color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.One">
            <summary>
Blend factor is (1, 1, 1, 1).
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Blend.Zero">
            <summary>
Blend factor is (0, 0, 0, 0).
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Basis">
            <summary>Defines the basis type of a high-order patch surface.</summary>
            <unmanaged>D3DBASISTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Basis.CatmullRom">
            <summary>
An interpolation basis defines the surface so that the surface goes through all the input vertices specified.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Basis.BSpline">
            <summary>
Input vertices are treated as control points of a B-spline surface.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Basis.Bezier">
            <summary>
Input vertices are treated as a series of Bezier patches.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ZBufferType">
            <summary>
Z-buffer usage types.
</summary>
            <unmanaged>D3DZBUFFERTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ZBufferType.UseWBuffer">
            <summary>
Used to enable a W-buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ZBufferType.DontUseZBuffer">
            <summary>
Used to disable the depth buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ZBufferType.UseZBuffer">
            <summary>
Used to enable the depth buffer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.XFileFormat">
            <summary>
Specifies possible XFile formats.
</summary>
            <unmanaged>D3DXF_FILEFORMAT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.XFileFormat.Compressed">
            <summary>
Compressed file.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.XFileFormat.Text">
            <summary>
Text file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.XFileFormat.Binary">
            <summary>
Legacy file format.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexShaderCaps">
            <summary>
Specifies vertex shader capabilities supported by the device.
</summary>
            <unmanaged>D3DVS20CAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexShaderCaps.Predication">
            <summary>
Instruction predication is supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexShaderCaps.None">
            <summary>
No extra vertex shader capabilities specified.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexProcessingCaps">
            <summary>
Specifies vertex processing capabilities supported by the device.
</summary>
            <unmanaged href="bb172513">D3DVTXCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexProcessingCaps.NoTexGenNonLocalViewer">
            <summary>
Device does not support texture generation in non-local viewer mode.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexProcessingCaps.TexGenSphereMap">
            <summary>
Device supports sphere maps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexProcessingCaps.Tweening">
            <summary>
Device supports vertex tweening.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexProcessingCaps.LocalViewer">
            <summary>
Device supports local viewer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexProcessingCaps.PositionalLights">
            <summary>
Device can support positional lights.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexProcessingCaps.DirectionalLights">
            <summary>
Device can support directional lights.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexProcessingCaps.MaterialSource7">
            <summary>
Indicates that the device supports the color material states.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexProcessingCaps.TextureGen">
            <summary>
Device can do texture generation.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexFormatCaps">
            <summary>
Specifies the flexible vertex format capabilities of the device.
</summary>
            <unmanaged HREF="bb172513">D3DFVFCAPS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormatCaps.PointSize">
            <summary>
Point size is determined by either the render state or the vertex data. If an FVF is used, 
point size can come from point size data in the vertex declaration.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormatCaps.DoNotStripElements">
            <summary>
It is preferable that vertex elements not be stripped. That is, if the vertex format contains 
elements that are not used with the current render states, there is no need to regenerate the 
vertices. If this capability flag is not present, stripping extraneous elements from the vertex 
format provides better performance. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormatCaps.TextureCoordCountMask">
            <summary>
Masks the low WORD of FVFCaps. These bits, cast to the WORD data type, describe the total 
number of texture coordinate sets that the device can simultaneously use for multiple texture 
blending.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexFormat">
            <summary>
Specifies codes that can be used to define Flexible-Vertex-Formats (FVF).
</summary>
            <unmanaged>D3DFVF</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.LastBetaColor">
            <summary>
The last beta field in the vertex position data will be of type Color. The data in the beta 
fields are used with matrix palette skinning to specify matrix indices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.LastBetaUByte4">
            <summary>
The last beta field in the vertex position data will be of type UByte4. The data in the beta 
fields are used with matrix palette skinning to specify matrix indices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.TextureCountShift">
            <summary>
The number of bits by which to shift an integer value that identifies the number of texture 
coordinates for a vertex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.TextureCountMask">
            <summary>
Mask for texture flag bits.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionMask">
            <summary>
Mask for position bits.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture8">
            <summary>
Vertex format contains 8 texture coordinate sets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture7">
            <summary>
Vertex format contains 7 texture coordinate sets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture6">
            <summary>
Vertex format contains 6 texture coordinate sets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture5">
            <summary>
Vertex format contains 5 texture coordinate sets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture4">
            <summary>
Vertex format contains 4 texture coordinate sets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture3">
            <summary>
Vertex format contains 3 texture coordinate sets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture2">
            <summary>
Vertex format contains 2 texture coordinate sets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture1">
            <summary>
Vertex format contains 1 texture coordinate set.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Texture0">
            <summary>
Vertex format contains no texture coordinate sets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionNormal">
            <summary>
Vertex format contains a position and a normal.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionW">
            <summary>
Vertex format contains transformed and clipped data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionBlend5">
            <summary>
Vertex format contains position and weighting values for multimatrix blending operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionBlend4">
            <summary>
Vertex format contains position and weighting values for multimatrix blending operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionBlend3">
            <summary>
Vertex format contains position and weighting values for multimatrix blending operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionBlend2">
            <summary>
Vertex format contains position and weighting values for multimatrix blending operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionBlend1">
            <summary>
Vertex format contains position and weighting values for multimatrix blending operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PositionRhw">
            <summary>
Vertex format includes the position of a transformed vertex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Position">
            <summary>
Vertex format includes the position of an untransformed vertex.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Specular">
            <summary>
Vertex format includes a specular color component.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Diffuse">
            <summary>
Vertex format includes a diffuse color component.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.PointSize">
            <summary>
Vertex format contains a point size.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.Normal">
            <summary>
Vertex format includes a vertex normal vector.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexFormat.None">
            <summary>
No vertex format defined.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.VertexBlend">
            <summary>
Defines flags used to control the number or matrices that the system applies when performing
multimatrix vertex blending.
</summary>
            <unmanaged>D3DVERTEXBLENDFLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexBlend.Tweening">
            <summary>
Vertex blending is performed using vertex tweening.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexBlend.Weights0">
            <summary>
Enable vertex blending between one matrix and a weight of 1.0.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexBlend.Weights3">
            <summary>
Enable vertex blending between four matrices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexBlend.Weights2">
            <summary>
Enable vertex blending between three matrices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexBlend.Weights1">
            <summary>
Enable vertex blending between two matrices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.VertexBlend.Disable">
            <summary>
Disable vertex blending.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Usage">
            <summary>
Usage options that identify how resources are to be used.
</summary>
            <unmanaged>D3DUSAGE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.R2VBTarget">
            <summary>
The resource will be a Render-To-Vertex-Buffer (R2VB) target.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.QueryWrapAndMip">
            <summary>
Query the resource to verify support for texture wrapping and mip-mapping.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.QueryVertexTexture">
            <summary>
Query the resource to verify support for vertex shader texture sampling.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.QueryPostPixelShaderBlending">
            <summary>
Query the resource to verify support for post pixel shader blending support.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.QuerySrgbWrite">
            <summary>
Query the resource to verify if a texture supports gamma correction during a write operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.QueryFilter">
            <summary>
Query the resource format to see if it supports texture filters.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.QuerySrgbRead">
            <summary>
Query the resource to verify if a texture supports gamma correction during a read operation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.QueryLegacyBumpMap">
            <summary>
Query the resource abour a legacy bump map.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.TextApi">
            <summary>
Indicates that the resource will be used for composition. Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.SoftwareProcessing">
            <summary>
Indicates that vertex processing for this resource should be done in software.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.WriteOnly">
            <summary>
Informs the system that the application will only ever write to the buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.RTPatches">
            <summary>
Indicates that the vertex buffer is to be used for drawing high-order primitives.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.RenderTarget">
            <summary>
The resource will be a render target.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.Points">
            <summary>
Indicates that the buffer will be used to draw points.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.NPatches">
            <summary>
Indicates that the vertex buffer is to be used for drawing N-patches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.NonSecure">
            <summary>
Allow a shared surface created by a secure application to be opened by a non-secure 
application that has the shared handle. Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.Dynamic">
            <summary>
Indicates that the resource requires dynamic memory use.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.DoNotClip">
            <summary>
Set to indicate that the vertex buffer content will never require clipping.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.DisplacementMap">
            <summary>
The resource will be a displacement map.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.DepthStencil">
            <summary>
The resource will be a depth/stencil buffer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.AutoGenerateMipMap">
            <summary>
The resource will automatically generate mipmaps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Usage.None">
            <summary>
No specified usage options.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureWrapping">
            <summary>
Specifies wrapping options for texture coordinates.
</summary>
            <unmanaged href="bb206256">D3DWRAPCOORD</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureWrapping.All">
            <summary>
Wrap all coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureWrapping.WrapCoordinate3">
            <summary>
Wrap the 3 coordinate.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureWrapping.WrapCoordinate2">
            <summary>
Wrap the 2 coordinate.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureWrapping.WrapCoordinate1">
            <summary>
Wrap the 1 coordinate.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureWrapping.WrapCoordinate0">
            <summary>
Wrap the 0 coordinate.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureWrapping.None">
            <summary>
No wrapping is performed.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TransformState">
            <summary>
Defines possible transformation states.
</summary>
            <unmanaged>D3DTRANSFORMSTATETYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Texture7">
            <summary>
Identifies the transformation matrix being set for the specified texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Texture6">
            <summary>
Identifies the transformation matrix being set for the specified texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Texture5">
            <summary>
Identifies the transformation matrix being set for the specified texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Texture4">
            <summary>
Identifies the transformation matrix being set for the specified texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Texture3">
            <summary>
Identifies the transformation matrix being set for the specified texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Texture2">
            <summary>
Identifies the transformation matrix being set for the specified texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Texture1">
            <summary>
Identifies the transformation matrix being set for the specified texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Texture0">
            <summary>
Identifies the transformation matrix being set for the specified texture stage.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.World3">
            <summary>
Identifies the transformation matrix being set as a world transformation matrix.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.World2">
            <summary>
Identifies the transformation matrix being set as a world transformation matrix.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.World1">
            <summary>
Identifies the transformation matrix being set as a world transformation matrix.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.World">
            <summary>
Identifies the transformation matrix being set as a world transformation matrix.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.Projection">
            <summary>
Identifies the transformation matrix being set as the projection transformation matrix.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransformState.View">
            <summary>
Identifies the transformation matrix being set as the view transformation matrix.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureTransform">
            <summary>
Defines texture coordinate transformation values.
</summary>
            <unmanaged>D3DTEXTURETRANSFORMFLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureTransform.Projected">
            <summary>
Forces all coordinates to be projected before being sent to the rasterizer.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureTransform.Count4">
            <summary>
The rasterizer should expect 4D coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureTransform.Count3">
            <summary>
The rasterizer should expect 3D coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureTransform.Count2">
            <summary>
The rasterizer should expect 2D coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureTransform.Count1">
            <summary>
The rasterizer should expect 1D coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureTransform.Disable">
            <summary>
Texture coordinates are passed directly to the rasterizer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ShadeMode">
            <summary>
Defines the possible shading modes.
</summary>
            <unmanaged>D3DSHADEMODE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ShadeMode.Gouraud">
            <summary>
Gouraud shading.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShadeMode.Flat">
            <summary>
Flat shading.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureAddress">
            <summary>
Defines the texture-addressing modes.
</summary>
            <unmanaged>D3DTEXTUREADDRESS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddress.MirrorOnce">
            <summary>
Similar to a combination of Wrap, Mirror, and Clamp.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddress.Border">
            <summary>
Texture coordinates outside the range are set to the border color.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddress.Clamp">
            <summary>
Texture coordinates outside the range are clamped to the maximum values.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddress.Mirror">
            <summary>
The texture is flipped at every integer junction.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureAddress.Wrap">
            <summary>
Tile the texture at every integer junction.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.SwapEffect">
            <summary>
Defines swap effects.
</summary>
            <unmanaged>D3DSWAPEFFECT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.SwapEffect.FlipEx">
            <summary>
Designates when an application is adopting flip mode, during which time an application's frame
is passed instead of copied to the Desktop Window Manager(DWM) for composition when the application
is presenting in windowed mode. Flip mode allows an application to more efficiently use memory
bandwidth as well as enabling an application to take advantage of full-screen-present statistics.
Flip mode does not affect full-screen behavior. Available in Direct3D 9Ex on Windows 7 only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SwapEffect.Overlay">
            <summary>
Use a dedicated area of video memory that can be overlayed on the primary surface. No copy is performed
when the overlay is displayed. The overlay operation is performed in hardware, without modifying
the data in the primary surface. Available in Direct3D 9Ex on Windows 7 only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SwapEffect.Copy">
            <summary>
Copies the data between back buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SwapEffect.Flip">
            <summary>
Flips between multiple back buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SwapEffect.Discard">
            <summary>
Discards the data in the back buffers and render targets after a presentation.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.StencilOperation">
            <summary>
Defines stencil buffer operations.
</summary>
            <unmanaged>D3DSTENCILOP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilOperation.Decrement">
            <summary>
Decrement the stencil value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilOperation.Increment">
            <summary>
Increment the stencil value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilOperation.Invert">
            <summary>
Invert the stencil value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilOperation.DecrementSaturate">
            <summary>
Decrement and clamp the stencil value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilOperation.IncrementSaturate">
            <summary>
Increment and clamp the stencil value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilOperation.Replace">
            <summary>
Replace the stencil value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilOperation.Zero">
            <summary>
Zero the stencil value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StencilOperation.Keep">
            <summary>
Keep the current stencil value.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TextureFilter">
            <summary>
Defines texture filtering modes for a texture stage.
</summary>
            <unmanaged>D3DTEXTUREFILTERTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureFilter.ConvolutionMono">
            <summary>
Convolution filter for monochrome textures. Available for Direct3D9Ex only.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureFilter.GaussianQuad">
            <summary>
A 4 sample Guassian filter is used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureFilter.PyramidalQuad">
            <summary>
A 4 sample tent filter is used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureFilter.Anisotropic">
            <summary>
Anisotropic interpolation is used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureFilter.Linear">
            <summary>
Bilinear interpolation is used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureFilter.Point">
            <summary>
Point filtering is used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TextureFilter.None">
            <summary>
Mipmapping is disabled.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.StreamSource">
            <summary>
Defines stream sources for hardware instancing.
</summary>
            <unmanaged>D3DSTREAMSOURCE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.StreamSource.InstanceData">
            <summary>
Instance data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.StreamSource.IndexedData">
            <summary>
Indexed data.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.WeldFlags">
            <summary>
Specifies options for welding together vertices.
</summary>
            <unmanaged>D3DXWELDEPSILONSFLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.WeldFlags.DoNotSplit">
            <summary>
Instructs the weld not to split vertices that are in separate attribute groups.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.WeldFlags.DoNotRemoveVertices">
            <summary>
Instructs the weld to allow only modifications to vertices and not removal. This flag is 
valid only if WeldPartialMatches is set. It is useful to modify vertices to be equal, 
but not to allow vertices to be removed.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.WeldFlags.WeldPartialMatches">
            <summary>
If a given vertex component is within epsilon, modify partially matched vertices so that both components are identical. 
If all components are equal, remove one of the vertices. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.WeldFlags.WeldAll">
            <summary>
Weld together all vertices that are at the same location.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TransitionType">
            <summary>
Defines the transition style between values of a mesh animation.
</summary>
            <unmanaged>D3DXTRANSITION_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TransitionType.EaseInEaseOut">
            <summary>
Ease-in, ease-out spline transition between values.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TransitionType.Linear">
            <summary>
Linear transition between values.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TrackPriority">
            <summary>
Defines the priority type to which an animation track is assigned.
</summary>
            <unmanaged>D3DXPRIORITY_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TrackPriority.High">
            <summary>
Track should be blended with all the high-priority tracks before the
high-priority blend is mixed with the low-priority blend.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TrackPriority.Low">
            <summary>
Track should be blended with all the low-priority tracks before the
low-priority blend is mixed with the high-priority blend.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.TangentOptions">
            <summary>
Defines settings used for mesh tangent frame computations.
</summary>
            <unmanaged>D3DXTANGENT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.GenerateInPlace">
            <summary>
The results are stored in the original input mesh, and the output mesh is not used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.CalculateNormals">
            <summary>
Compute the per-vertex normal vector for each triangle of the input mesh,
and ignore any normal vectors already in the input mesh. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.WindCW">
            <summary>
Vertices are ordered in a clockwise direction around each triangle.
The computed normal vector direction is therefore inverted 180 degrees from
the direction computed using counterclockwise vertex ordering. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.WeightEqual">
            <summary>
Compute a unit-length normal vector for each triangle of the input mesh.
Mutually exclusive with WeightByArea.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.WeightByArea">
            <summary>
Weight the direction of the computed per-vertex normal or partial derivative vector according to the areas
of triangles attached to that vertex. Mutually exclusive with WeightEqual.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.OrthogonalizeFromU">
            <summary>
Compute the partial derivative with respect to texture coordinate u independently for each vertex,
and then compute the partial derivative with respect to V as the cross product of the normal vector
and the partial derivative with respect to U. Mutually exclusive with DontOrthogonalize and OrthogonalizeFromV.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.OrthogonalizeFromV">
            <summary>
Compute the partial derivative with respect to texture coordinate V independently for each vertex,
and then compute the partial derivative with respect to U as the cross product of the partial derivative
with respect to V and the normal vector. Mutually exclusive with DontOrthogonalize and OrthogonalizeFromU.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.DontOrthogonalize">
            <summary>
Do not transform texture coordinates to orthogonal Cartesian coordinates. Mutually exclusive
with OrthogonalizeFromU and OrthogonalizeFromV.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.DontNormalizePartials">
            <summary>
Do not normalize partial derivatives with respect to texture coordinates. If not normalized,
the scale of the partial derivatives is proportional to the scale of the 3D model divided by the
scale of the triangle in (U, V) space. This scale value provides a measure of how much the
texture is stretched in a given direction. The resulting vector length is a weighted sum of
the lengths of the partial derivatives.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.WrapUV">
            <summary>
Texture coordinate values in both U and V directions are between 0 and 1. In this case a texture
coordinate set will be chosen that minimizes the perimeter of the triangle.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.WrapV">
            <summary>
Texture coordinate values in the V direction are between 0 and 1. In this case a texture
coordinate set will be chosen that minimizes the perimeter of the triangle.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.WrapU">
            <summary>
Texture coordinate values in the U direction are between 0 and 1. In this case a texture
coordinate set will be chosen that minimizes the perimeter of the triangle.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.TangentOptions.None">
            <summary>
No options.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.SpriteFlags">
            <summary>
Flags used to specify sprite rendering options to the flags parameter in the Sprite.Begin method.
</summary>
            <unmanaged>D3DXSPRITE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.DoNotAddRefTexture">
            <summary>
Disables calling AddRef() on every draw, and Release() on Flush() for better performance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.SortDepthBackToFront">
            <summary>
Sprites are sorted by depth in back-to-front order prior to drawing. This procedure is
recommended when drawing transparent sprites of varying depths. You may combine SortDepthBackToFront
with SortTexture to sort first by depth, and second by texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.SortDepthFrontToBack">
            <summary>
Sprites are sorted by depth in front-to-back order prior to drawing. This procedure is
recommended when drawing opaque sprites of varying depths. You may combine SortDepthFrontToBack
with SortTexture to sort first by depth, and second by texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.SortTexture">
            <summary>
Sort sprites by texture prior to drawing. This can improve performance when drawing
non-overlapping sprites of uniform depth. You may also combine SortTexture with either
SortDepthFrontToBack or SortDepthBackToFront. This will sort the list of sprites by depth
first and texture second.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.AlphaBlend">
            <summary>
Enables alpha blending with RenderState.AlphaTestEnable set to true (for nonzero alpha).
Blend.SourceAlpha will be the source blend state, and Blend.InverseSourceAlpha will be the destination
blend state in calls to Device.SetRenderState. Font expects this flag to be set when drawing text.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.Billboard">
            <summary>
Each sprite will be rotated about its center so that it is facing the viewer.
Sprite.SetWorldViewLH or Sprite.SetWorldViewRH must be called first.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.ObjectSpace">
            <summary>
The world, view, and projection transforms are not modified. The transforms currently set to the
device are used to transform the sprites when the batched sprites are drawn (when Sprite.Flush or
Sprite.End is called). If this flag is not specified, then world, view, and projection
transforms are modified so that sprites are drawn in screen-space coordinates.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.DoNotModifyRenderState">
            <summary>
The device render state is not to be changed when Sprite.Begin is called. The device is assumed
to be in a valid state to draw vertices containing UsageIndex = 0 in the DeclarationUsage.Position,
DeclarationUsage.TexCoord, and DeclarationUsage.Color data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.DoNotSaveState">
            <summary>
The device state is not to be saved or restored when Sprite.Begin or Sprite.End is called.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.SpriteFlags.None">
            <summary>
No flags.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ShaderFlags">
            <summary>
Flags used for parsing, compiling, or assembling shaders.
</summary>
            <unmanaged>D3DXSHADER</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.UseLegacyD3DX9_31Dll">
            <summary>
Enable the use of the original Direct3D 9 HLSL compiler. OCT2006_d3dx9_31_x86.cab or
OCT2006_d3dx9_31_x64.cab must be included as part of the applications redist. This flag
is required to compile ps_1_x shaders without using the promotion flag to ps_2_0. Specifying
this flag when obtaining an EffectCompiler interface causes subsequent calls to
EffectCompiler.CompileEffect and EffectCompiler/CompileShader through this object
to use the legacy compiler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.SkipOptimization">
            <summary>
Do not validate the generated code against known capabilities and constraints.
This option is recommended only when compiling shaders that are known to work
(that is, shaders that have compiled before without this option). Shaders are
always validated by the runtime before they are set to the device.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.SkipValidation">
            <summary>
Instruct the compiler to skip optimization steps during code generation.
Unless you are trying to isolate a problem in your code and you suspect the
compiler, using this option is not recommended.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.PreferFlowControl">
            <summary>
This is a hint to the compiler to prefer using flow-control instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.PartialPrecision">
            <summary>
Force all computations in the resulting shader to occur at partial precision
This may result in faster evaluation of shaders on some hardware.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.OptimizationLevel3">
            <summary>
Highest optimization level. Will produce best possible code but may take significantly longer to do so.
This will be useful for final builds of an application where performance is the most important factor.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.OptimizationLevel2">
            <summary>
Second highest optimization level.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.OptimizationLevel1">
            <summary>
Second lowest optimization level.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.OptimizationLevel0">
            <summary>
Lowest optimization level. May produce slower code but will do so more quickly.
This may be useful in a highly iterative shader development cycle.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.NoPreshader">
            <summary>
Disables preshaders. The compiler will not pull out static expressions for evaluation on the host CPU.
Additionally, the compiler will not loft any expressions when compiling stand-alone functions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.IeeeStrictness">
            <summary>
Disable optimizations that may cause the output of a compiled shader program to differ from the output
of a program compiled with the DirectX 9 shader compiler due to small precision erros in floating point math.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.ForceVSSoftwareNoOpt">
            <summary>
Force the compiler to compile against the next highest available software target for vertex shaders.
This flag also turns optimizations off and debugging on.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.ForcePSSoftwareNoOpt">
            <summary>
Force the compiler to compile against the next highest available software target for pixel shaders.
This flag also turns optimizations off and debugging on.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.EnableBackwardsCompatibility">
            <summary>
Compile ps_1_x shaders as ps_2_0. Effects that specify ps_1_x targets will instead compile to ps_2_0
targets because this is the minimum shader version supported by the DirectX 10 shader compiler. This flag
has no effect when used with higher level compile targets.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.Debug">
            <summary>
Insert debug filename, line numbers, and type and symbol information during shader compile.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.AvoidFlowControl">
            <summary>
This is a hint to the compiler to avoid using flow-control instructions.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.PackMatrixRowMajor">
            <summary>
Unless explicitly specified, matrices will be packed in row-major order (each vector will be in a single
row) when passed to or from the shader.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.PackMatrixColumnMajor">
            <summary>
Unless explicitly specified, matrices will be packed in column-major order (each vector will be in a single
column) when passed to and from the shader. This is generally more efficient because it allows vector-matrix
multiplication to be performed using a series of dot products.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ShaderFlags.None">
            <summary>
No flags.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.RegisterSet">
            <summary>
Data type of the register.
</summary>
            <unmanaged>D3DXREGISTER_SET</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.RegisterSet.Sampler">
            <summary>
The register contains 4D sampler data.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RegisterSet.Float4">
            <summary>
4D floating-point number.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RegisterSet.Int4">
            <summary>
4D integer number.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.RegisterSet.Bool">
            <summary>
Boolean value.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PlaybackType">
            <summary>
Defines the type of animation set looping modes used for playback.
</summary>
            <unmanaged>D3DXPLAYBACK_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PlaybackType.PingPong">
            <summary>
The animation alternates endlessly between playing forward and playing backward.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PlaybackType.Once">
            <summary>
The animation plays once, and then it stops on the last frame.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PlaybackType.Loop">
            <summary>
The animation repeats endlessly.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.PatchMeshType">
            <summary>
Mesh patch types.
</summary>
            <unmanaged>D3DXPATCHMESHTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.PatchMeshType.NPatch">
            <summary>
N-patch mesh type.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PatchMeshType.Triangle">
            <summary>
Triangle patch mesh type.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.PatchMeshType.Rectangle">
            <summary>
Rectangle patch mesh type.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ParameterType">
            <summary>
Describes the data contained by the enumeration.
</summary>
            <unmanaged>D3DXPARAMETER_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Unsupported">
            <summary>
Parameter is not supported.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.VertexFragment">
            <summary>
Parameter is a vertex shader fragment.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.PixelFragment">
            <summary>
Parameter is a pixel shader fragment.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.VertexShader">
            <summary>
Parameter is a vertex shader.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.PixelShader">
            <summary>
Parameter is a pixel shader.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.SamplerCube">
            <summary>
Parameter is a cube sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Sampler3D">
            <summary>
Parameter is a 3D sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Sampler2D">
            <summary>
Parameter is a 2D sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Sampler1D">
            <summary>
Parameter is a 1D sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Sampler">
            <summary>
Parameter is a sampler.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.TextureCube">
            <summary>
Parameter is a cube texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Texture3D">
            <summary>
Parameter is a DD texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Texture2D">
            <summary>
Parameter is a 2D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Texture1D">
            <summary>
Parameter is a 1D texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Texture">
            <summary>
Parameter is a texture.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.String">
            <summary>
Parameter is a string.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Float">
            <summary>
Parameter is a floating-point number.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Int">
            <summary>
Parameter is an integer. Any floating-point values passed into ConstantTable.SetValue,
ConstantTable.SetVector, or ConstantTable::SetVectorArray will be rounded off (to zero decimal places)
before being written into the constant table. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Bool">
            <summary>
Parameter is a Boolean. Any non-zero value passed into ConstantTable.SetBool, ConstantTable.SetBoolArray,
ConstantTable.SetValue, ConstantTable.SetVector, or ConstantTable.SetVectorArray will be mapped to 1 (true)
before being written into the constant table; otherwise, the value will be set to 0 in the constant table.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterType.Void">
            <summary>
Parameter is a void pointer.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ParameterFlags">
            <summary>
These flags provide additional information about effect parameters.
</summary>
            <unmanaged>D3DX_PARAMETER</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterFlags.Annotation">
            <summary>
This parameter is marked as an annotation.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterFlags.Literal">
            <summary>
This parameter is marked as a literal value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterFlags.Shared">
            <summary>
The value of a parameter will be shared by all effects in the same namespace.
Changing the value in one effect will change it in all shared effects.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterFlags.None">
            <summary>
This parameter is not marked.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ParameterClass">
            <summary>
The type of object.
</summary>
            <unmanaged>D3DXPARAMETER_CLASS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterClass.Struct">
            <summary>
Constant is a structure.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterClass.Object">
            <summary>
Constant is either a texture, shader, or a string.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterClass.MatrixColumns">
            <summary>
Constant is a column major matrix.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterClass.MatrixRows">
            <summary>
Constant is a row major matrix.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterClass.Vector">
            <summary>
Constant is a vector.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ParameterClass.Scalar">
            <summary>
Constant is a scalar.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.NormalMapFlags">
            <summary>
Normal maps generation constants.
</summary>
            <unmanaged>D3DX_NORMALMAP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.NormalMapFlags.ComputeOcclusion">
            <summary>
Computes the per-pixel occlusion term and encodes it into the alpha. An alpha of 1 means that the
pixel is not obscured in any way, and an alpha of 0 means that the pixel is completely obscured.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.NormalMapFlags.InvertSign">
            <summary>
Inverts the direction of each normal.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.NormalMapFlags.Mirror">
            <summary>
Same as specifying the MirrorU and MirrorV flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.NormalMapFlags.MirrorV">
            <summary>
Indicates that pixels off the edge of the texture on the v-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.NormalMapFlags.MirrorU">
            <summary>
Indicates that pixels off the edge of the texture on the u-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.MeshSimplification">
            <summary>
Specifies simplification options for a mesh.
</summary>
            <unmanaged>D3DXMESHSIMP</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshSimplification.Face">
            <summary>
The mesh will be simplified by the number of faces specified in the MinValue parameter.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshSimplification.Vertex">
            <summary>
The mesh will be simplified by the number of vertices specified in the MinValue parameter.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.MeshOptimizeFlags">
            <summary>
Specifies the type of mesh optimization to be performed.
</summary>
            <unmanaged>D3DXMESHOPT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshOptimizeFlags.DeviceIndependent">
            <summary>
Affects the vertex cache size. Using this flag specifies a default vertex cache size that works well on legacy hardware.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshOptimizeFlags.DoNotSplit">
            <summary>
While attribute sorting, do not split vertices that are shared between attribute groups.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshOptimizeFlags.IgnoreVertices">
            <summary>
Optimize the faces only; do not optimize the vertices.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshOptimizeFlags.StripReorder">
            <summary>
Reorders faces to maximize length of adjacent triangles.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshOptimizeFlags.VertexCache">
            <summary>
Reorders faces to increase the cache hit rate of vertex caches.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshOptimizeFlags.AttributeSort">
            <summary>
Reorders faces to optimize for fewer attribute bundle state changes and enhanced BaseMesh.DrawSubset performance.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshOptimizeFlags.Compact">
            <summary>
Reorders faces to remove unused vertices and faces.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.MeshFlags">
            <summary>
Flags used to specify creation options for a mesh.
</summary>
            <unmanaged>D3DXMESH</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.Software">
            <summary>
Equivalent to specifying both D3DXMESH_VB_SOFTWAREPROCESSING and D3DXMESH_IB_SOFTWAREPROCESSING.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.Dynamic">
            <summary>
Equivalent to specifying both D3DXMESH_VB_DYNAMIC and D3DXMESH_IB_DYNAMIC.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.WriteOnly">
            <summary>
Equivalent to specifying both VertexBufferDynamic and IndexBufferDynamic.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.Managed">
            <summary>
Equivalent to specifying both VertexBufferManaged and IndexBufferManaged.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.SystemMemory">
            <summary>
Equivalent to specifying both VertexBufferSystemMemory and IndexBufferSystemMemory.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.UseHardwareOnly">
            <summary>
Use hardware processing only. For mixed-mode device, this flag will cause the system 
to use hardware (if supported in hardware) or will default to software processing.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.VertexBufferShare">
            <summary>
Forces the cloned meshes to share vertex buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.IndexBufferSoftware">
            <summary>
Use the SoftwareProcessing usage flag for index buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.IndexBufferDynamic">
            <summary>
Use the Dynamic usage flag for index buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.IndexBufferWriteOnly">
            <summary>
Use the WriteOnly usage flag for index buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.IndexBufferManaged">
            <summary>
Use the Managed usage flag for index buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.IndexBufferSystemMemory">
            <summary>
Use the SystemMemory usage flag for index buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.VertexBufferSoftware">
            <summary>
Use the SoftwareProcessing usage flag for vertex buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.VertexBufferDynamic">
            <summary>
Use the Dynamic usage flag for vertex buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.VertexBufferWriteOnly">
            <summary>
Use the WriteOnly usage flag for vertex buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.VertexBufferManaged">
            <summary>
Use the Managed usage flag for vertex buffers. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.VertexBufferSystemMemory">
            <summary>
Use the SystemMemory usage flag for vertex buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.NPatches">
            <summary>
Specifying this flag causes the vertex and index buffer of the mesh to be created with the NPatches
flag. This is required if the mesh object is to be rendered using N-patch enhancement using Direct3D. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.RTPatches">
            <summary>
Use the RTPatches usage flag for vertex and index buffers. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.Points">
            <summary>
Use the Points usage flag for vertex and index buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.DoNotClip">
            <summary>
Use the DoNotClip usage flag for vertex and index buffers.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshFlags.Use32Bit">
            <summary>
The mesh has 32-bit indices instead of 16-bit indices.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.MeshDataType">
            <summary>
Defines the type of mesh data present in MeshData.
</summary>
            <unmanaged>D3DXMESHDATATYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshDataType.PatchMesh">
            <summary>
The data type is a patch mesh. See PatchMesh.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshDataType.ProgressiveMesh">
            <summary>
The data type is a progressive mesh. See ProgressiveMesh.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.MeshDataType.Mesh">
            <summary>
The data type is a mesh. See Mesh.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.IncludeType">
            <summary>
Describes the location for the include file.
</summary>
            <unmanaged>D3DXINCLUDE_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.IncludeType.System">
            <summary>
Look in the system path for the include file.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.IncludeType.Local">
            <summary>
Look in the local project for the include file.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.ImageFileFormat">
            <summary>
Describes the supported image file formats.
</summary>
            <unmanaged>D3DXIMAGE_FILEFORMAT</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Pfm">
            <summary>
Portable float map file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Hdr">
            <summary>
High dynamic range (HDR) file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Dib">
            <summary>
Windows device-independent bitmap (DIB) file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Ppm">
            <summary>
Portable pixmap (PPM) file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Dds">
            <summary>
DirectDraw surface (DDS) file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Png">
            <summary>
Portable Network Graphics (PNG) file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Tga">
            <summary>
Truevision (Targa, or TGA) image file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Jpg">
            <summary>
Joint Photographics Experts Group (JPEG) compressed file format.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.ImageFileFormat.Bmp">
            <summary>
Windows bitmap (BMP) file format. 
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.FX">
            <summary>
Options for saving and creating effects.
</summary>
            <unmanaged>D3DXFX</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.FX.DoNotSaveSamplerState">
            <summary>
A stateblock saves state (except shaders and shader constants) when
calling Effect.Begin and restores state when calling Effect.End.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FX.DoNotSaveShaderState">
            <summary>
A stateblock saves state when calling Effect.Begin and restores state when calling Effect.End.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FX.DoNotSaveState">
            <summary>
No state is saved when calling Effect.Begin or restored when calling Effect.End. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.FX.None">
            <summary>
No flags.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Filter">
            <summary>
Flags used to specify what filters to use when processing an image.
</summary>
            <unmanaged>D3DX_FILTER</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.SrgbOut">
            <summary>
The output data is in sRGB (gamma 2.2) color space.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.SrgbIn">
            <summary>
Input data is in sRGB (gamma 2.2) color space.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.Srgb">
            <summary>
Specifying this flag is the same as specifying the SrgbIn and SrgbOut flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.Dither">
            <summary>
The resulting image must be dithered using a 4x4 ordered dither algorithm.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.Mirror">
            <summary>
Specifying this flag is the same as specifying the MirrorU, MirrorV, and MirrorW flags.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.MirrorW">
            <summary>
Pixels off the edge of the texture on the w-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.MirrorV">
            <summary>
Pixels off the edge of the texture on the v-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.MirrorU">
            <summary>
Pixels off the edge of the texture on the u-axis should be mirrored, not wrapped.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.Box">
            <summary>
Each pixel is computed by averaging a 2x2(x2) box of pixels from the source image. 
This filter works only when the dimensions of the destination are half those of the source,
as is the case with mipmaps.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.Triangle">
            <summary>
Every pixel in the source image contributes equally to the destination image. This is the slowest of the filters.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.Linear">
            <summary>
Each destination pixel is computed by sampling the four nearest pixels from the source
image. This filter works best when the scale on both axes is less than two.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.Point">
            <summary>
Each destination pixel is computed by sampling the nearest pixel from the source image.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.None">
            <summary>
No scaling or filtering will take place. Pixels outside the bounds of the source image are assumed to be transparent black.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Filter.Default">
            <summary>
Uses the default behavior.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.EventType">
            <summary>
Describes the type of events that can be keyed by the animation controller.
</summary>
            <unmanaged>D3DXEVENT_TYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.EventType.PriorityBlend">
            <summary>
Priority blend value.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.EventType.TrackEnable">
            <summary>
Enable flag.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.EventType.TrackPosition">
            <summary>
Track position.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.EventType.TrackWeight">
            <summary>
Track weight.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.EventType.TrackSpeed">
            <summary>
Track speed.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.EffectDefaultType">
            <summary>
Effect data types. The data is contained in the Value member of EffectDefault.
</summary>
            <unmanaged>D3DXEFFECTDEFAULTTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.EffectDefaultType.Dword">
            <summary>
The data type is a DWORD. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.EffectDefaultType.Floats">
            <summary>
The data type is an array of type float. The number of float types in
the array is specified by Value.Length in EffectDefault.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.EffectDefaultType.String">
            <summary>
The data type is a NULL-terminated ASCII text string. 
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CleanType">
            <summary>
Defines operations to perform on vertices in preparation for mesh cleaning.
</summary>
            <unmanaged>D3DXCLEANTYPE</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.CleanType.Simplification">
            <summary>
Use this flag to prevent infinite loops during mesh simplification operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CleanType.Optimization">
            <summary>
Use this flag to prevent infinite loops during mesh optimization operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CleanType.Skinning">
            <summary>
Use this flag to prevent infinite loops during skinning setup mesh operations.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CleanType.Bowties">
            <summary>
If a vertex is the apex of two triangle fans (a bowtie) and mesh operations will affect
one of the fans, then split the shared vertex into two new vertices. Bowties can cause problems
for operations such as mesh simplification that remove vertices, because removing one vertex
affects two distinct sets of triangles. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CleanType.BackFacing">
            <summary>
Merge triangles that share the same vertex indices but have face normals pointing
in opposite directions (back-facing triangles). Unless the triangles are not split by 
adding a replicated vertex, mesh adjacency data from the two triangles may conflict. 
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.Channel">
            <summary>
The following flags are used to specify which channels in a texture to operate on.
</summary>
            <unmanaged>D3DX_CHANNEL</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.Channel.Luminance">
            <summary>
Indicates the luminances of the red, green, and blue channels should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Channel.Alpha">
            <summary>
Indicates the alpha channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Channel.Green">
            <summary>
Indicates the green channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Channel.Blue">
            <summary>
Indicates the blue channel should be used.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.Channel.Red">
            <summary>
Indicates the red channel should be used.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.CallbackSearchFlags">
            <summary>
Flags used to obtain callback information.
</summary>
            <unmanaged>D3DXCALLBACK_SEARCH_FLAGS</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.CallbackSearchFlags.SearchBehindInitialPosition">
            <summary>
Reverse the callback search direction. 
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.CallbackSearchFlags.SearchExcludingInitialPosition">
            <summary>
Exclude callbacks located at the initial position from the search.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D9.AnimationOutputFlags">
            <summary>
Specifies which members of the <see cref="T:SlimDX.Direct3D9.AnimationOutput" /> structure are valid.
</summary>
            <unmanaged>None</unmanaged>
        </member>
        <member name="F:SlimDX.Direct3D9.AnimationOutputFlags.Rotation">
            <summary>
The rotation member is valid.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.AnimationOutputFlags.Scale">
            <summary>
The scale member is valid.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.AnimationOutputFlags.Translation">
            <summary>
The translation member is valid.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.AnimationOutputFlags.Transformation">
            <summary>
The transformation member is valid.
</summary>
        </member>
        <member name="F:SlimDX.Direct3D9.AnimationOutputFlags.None">
            <summary>
None of the members are valid.
</summary>
        </member>
        <member name="M:SlimDX.Direct3D11.PipelineStatistics.Equals(SlimDX.Direct3D11.PipelineStatistics@,SlimDX.Direct3D11.PipelineStatistics@)">
            <summary>
Returns a value indicating whether the two BufferDescriptions are equivalent.
</summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="value1" /> has the same value as <paramref name="value2" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PipelineStatistics.Equals(SlimDX.Direct3D11.PipelineStatistics)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="other">A <see cref="T:SlimDX.Direct3D11.PipelineStatistics" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="other" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PipelineStatistics.Equals(System.Object)">
            <summary>
Returns a value indicating whether this instance is equal to the specified object.
</summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> has the same value as this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PipelineStatistics.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PipelineStatistics.op_Inequality(SlimDX.Direct3D11.PipelineStatistics,SlimDX.Direct3D11.PipelineStatistics)">
            <summary>
Tests for inequality between two PipelineStatisticss.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has a different value than <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SlimDX.Direct3D11.PipelineStatistics.op_Equality(SlimDX.Direct3D11.PipelineStatistics,SlimDX.Direct3D11.PipelineStatistics)">
            <summary>
Tests for equality between two PipelineStatisticss.
</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> has the same value as <paramref name="right" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.ComputeShaderInvocations">
            <summary>
Number of times a compute shader was invoked.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.DomainShaderInvocations">
            <summary>
Number of times a domain shader was invoked.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.HullShaderInvocations">
            <summary>
Number of times a hull shader was invoked.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.PixelShaderInvocations">
            <summary>
Number of times a pixel shader was invoked.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.RenderedPrimitives">
            <summary>
Number of primitives that were rendered. This may be larger or smaller than CInvocations because after a primitive is clipped sometimes it is either broken up into more than one primitive or completely culled.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.RasterizedPrimitives">
            <summary>
Number of primitives that were sent to the rasterizer. When the rasterizer is disabled, this will not increment.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.GeometryShaderPrimitives">
            <summary>
Number of primitives output by a geometry shader.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.GeometryShaderInvocations">
            <summary>
Number of times a geometry shader was invoked. When the geometry shader is set to <c>null</c>, this statistic may or may not increment depending on the hardware manufacturer.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.VertexShaderInvocations">
            <summary>
Number of times a vertex shader was invoked. Direct3D invokes the vertex shader once per vertex.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.InputAssemblerPrimitives">
            <summary>
Number of primitives read by the input assembler. This number can be different depending on the primitive topology used. For example, a triangle strip with 6 vertices will produce 4 triangles, however a triangle list with 6 vertices will produce 2 triangles.
</summary>
        </member>
        <member name="P:SlimDX.Direct3D11.PipelineStatistics.InputAssemblerVertices">
            <summary>
Number of vertices read by input assembler.
</summary>
        </member>
        <member name="T:SlimDX.Direct3D11.PipelineStatistics">
            <summary>
Contains query information about graphics pipeline activity.
</summary>
            <unmanaged>D3D11_QUERY_DATA_PIPELINE_STATISTICS</unmanaged>
        </member>
    </members>
</doc>