<doc>
  <assembly>
    <name>Microsoft.DirectX.DirectSound</name>
  </assembly>
  <members>
    <member name="T:Microsoft.DirectX.DirectSound.AccessDeniedException">
      <summary>The request failed because access was denied.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.AccessDeniedException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.AccessDeniedException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AccessDeniedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.AccessDeniedException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AccessDeniedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.AccessDeniedException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.AllocatedException">
      <summary>The request failed because resources, such as a priority level, were already in use by another caller.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AllocatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.AllocatedException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AllocatedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.AllocatedException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AllocatedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.AllocatedException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AllocatedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.AllocatedException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BadFormatException">
      <summary>The specified wave format is not supported.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BadFormatException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadFormatException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BadFormatException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadFormatException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BadFormatException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadFormatException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BadFormatException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BadSendBufferGuidException">
      <summary>The globally unique identifier (GUID) specified in an audiopath file does not match a valid mix-in buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadSendBufferGuidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BadSendBufferGuidException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadSendBufferGuidException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BadSendBufferGuidException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadSendBufferGuidException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BadSendBufferGuidException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadSendBufferGuidException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BadSendBufferGuidException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Buffer">
      <summary>Contains methods and properties used to manage sound buffers.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Buffer.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Clone(Microsoft.DirectX.DirectSound.Device)">
      <summary>Duplicates the buffer object.</summary>
      <param name="parent">The <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object associated with the buffer.</param>
      <returns>A <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object that represents the cloned buffer.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class.</summary>
      <param name="source">A <see cref="T:System.IO.Stream" /> object that contains the source data for the buffer.</param>
      <param name="length">An integer that represents the size of the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IO.Stream,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class.</summary>
      <param name="source">A <see cref="T:System.IO.Stream" /> object that contains the source data for the buffer.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.String,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the file that contains source data for the buffer.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IO.Stream,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class.</summary>
      <param name="source">A <see cref="T:System.IO.Stream" /> object that contains the source data for the buffer.</param>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object that describes the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class.</summary>
      <param name="source">A <see cref="T:System.IO.Stream" /> object that contains the source data for the buffer.</param>
      <param name="length">An integer that represents the size of the buffer to create.</param>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object that describes the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.String,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the file that contains source data for the buffer.</param>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object that describes the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundBuffer8, which allows unmanaged COM clients to create an instance of the managed buffer class. Not supported.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class.</summary>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object that describes the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.GetCurrentPosition(System.Int32@,System.Int32@)">
      <summary>Retrieves the position of the play and write cursors in the sound buffer.</summary>
      <param name="currentPlayPosition">An integer that receives the offset, in bytes, of the play cursor position in the sound buffer.</param>
      <param name="currentWritePosition">An integer that receives the offset, in bytes, of the write cursor position in the sound buffer.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundBuffer8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.op_Equality(Microsoft.DirectX.DirectSound.Buffer,Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.op_Inequality(Microsoft.DirectX.DirectSound.Buffer,Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Play(System.Int32,Microsoft.DirectX.DirectSound.BufferPlayFlags)">
      <summary>Begin playing the sound buffer, starting at the play cursor.</summary>
      <param name="priority">An integer that represents the Priority for the sound, used by the voice manager when assigning hardware mixing resources. The lowest priority is 0, and the highest priority is 0xFFFFFFFF. If the buffer was created with the <see cref="P:Microsoft.DirectX.DirectSound.BufferCaps.LocationDefer" /> property set to false, this value must be 0.</param>
      <param name="flags">One or more <see cref="T:Microsoft.DirectX.DirectSound.BufferPlayFlags" /> enumerated values.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.Buffer.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Read(System.Int32,System.Type,Microsoft.DirectX.DirectSound.LockFlag,System.Int32[])">
      <summary>Reads the current data in the buffer.</summary>
      <param name="bufferStartingLocation">An integer that represents the offet, in bytes, of where to begin reading from the buffer. This parameter is ignored if <see cref="F:Microsoft.DirectX.DirectSound.LockFlag.LockFlag.FromWriteCursor" /> is specified in the <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Read" /> parameter.</param>
      <param name="returnedDataType">Value that indicates the <see cref="T:System.Type" /> of the returned array.</param>
      <param name="flag">A <see cref="T:Microsoft.DirectX.DirectSound.LockFlag" /> enumerated value that describes the type of lock to perform.</param>
      <param name="ranks">Array of one to three <see cref="T:System.Int32" /> values that indicate the dimensions of the returning Array. The maximum number of <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Read" /> allowed is three.</param>
      <returns>An <see cref="T:System.Array" /> of type returnDataType that contains the data read from the buffer.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Read(System.Int32,System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Reads the current data in the buffer.</summary>
      <param name="bufferStartingLocation">An integer that represents the offet, in bytes, of where to begin reading from the buffer. This parameter is ignored if <see cref="F:Microsoft.DirectX.DirectSound.LockFlag.LockFlag.FromWriteCursor" /> is specified in the <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Read" /> parameter.</param>
      <param name="data">A <see cref="T:System.IO.Stream" /> object that receives the data read from the buffer.</param>
      <param name="numberBytesToRead">An integer that represents the number of bytes read into <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Read" /> from the buffer. The buffer is conceptually circular, so this number can exceed the number of bytes between <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Read" /> and the end of the buffer.</param>
      <param name="flag">A <see cref="T:Microsoft.DirectX.DirectSound.LockFlag" /> enumerated value that describes the type of lock to perform.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Restore">
      <summary>Restores the memory allocation for a lost sound buffer.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.SetCurrentPosition(System.Int32)">
      <summary>Sets the position of the play cursor, which is the point at which the next byte of data is read from the buffer.</summary>
      <param name="newPosition">An integer that represents the offset of the play cursor, in bytes, from the beginning of the buffer.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Stop">
      <summary>Causes the sound buffer to stop playing.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Write(System.Int32,System.Array,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Writes data to the buffer.</summary>
      <param name="bufferStartingLocation">An integer that represents the offet, in bytes, of where to begin writing into the buffer.</param>
      <param name="data">An <see cref="T:System.Array" /> that contains the data to write into the buffer.</param>
      <param name="flag">A <see cref="T:Microsoft.DirectX.DirectSound.LockFlag" /> enumerated value that describes the type of lock to perform.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Write(System.Int32,System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Writes data to the buffer.</summary>
      <param name="bufferStartingLocation">An integer that represents the offet, in bytes, of where to begin writing into the buffer.</param>
      <param name="data">A <see cref="T:System.IO.Stream" /> object that contains the data to write into the buffer.</param>
      <param name="numberBytesToWrite">An integer that represents the number of bytes to write into the buffer.</param>
      <param name="flag">A <see cref="T:Microsoft.DirectX.DirectSound.LockFlag" /> enumerated value that describes the type of lock to perform.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Caps">
      <summary>Retrieves the capabilities of the buffer object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Format">
      <summary>Retrieves or sets a description of the sound data format in the buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Frequency">
      <summary>Retrieves or sets the frequency, in samples per second, at which the buffer is playing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.NotVirtualized">
      <summary>Retrieves a value that indicates whether the buffer is virtualized.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Pan">
      <summary>Retrieves or sets the relative volume of the left and right audio channels.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.PlayPosition">
      <summary>Retrieves the position of the play cursor in the sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Status">
      <summary>Retrieves the status of the sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Volume">
      <summary>Retrieves or sets the attenuation of the sound.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.WritePosition">
      <summary>Retrieves the position of the write cursor in the sound buffer.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Buffer3D">
      <summary>Contains methods and properties used to retrieve and set parameters that describe the position, orientation, and environment of a sound buffer in 3-D space.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Buffer3D.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.Buffer3D.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> class.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSound3DBuffer8, which allows unmanaged COM clients to create an instance of the managed buffer class. Not supported.</param>
      <param name="buff">A <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object to associate with a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" />.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> class.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSound3DBuffer8, which allows unmanaged COM clients to create an instance of the managed buffer class. Not supported.</param>
      <param name="buff">A <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object to associate with a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" />.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.#ctor(Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> class.</summary>
      <param name="lp">A <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object to associate with a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" />.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.#ctor(Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> class.</summary>
      <param name="lp">A <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object to associate with a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" />.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSound3DBuffer8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.op_Equality(Microsoft.DirectX.DirectSound.Buffer3D,Microsoft.DirectX.DirectSound.Buffer3D)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.op_Inequality(Microsoft.DirectX.DirectSound.Buffer3D,Microsoft.DirectX.DirectSound.Buffer3D)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.Buffer3D.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.AllParameters">
      <summary>Retrieves or sets the 3-D properties of the sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.ConeAngles">
      <summary>Retrieves or sets the inside and outside angles of the sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.ConeOrientation">
      <summary>Retrieves or sets the orientation of the sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.ConeOutsideVolume">
      <summary>Retrieves or sets the amount of attenuation to apply to the sound outside of the sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Deferred">
      <summary>Determines whether changes to the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> object are deferred or applied immediately.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.MaxDistance">
      <summary>Retrieves or sets the maximum distance, from the listener, beyond which sounds in this buffer are no longer attenuated.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.MinDistance">
      <summary>Retrieves or sets the minimum distance, from the listener, at which sounds in this buffer begin to be attenuated.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Mode">
      <summary>Retrieves or sets the operation mode for 3-D sound processing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Position">
      <summary>Retrieves or sets the position of the sound source.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Velocity">
      <summary>Retrieves or sets the velocity of the sound source.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferDescription">
      <summary>Contains properties and methods that describe the characteristics of a new buffer object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferDescription.#ctor(Microsoft.DirectX.DirectSound.WaveFormat)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> class.</summary>
      <param name="wfx">A <see cref="T:Microsoft.DirectX.DirectSound.WaveFormat" /> object that defines the format of waveform-audio data.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> class.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferDescription.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferDescription.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.BufferBytes">
      <summary>Retrieves or sets the size of the new buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.CanGetCurrentPosition">
      <summary>Determines whether the application can get a more accurate play cursor.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Control3D">
      <summary>Determines whether the buffer has 3-D control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlEffects">
      <summary>Specifies whether the buffer supports effects processing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlFrequency">
      <summary>Specifies whether the buffer has frequency control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlPan">
      <summary>Specifies whether the buffer has pan control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlPositionNotify">
      <summary>Specifies whether the buffer has position notification capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlVolume">
      <summary>Specifies whether the buffer has volume control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.DeferLocation">
      <summary>Specifies whether the buffer can be assigned to a hardware or software resource at play time.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Flags">
      <summary>Retrieves or sets the capabilities of the buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Format">
      <summary>Retrieves or sets the the waveform format for the buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.GlobalFocus">
      <summary>Specifies whether the buffer is a global sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Guid3DAlgorithm">
      <summary>Retrieves or sets the unique identifier of the two-speaker virtualization algorithm to be used by DirectSound3D hardware emulation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.LocateInHardware">
      <summary>Specifies whether the buffer must use hardware mixing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.LocateInSoftware">
      <summary>Specifies whether the buffer must use software memory and use software mixing, even if <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.StaticBuffer" /> is specified and hardware resources are available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Mute3DAtMaximumDistance">
      <summary>Specifies whether the sound is reduced to silence at the maximum distance.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.PrimaryBuffer">
      <summary>Specifies whether the buffer is a primary sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.StaticBuffer">
      <summary>Specifies whether the buffer is placed in on-board hardware memory, if available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.StickyFocus">
      <summary>Specifies whether the buffer has sticky focus.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferLostException">
      <summary>The buffer memory has been lost and must be restored.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferLostException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferLostException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferLostException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferLostException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferLostException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferLostException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferLostException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferTooSmallException">
      <summary>The buffer size is not large enough to enable effects processing.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferTooSmallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferTooSmallException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferTooSmallException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferTooSmallException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferTooSmallException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferTooSmallException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferTooSmallException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferTooSmallException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Capture">
      <summary>Contains properties and methods used to create sound capture buffers.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Capture.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.Capture.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundCapture8, which allows unmanaged COM clients to create an instance of the managed <see cref="M:Microsoft.DirectX.DirectSound.Capture.#ctor" /> class. Not supported.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> class using the Microsoft DirectSound capture device specified by its device globally unique identifier (GUID).</summary>
      <param name="guidDev">The Microsoft DirectSound capture device's globally unique identifier (GUID).</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> class using the default Microsoft DirectSound capture device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundCapture8 , which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.op_Equality(Microsoft.DirectX.DirectSound.Capture,Microsoft.DirectX.DirectSound.Capture)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.op_Inequality(Microsoft.DirectX.DirectSound.Capture,Microsoft.DirectX.DirectSound.Capture)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.Capture.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Capture.Caps">
      <summary>Retrieves the capabilities of the capture device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Capture.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect">
      <summary>Represents a Microsoft DirectSound capture effects object used to set and retrieve parameters on a capture buffer that supports acoustic echo cancellation. This object requires Microsoft Windows XP or later.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundCaptureFXAec8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.op_Equality(Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect,Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.op_Inequality(Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect,Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Reset">
      <summary>Resets the effect to its initial state.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.AllParameters">
      <summary>Retrieves or sets capture acoustic echo cancellation parameters of a <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Status">
      <summary>Retrieves the status of the capture acoustic echo cancellation effect.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureBuffer">
      <summary>Contains properties and methods used to manipulate sound capture buffers.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.CaptureBuffer.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.Capture)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundCaptureBuffer8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> class. Not supported.</param>
      <param name="device">The <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object that represents the parent capture device to use with the capture buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.#ctor(Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.Capture)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> class.</summary>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.CaptureBufferDescription" /> structure that describes the capture buffer to create.</param>
      <param name="parent">The <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> object that represents the parent capture device to use with the capture buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetCurrentPosition(System.Int32@,System.Int32@)">
      <summary>Retrieves the position of the capture and read cursors in the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
      <param name="currentCapturePosition">An integer that receives the offset, in bytes, of the capture cursor position in the capture buffer.</param>
      <param name="currentReadPosition">An integer that receives the offset, in bytes, of the read cursor position in the capture buffer.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetEffectsStatus(System.Int32)">
      <summary>Retrieves the status of capture effects.</summary>
      <param name="numEffects">The number of capture effects to retrieve.</param>
      <returns>An array of values from the <see cref="T:Microsoft.DirectX.DirectSound.CaptureEffectsReturnValue" /> enumeration that describe the status of capture effects in the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundCaptureBuffer8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetObjectInPath(System.Guid,System.Int32,System.Guid)">
      <summary>Retrieves a capture effect object associated with the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
      <param name="guidObject">Unique class identifier of the object being searched for, such as <see cref="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsMsAcousticEchoCancellation" />.</param>
      <param name="index">Index of the capture effect to retrieve from the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</param>
      <param name="guidInterface">Unique identifier of the desired interface, such as <see cref="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceCaptureEffectsAcousticEchoCancellation" />.</param>
      <returns>A capture effect used by the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.op_Equality(Microsoft.DirectX.DirectSound.CaptureBuffer,Microsoft.DirectX.DirectSound.CaptureBuffer)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.op_Inequality(Microsoft.DirectX.DirectSound.CaptureBuffer,Microsoft.DirectX.DirectSound.CaptureBuffer)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.CaptureBuffer.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read(System.Int32,System.Type,Microsoft.DirectX.DirectSound.LockFlag,System.Int32[])">
      <summary>Reads current data in the capture buffer.</summary>
      <param name="bufferStartingLocation">An integer that represents the offet, in bytes, of where to begin reading from the capture buffer. This parameter is ignored if <see cref="F:Microsoft.DirectX.DirectSound.LockFlag.LockFlag.FromWriteCursor" /> is specified in the <see cref="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read" /> parameter.</param>
      <param name="returnedDataType">Value that indicates the <see cref="T:System.Type" /> of the returned array.</param>
      <param name="flag">A <see cref="T:Microsoft.DirectX.DirectSound.LockFlag" /> enumerated value that describes the type of lock to perform.</param>
      <param name="ranks">Array of one to three <see cref="T:System.Int32" /> values that indicate the dimensions of the returning Array. The maximum number of <see cref="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read" /> allowed is three.</param>
      <returns>An <see cref="T:System.Array" /> of type <see cref="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read" /> that contains the data read from the buffer.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read(System.Int32,System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Reads current data in the capture buffer.</summary>
      <param name="bufferStartingLocation">An integer that represents the offet, in bytes, of where to begin reading from the capture buffer. This parameter is ignored if <see cref="F:Microsoft.DirectX.DirectSound.LockFlag.LockFlag.FromWriteCursor" /> is specified in the <see cref="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read" /> parameter.</param>
      <param name="data">A <see cref="T:System.IO.Stream" /> object that receives the data read from the capture buffer.</param>
      <param name="numberBytesToRead">An integer that represents the number of bytes read into <see cref="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read" /> from the buffer. The buffer is conceptually circular, so this number can exceed the number of bytes between <see cref="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read" /> and the end of the buffer.</param>
      <param name="flag">A <see cref="T:Microsoft.DirectX.DirectSound.LockFlag" /> enumerated value that describes the type of lock to perform.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Start(System.Boolean)">
      <summary>Begins capturing data into the buffer.</summary>
      <param name="looping">Set to true if, after the end of the buffer is reached, capture restarts at the beginning and continues until explicitly stopped; otherwise, false.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Stop">
      <summary>Stops the buffer so that it is no longer capturing data.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Write(System.Int32,System.Array,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Writes data to the capture buffer.</summary>
      <param name="bufferStartingLocation">An integer that represents the offet, in bytes, of where to begin writing into the capture buffer.</param>
      <param name="data">An <see cref="T:System.Array" /> that contains the data to write into the capture buffer.</param>
      <param name="flag">A <see cref="T:Microsoft.DirectX.DirectSound.LockFlag" /> enumerated value that describes the type of lock to perform.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Write(System.Int32,System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Writes data to the capture buffer.</summary>
      <param name="bufferStartingLocation">An integer that represents the offet, in bytes, of where to begin writing into the capture buffer.</param>
      <param name="data">A <see cref="T:System.IO.Stream" /> object that contains the data to write into the capture buffer.</param>
      <param name="numberBytesToWrite">An integer that represents the number of bytes to write into the capture buffer.</param>
      <param name="flag">A <see cref="T:Microsoft.DirectX.DirectSound.LockFlag" /> enumerated value that describes the type of lock to perform.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Caps">
      <summary>Retrieves the capabilities of the capture buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Capturing">
      <summary>Retrieves whether the capture buffer is currently capturing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Format">
      <summary>Retrieves the waveform format of the capture buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Looping">
      <summary>Retrieves whether the capture buffer is currently looping.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structures for each available capture device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.GetEnumerator">
      <summary>Retrieves an enumerator for the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> object.</summary>
      <returns>An enumerator for the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> object.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.MoveNext">
      <summary>Advances to the next <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structure in the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> object.</summary>
      <returns>Returns true if the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> object was successfully advanced, and false if the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> object has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.Reset">
      <summary>Sets the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> object to its initial position.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.Count">
      <summary>Gets the number of <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structures in the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.Current">
      <summary>Gets the current element from the enumeration of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.Item(System.Int32)">
      <summary>Retrieves a <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structure at a particular index.</summary>
      <param name="index">The index of the <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structure to retrieve.</param>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect">
      <summary>Represents a Microsoft DirectSound capture effects object used to set and retrieve parameters on a capture buffer that supports noise suppression. This object requires Microsoft Windows XP or later.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundCaptureFXNoiseSuppress8 , which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.op_Equality(Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect,Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.op_Inequality(Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect,Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Reset">
      <summary>Resets the effect to its initial state.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.AllParameters">
      <summary>Retrieves or sets capture noise suppress parameters of a <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.ChorusEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports chorus.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.ChorusEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.ChorusEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.DelayMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Delay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.DelayMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Delay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.DepthMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Depth" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.DepthMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Depth" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.FeedbackMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Feedback" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.FeedbackMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Feedback" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.FrequencyMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Frequency" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.FrequencyMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Frequency" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.Phase180">
      <summary>Retrieves the value of 180 degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.Phase90">
      <summary>Retrieves the value of 90 degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseNegative180">
      <summary>Retrieves the value of negative 180 degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseNegative90">
      <summary>Retrieves the value of negative 90 degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseZero">
      <summary>Retrieves the value of no phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.WaveSin">
      <summary>Retrieves the value for a sine waveform for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Waveform" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.WaveTriangle">
      <summary>Retrieves the value for a triangle waveform for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.Waveform" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.WetDryMixMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.WetDryMix" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.WetDryMixMin">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsChorus.WetDryMix" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXChorus8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> class. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXChorus8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.op_Equality(Microsoft.DirectX.DirectSound.ChorusEffect,Microsoft.DirectX.DirectSound.ChorusEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.op_Inequality(Microsoft.DirectX.DirectSound.ChorusEffect,Microsoft.DirectX.DirectSound.ChorusEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.ChorusEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.ChorusEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.ChorusEffect.AllParameters">
      <summary>Retrieves or sets chorus parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.ChorusEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CompressorEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports compression.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.CompressorEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.CompressorEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.AttackMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Attack" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.AttackMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Attack" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.GainMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Gain" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.GainMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Gain" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.PreDelayMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Predelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.PreDelayMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Predelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.RatioMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Ratio" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.RatioMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Ratio" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.ReleaseMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Release" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.ReleaseMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Release" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.ThresholdMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Threshold" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.ThresholdMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Threshold" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXCompressor8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> class. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXCompressor8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.op_Equality(Microsoft.DirectX.DirectSound.CompressorEffect,Microsoft.DirectX.DirectSound.CompressorEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.op_Inequality(Microsoft.DirectX.DirectSound.CompressorEffect,Microsoft.DirectX.DirectSound.CompressorEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.CompressorEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.CompressorEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CompressorEffect.AllParameters">
      <summary>Retrieves or sets compression parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CompressorEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.ControlUnavailableException">
      <summary>The buffer control (volume, pan, and so on) requested by the caller is not available. Controls must be specified when the buffer is created.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ControlUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ControlUnavailableException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ControlUnavailableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ControlUnavailableException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ControlUnavailableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ControlUnavailableException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ControlUnavailableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ControlUnavailableException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Device">
      <summary>Contains methods and properties used to create buffer objects, manage devices, and set up the environment.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Device.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.Device.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.Compact">
      <summary>This method has no effect.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> class.</summary>
      <param name="lp">Pointer to the unmanaged interface, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Device" /> class. Not supported.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> class.</summary>
      <param name="guidDev">The <see cref="T:System.Guid" /> of the device to create an instanse of. See Remarks.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> class.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSound8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Device" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.op_Equality(Microsoft.DirectX.DirectSound.Device,Microsoft.DirectX.DirectSound.Device)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.op_Inequality(Microsoft.DirectX.DirectSound.Device,Microsoft.DirectX.DirectSound.Device)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.Device.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.SetCooperativeLevel(System.IntPtr,Microsoft.DirectX.DirectSound.CooperativeLevel)">
      <summary>Sets the cooperative level of the application for this sound device.</summary>
      <param name="owner" />
      <param name="level">The requested cooperative level. Specify one of the values shown in the following table</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.SetCooperativeLevel(System.Windows.Forms.Control,Microsoft.DirectX.DirectSound.CooperativeLevel)">
      <summary>Sets the cooperative level of the application for this sound device.</summary>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> of the application that is using the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object.</param>
      <param name="level">The requested cooperative level. Specify one of the values shown in the following table</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Device.Caps">
      <summary>Retrieves the capabilities of the hardware device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Device.Certified">
      <summary>Ascertains whether the device driver is certified for Microsoft DirectX.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Device.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Device.SpeakerConfig">
      <summary>Retrieves or sets the speaker configuration of the device.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.DevicesCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structures for each available sound device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DevicesCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.DevicesCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DevicesCollection.GetEnumerator">
      <summary>Retrieves an enumerator for the <see cref="T:Microsoft.DirectX.DirectSound.DevicesCollection" /> object.</summary>
      <returns>An enumerator for the <see cref="T:Microsoft.DirectX.DirectSound.DevicesCollection" /> object.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DevicesCollection.MoveNext">
      <summary>Advances to the next <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structure in the <see cref="T:Microsoft.DirectX.DirectSound.DevicesCollection" /> object.</summary>
      <returns>Indicates if <see cref="T:Microsoft.DirectX.DirectSound.DevicesCollection" /> successfully advanced to the next <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structure.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DevicesCollection.Reset">
      <summary>Sets the <see cref="T:Microsoft.DirectX.DirectSound.DevicesCollection" /> object to its initial position.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DevicesCollection.Count">
      <summary>Gets the number of <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structures in the <see cref="T:Microsoft.DirectX.DirectSound.DevicesCollection" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DevicesCollection.Current">
      <summary>Retrives the element at the current position of the <see cref="T:Microsoft.DirectX.DirectSound.DevicesCollection" /> object's enumeration.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DevicesCollection.Item(System.Int32)">
      <summary>Retrieves a <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structure at a particular index.</summary>
      <param name="index">The index of the <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structure to retrieve.</param>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.DistortionEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports distortion.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.DistortionEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.DistortionEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.EdgeMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.Edge" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.EdgeMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.Edge" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.GainMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.Gain" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.GainMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.Gain" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PostEqBandwidthMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PostEqBandwidth" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PostEqBandwidthMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PostEqBandwidth" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PostEqCenterFrequencyMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PostEqCenterFrequency" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PostEqCenterFrequencyMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PostEqCenterFrequency" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PreLowPassCutoffMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PreLowpassCutoff" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PreLowPassCutoffMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PreLowpassCutoff" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXDistortion8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> class. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXDistortion8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.op_Equality(Microsoft.DirectX.DirectSound.DistortionEffect,Microsoft.DirectX.DirectSound.DistortionEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.op_Inequality(Microsoft.DirectX.DirectSound.DistortionEffect,Microsoft.DirectX.DirectSound.DistortionEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.DistortionEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.DistortionEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DistortionEffect.AllParameters">
      <summary>Retrieves or sets distortion parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DistortionEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.DSoundHelper">
      <summary>Contains helper methods and fields for Microsoft DirectSound.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsClassAcousticEchoCancellation">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the acoustic echo cancellation capture effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsClassNoiseSuppression">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the noise suppression capture effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsMsAcousticEchoCancellation">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the Microsoft acoustic echo cancellation capture effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsMsNoiseSuppression">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the Microsoft noise suppression capture effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsSystemAcousticEchoCancellation">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the system acoustic echo cancellation capture effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsSystemNoiseSuppression">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the system noise suppression capture effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultCaptureDevice">
      <summary>Retrieves the globally unique identifier (GUID) for the system-wide default audio capture device.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultConeAngle">
      <summary>Retrieves the default cone angle for an <see cref="T:Microsoft.DirectX.DirectSound.Angles" /> structure, in degrees.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultConeOutsideVolume">
      <summary>Retrieves the default outside cone angle for an <see cref="T:Microsoft.DirectX.DirectSound.Angles" /> structure, in degrees.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultDistanceFactor">
      <summary>Retrieves the default distance factor used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DistanceFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultDopplerFactor">
      <summary>Retrieves the default ratio of Doppler effect to that in the real world used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DopplerFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DopplerFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultMaxDistance">
      <summary>Retrieves the default maximum distance used by the <see cref="P:Microsoft.DirectX.DirectSound.Buffer3D.MaxDistance" /> and <see cref="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.MaxDistance" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultMinDistance">
      <summary>Retrieves the default minimum distance used by the <see cref="P:Microsoft.DirectX.DirectSound.Buffer3D.MinDistance" /> and <see cref="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.MinDistance" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultPlaybackDevice">
      <summary>Retrieves the globally unique identifier (GUID) for the system-wide default audio playback device.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultRolloffFactor">
      <summary>Retrieves the default ratio of attenuation over distance to that in the real world used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.RolloffFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.RolloffFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultVoiceCaptureDevice">
      <summary>Retrieves the globally unique identifier (GUID) for the default voice capture device.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultVoicePlaybackDevice">
      <summary>Retrieves the globally unique identifier (GUID) for the default voice playback device.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Guid3DAlgorithmDefault">
      <summary>Retrieves the default 3-D algorithm used by the <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.Guid3DAlgorithm" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Guid3DAlgorithmHrtfFull">
      <summary>Retrieves the high quality 3-D algorithm used by the <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.Guid3DAlgorithm" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Guid3DAlgorithmHrtfLight">
      <summary>Retrieves the efficient 3-D algorithm used by the <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.Guid3DAlgorithm" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Guid3DAlgorithmNoVirtualization">
      <summary>Retrieves the 3-D algorithm used by the <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.Guid3DAlgorithm" /> property that is mapped onto normal left and right stereo panning.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.GuidAllObjects">
      <summary>Retrieves the globally unique identifier (GUID) that can represent any Microsoft DirectSound effect class identifier.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Interface3DBuffer">
      <summary>Retrieves the globally unique identifier (GUID) for the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3D" /> interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Interface3DListener">
      <summary>Retrieves the globally unique identifier (GUID) for the <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceBuffer">
      <summary>Retrieves the globally unique identifier (GUID) for the <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceCaptureBuffer">
      <summary>Retrieves the globally unique identifier (GUID) for the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceCaptureEffectsAcousticEchoCancellation">
      <summary>Retrieves the globally unique identifier (GUID) for the acoustic echo cancellation capture effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceCaptureEffectsNoiseSuppress">
      <summary>Retrieves the globally unique identifier (GUID) for the noise suppression capture effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceDirectSound">
      <summary>Retrieves the globally unique identifier (GUID) for the <see cref="N:Microsoft.DirectX.DirectSound" /> interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceDirectSoundCapture">
      <summary>Retrieves the globally unique identifier (GUID) for the <see cref="T:Microsoft.DirectX.DirectSound.Capture" /> interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsChorus">
      <summary>Retrieves the globally unique identifier (GUID) for the chorus effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsCompressor">
      <summary>Retrieves the globally unique identifier (GUID) for the compressor effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsDistortion">
      <summary>Retrieves the globally unique identifier (GUID) for the distortion effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsEcho">
      <summary>Retrieves the globally unique identifier (GUID) for the echo effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsFlanger">
      <summary>Retrieves the globally unique identifier (GUID) for the flanger effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsGargle">
      <summary>Retrieves the globally unique identifier (GUID) for the gargle effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsInteractive3DLevel2Reverb">
      <summary>Retrieves the globally unique identifier (GUID) for the interactive 3-D level2 reverb effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsParamEq">
      <summary>Retrieves the globally unique identifier (GUID) for the parameteric equalizer effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsWavesReverb">
      <summary>Retrieves the globally unique identifier (GUID) for the Waves reverb effect interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceNotify">
      <summary>Retrieves the globally unique identifier (GUID) for the <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceSecondaryBuffer">
      <summary>Retrieves the globally unique identifier (GUID) for the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> interface.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MaxConeAngle">
      <summary>Retrieves the maximum cone angle for an <see cref="T:Microsoft.DirectX.DirectSound.Angles" /> structure, in degrees.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MaxDistanceFactor">
      <summary>Retrieves the maximum distance factor used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DistanceFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MaxDopplerFactor">
      <summary>Retrieves the maximum ratio of Doppler effect to that in the real world used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DopplerFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DopplerFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MaxRolloffFactor">
      <summary>Retrieves the maximum ratio of attenuation over distance to that in the real world used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.RolloffFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.RolloffFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MinConeAngle">
      <summary>Retrieves the minimum cone angle for an <see cref="T:Microsoft.DirectX.DirectSound.Angles" /> structure, in degrees.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MinDistanceFactor">
      <summary>Retrieves the minimum distance factor used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DistanceFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MinDopplerFactor">
      <summary>Retrieves the minimum ratio of Doppler effect to that in the real world used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DopplerFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DopplerFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MinRolloffFactor">
      <summary>Retrieves the minimum ratio of attenuation over distance to that in the real world used by the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.RolloffFactor" /> and <see cref="P:Microsoft.DirectX.DirectSound.Listener3DSettings.RolloffFactor" /> properties, in meters.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardChorusGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the chorus effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardCompressorGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the compressor effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardDistortionGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the distortion effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardEchoGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the echo effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardFlangerGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the flanger effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardGargleGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the gargle effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardInteractive3DLevel2ReverbGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the interactive 3-D level2 reverb effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardParamEqGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the parameteric equalizer effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardWavesReverbGuid">
      <summary>Retrieves the globally unique identifier (GUID) class identifier for the Waves reverb effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DSoundHelper.GetObjectFromInterfaceGuid(System.IntPtr,System.Guid,System.Object)">
      <summary>Retrieves an object based on an interface globally unique identifier (GUID).</summary>
      <param name="lpVal">The pointer to the unmanaged Component Object Model (COM) interface of the requested object.</param>
      <param name="iid">The interface globally unique identifier (GUID) of the requested object.</param>
      <param name="source">The parent object of the requested object (see Remarks).</param>
      <returns>Returns the object that is requested.</returns>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EchoEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports echo.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.EchoEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.EchoEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.FeedbackMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.Feedback" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.FeedbackMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.Feedback" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.LeftDelayMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.LeftDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.LeftDelayMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.LeftDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.PanDelayMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.PanDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.PanDelayMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.PanDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.RightDelayMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.RightDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.RightDelayMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.RightDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.WetDryMixMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.WetDryMix" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.WetDryMixMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsEcho.WetDryMix" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXEcho8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> class. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXEcho8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.op_Equality(Microsoft.DirectX.DirectSound.EchoEffect,Microsoft.DirectX.DirectSound.EchoEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.op_Inequality(Microsoft.DirectX.DirectSound.EchoEffect,Microsoft.DirectX.DirectSound.EchoEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.EchoEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EchoEffect.AllParameters">
      <summary>Retrieves or sets echo parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EchoEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsUnavailableException">
      <summary>The effects requested could not be found on the system, or they are in the wrong order or in the wrong location; for example, an effect expected in hardware was found in software.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsUnavailableException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsUnavailableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsUnavailableException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsUnavailableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsUnavailableException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsUnavailableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsUnavailableException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.FlangerEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports flange.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.FlangerEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.FlangerEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.DelayMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Delay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.DelayMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Delay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.DepthMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Depth" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.DepthMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Depth" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.FeedbackMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Feedback" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.FeedbackMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Feedback" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.FrequencyMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Frequency" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.FrequencyMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Frequency" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.Phase180">
      <summary>Retrieves the value of 180 degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.Phase90">
      <summary>Retrieves the value of 90 degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseNeg180">
      <summary>Retrieves the value of negative 180 degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseNeg90">
      <summary>Retrieves the value of negative 90 degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseZero">
      <summary>Retrieves the value of zero degrees of phase differential for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.WaveSin">
      <summary>Retrieves the value for a sine waveform for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Waveform" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.WaveTriangle">
      <summary>Retrieves the value for a triangle waveform for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Waveform" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.WetDryMixMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.WetDryMix" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.WetDryMixMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsFlanger.WetDryMix" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXFlanger8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> class. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXFlanger8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.op_Equality(Microsoft.DirectX.DirectSound.FlangerEffect,Microsoft.DirectX.DirectSound.FlangerEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.op_Inequality(Microsoft.DirectX.DirectSound.FlangerEffect,Microsoft.DirectX.DirectSound.FlangerEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.FlangerEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.FlangerEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.FlangerEffect.AllParameters">
      <summary>Retrieves or sets flanger parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.FlangerEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.FullDuplex">
      <summary>Represents a full-duplex stream.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.FullDuplex.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.FullDuplex.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.FullDuplex" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor(Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.BufferDescription,System.Windows.Forms.Control,Microsoft.DirectX.DirectSound.CooperativeLevel,Microsoft.DirectX.DirectSound.CaptureBuffer@,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
      <summary>Initializes a new instance of the <see cref="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor" /> class.</summary>
      <param name="captureDesc">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBufferDescription" /> that specifies the characteristics of the capture buffer.</param>
      <param name="bufferDesc">The <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> that specifies the characteristics of the render buffer.</param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> that is the application window.</param>
      <param name="level">Cooperative level for the device.</param>
      <param name="captureBuffer">A reference to the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object that is used for capturing audio data.</param>
      <param name="buffer">A reference to the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that is used for rendering audio data.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor(System.Guid,System.Guid,Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.BufferDescription,System.Windows.Forms.Control,Microsoft.DirectX.DirectSound.CooperativeLevel,Microsoft.DirectX.DirectSound.CaptureBuffer@,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
      <summary>Initializes a new instance of the <see cref="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor" /> class.</summary>
      <param name="guidCapture">The globally unique identifier (GUID) of the capture device driver.</param>
      <param name="guidRender">The globally unique identifier (GUID) of the render device driver.</param>
      <param name="captureDesc">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBufferDescription" /> that specifies the characteristics of the capture buffer.</param>
      <param name="bufferDesc">The <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> that specifies the characteristics of the render buffer.</param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> that is the application window.</param>
      <param name="level">Cooperative level for the device.</param>
      <param name="captureBuffer">A reference to the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object that is used for capturing audio data.</param>
      <param name="buffer">A reference to the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that is used for rendering audio data.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor(Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.BufferDescription,System.IntPtr,Microsoft.DirectX.DirectSound.CooperativeLevel,Microsoft.DirectX.DirectSound.CaptureBuffer@,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
      <summary>Initializes a new instance of the <see cref="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor" /> class.</summary>
      <param name="captureDesc">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBufferDescription" /> that specifies the characteristics of the capture buffer.</param>
      <param name="bufferDesc">The <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> that specifies the characteristics of the render buffer.</param>
      <param name="owner">The handle of the application window.</param>
      <param name="level">Cooperative level for the device.</param>
      <param name="captureBuffer">A reference to the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object that is used for capturing audio data.</param>
      <param name="buffer">A reference to the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that is used for rendering audio data.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor(System.Guid,System.Guid,Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.BufferDescription,System.IntPtr,Microsoft.DirectX.DirectSound.CooperativeLevel,Microsoft.DirectX.DirectSound.CaptureBuffer@,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
      <summary>Initializes a new instance of the <see cref="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor" /> class.</summary>
      <param name="guidCapture">The globally unique identifier (GUID) of the capture device driver.</param>
      <param name="guidRender">The globally unique identifier (GUID) of the render device driver.</param>
      <param name="captureDesc">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBufferDescription" /> that specifies the characteristics of the capture buffer.</param>
      <param name="bufferDesc">The <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> that specifies the characteristics of the render buffer.</param>
      <param name="owner">The handle of the application window.</param>
      <param name="level">Cooperative level for the device.</param>
      <param name="captureBuffer">A reference to the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object that is used for capturing audio data.</param>
      <param name="buffer">A reference to the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that is used for rendering audio data.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.FullDuplex" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.FullDuplex" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.op_Equality(Microsoft.DirectX.DirectSound.FullDuplex,Microsoft.DirectX.DirectSound.FullDuplex)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.FullDuplex" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.FullDuplex" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.op_Inequality(Microsoft.DirectX.DirectSound.FullDuplex,Microsoft.DirectX.DirectSound.FullDuplex)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.FullDuplex" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.FullDuplex" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.FullDuplex.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.FullDuplex.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.GargleEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports amplitude modulation.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.GargleEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.GargleEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.GargleEffect.RateHzMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsGargle.RateHz" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.GargleEffect.RateHzMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsGargle.RateHz" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.GargleEffect.WaveSquare">
      <summary>Retrieves the value for a square modulation waveform for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsGargle.WaveShape" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.GargleEffect.WaveTriangle">
      <summary>Retrieves the value for a triangle modulation waveform for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsGargle.WaveShape" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXGargle8 Interface, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> class. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXGargle8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.op_Equality(Microsoft.DirectX.DirectSound.GargleEffect,Microsoft.DirectX.DirectSound.GargleEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.op_Inequality(Microsoft.DirectX.DirectSound.GargleEffect,Microsoft.DirectX.DirectSound.GargleEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.GargleEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.GargleEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.GargleEffect.AllParameters">
      <summary>Retrieves or sets gargle parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.GargleEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports Interactive 3-D Audio Level 2 (I3DL2) reverberation effects.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayHfRatioDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayHfRatio" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayHfRatioMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayHfRatio" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayHfRatioMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayHfRatio" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayTimeDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayTime" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayTimeMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayTime" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayTimeMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayTime" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DensityDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Density" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DensityMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Density" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DensityMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Density" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DiffusionDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Diffusion" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DiffusionMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Diffusion" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DiffusionMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Diffusion" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.HfReferenceDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.HfReference" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.HfReferenceMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.HfReference" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.HfReferenceMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.HfReference" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.QualityDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Quality" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.QualityMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Quality" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.QualityMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Quality" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reflections" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsDelayDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReflectionsDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsDelayMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReflectionsDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsDelayMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReflectionsDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reflections" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reflections" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reverb" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbDelayDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReverbDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbDelayMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReverbDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbDelayMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReverbDelay" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reverb" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reverb" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Room" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomHfDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomHf" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomHfMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomHf" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomHfMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomHf" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Room" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Room" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomRollOffFactorDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomRolloffFactor" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomRollOffFactorMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomRolloffFactor" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomRollOffFactorMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomRolloffFactor" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXI3DL2Reverb8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> class. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXI3DL2Reverb8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.op_Equality(Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect,Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.op_Inequality(Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect,Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.AllParameters">
      <summary>Retrieves or sets interactive 3-D level 2 (I3DL2) environmental reverberation parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Preset">
      <summary>Retrieves or sets a standard reverberation parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Quality">
      <summary>Retrieves or sets the quality of the environmental reverberation effect.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.InvalidCallException">
      <summary>The method call is invalid. For example, a method's parameter might not be valid.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.InvalidCallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.InvalidCallException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.InvalidCallException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.InvalidCallException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.InvalidCallException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.InvalidCallException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.InvalidCallException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.InvalidCallException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Listener3D">
      <summary>Retrieves and sets parameters that describe a listener's position, orientation, and listening environment in 3-D space.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Listener3D.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.Listener3D.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactorDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactor" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactorMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactor" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactorMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactor" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.CommitDeferredSettings">
      <summary>Commits any deferred settings made since the last call to this method.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXWavesReverb8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> class. Not supported.</param>
      <param name="buff">A <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that acts as the sound source for the listener.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the object. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXWavesReverb8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> class. Not supported.</param>
      <param name="buff">A <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object that acts as the sound source for the listener.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.#ctor(Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the object using a primary <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object.</summary>
      <param name="lp">A primary <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object that acts as the sound source for the listener.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSound3DListener8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.op_Equality(Microsoft.DirectX.DirectSound.Listener3D,Microsoft.DirectX.DirectSound.Listener3D)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.op_Inequality(Microsoft.DirectX.DirectSound.Listener3D,Microsoft.DirectX.DirectSound.Listener3D)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Listener3D" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.Listener3D.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.AllParameters">
      <summary>Retrieves and sets all 3-D parameters of the sound environment and the listener.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Deferred">
      <summary>Determines if settings are set immediately or deferred.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactor">
      <summary>Retrieves or sets the distance factor, which is the number of meters in a vector unit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.DopplerFactor">
      <summary>Retrieves or sets the multiplier for the Doppler effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Orientation">
      <summary>Retrieves or sets the orientation of the listener's head.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Position">
      <summary>Retrieves or sets the listener's position.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.RolloffFactor">
      <summary>Retrieves and sets the rolloff factor, which determines the rate of attenuation over distance.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Velocity">
      <summary>Retrieves or sets the listener's velocity.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.NoAggregationException">
      <summary>The object does not support aggregation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoAggregationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.NoAggregationException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoAggregationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.NoAggregationException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoAggregationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.NoAggregationException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoAggregationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.NoAggregationException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.NoDriverException">
      <summary>No sound driver is available for use, or the given globally unique identifier (GUID) is not a valid Microsoft DirectSound device ID.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoDriverException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.NoDriverException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoDriverException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.NoDriverException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoDriverException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.NoDriverException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoDriverException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.NoDriverException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Notify">
      <summary>Sets up notification events for a playback or capture buffer.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Notify.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.Notify.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.#ctor(Microsoft.DirectX.DirectSound.CaptureBuffer)">
      <summary>Initializes a new instance of the <see cref="M:Microsoft.DirectX.DirectSound.Notify.#ctor" /> class.</summary>
      <param name="lp">The <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> that will trigger the notification events.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.#ctor(Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="M:Microsoft.DirectX.DirectSound.Notify.#ctor" /> class.</summary>
      <param name="lp">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that will trigger the notification events.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.#ctor(Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the <see cref="M:Microsoft.DirectX.DirectSound.Notify.#ctor" /> class.</summary>
      <param name="lp">The <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> that will trigger the notification events.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundNotify8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.op_Equality(Microsoft.DirectX.DirectSound.Notify,Microsoft.DirectX.DirectSound.Notify)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.op_Inequality(Microsoft.DirectX.DirectSound.Notify,Microsoft.DirectX.DirectSound.Notify)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.Notify" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.Notify.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.SetNotificationPositions(Microsoft.DirectX.DirectSound.BufferPositionNotify[],System.Int32)">
      <summary>Sets the notification positions for triggering events during capture or playback.</summary>
      <param name="notify">An array of <see cref="T:Microsoft.DirectX.DirectSound.BufferPositionNotify" /> structures that describe the notification positions.</param>
      <param name="numNotificationPositions">Length of <see cref="M:Microsoft.DirectX.DirectSound.Notify.SetNotificationPositions" />.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.SetNotificationPositions(Microsoft.DirectX.DirectSound.BufferPositionNotify[])">
      <summary>Sets the notification positions for triggering events during capture or playback.</summary>
      <param name="notify">An array of <see cref="T:Microsoft.DirectX.DirectSound.BufferPositionNotify" /> structures that describe the notification positions.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Notify.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.ObjectNotFoundException">
      <summary>The requested object was not found.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ObjectNotFoundException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ObjectNotFoundException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ObjectNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ObjectNotFoundException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ObjectNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ObjectNotFoundException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException">
      <summary>Another application has a higher priority level, preventing this call from succeeding.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.ParamEqEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports parametric equalizer effects.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.ParamEqEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.ParamEqEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.BandwidthMax">
      <summary>Retrives the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Bandwidth" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.BandwidthMin">
      <summary>Retrives the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Bandwidth" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.CenterMax">
      <summary>Retrives the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Center" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.CenterMin">
      <summary>Retrives the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Center" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.GainMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Gain" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.GainMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Gain" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXParamEq8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> class. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXParamEq8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.op_Equality(Microsoft.DirectX.DirectSound.ParamEqEffect,Microsoft.DirectX.DirectSound.ParamEqEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.op_Inequality(Microsoft.DirectX.DirectSound.ParamEqEffect,Microsoft.DirectX.DirectSound.ParamEqEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.ParamEqEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.ParamEqEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.ParamEqEffect.AllParameters">
      <summary>Retrieves or sets parametric equalizer parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.ParamEqEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.PriorityLevelNeededException">
      <summary>A cooperative level of Priority or higher is required.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.PriorityLevelNeededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.PriorityLevelNeededException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.PriorityLevelNeededException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.PriorityLevelNeededException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.PriorityLevelNeededException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.PriorityLevelNeededException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.PriorityLevelNeededException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.PriorityLevelNeededException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.SecondaryBuffer">
      <summary>Contains methods and properties used to manage sound buffers that can support effects.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.SecondaryBuffer.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.AcquireResources(System.Int32,System.Int32)">
      <summary>Allocates resources for a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that was created with the <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.DeferLocation" /> flag set in the <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" />.</summary>
      <param name="flags">Specifies how resources are to be allocated for the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object. For a list of values, see the voice management and voice allocation flags in the <see cref="T:Microsoft.DirectX.DirectSound.BufferPlayFlags" /> enumeration.</param>
      <param name="effectsCount">Number of Microsoft DirectSound effect objects in the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> set by the <see cref="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.SetEffects(Microsoft.DirectX.DirectSound.EffectDescription[])" /> method.</param>
      <returns>An array that contains one element for each of the Microsoft DirectSound effect objects that was assigned to the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object by the <see cref="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.SetEffects(Microsoft.DirectX.DirectSound.EffectDescription[])" /> method. One of the following values is returned for each Microsoft DirectSound effect object.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Clone(Microsoft.DirectX.DirectSound.Device)">
      <summary>Duplicates the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
      <param name="parent">The <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object associated with the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</param>
      <returns>A <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that represents the cloned <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> class.</summary>
      <param name="source">A <see cref="T:System.IO.Stream" /> object that contains the source data for the buffer.</param>
      <param name="length">An integer that represents the size of the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.IO.Stream,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> class.</summary>
      <param name="source">A <see cref="T:System.IO.Stream" /> object that contains the source data for the buffer.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.String,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> class.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the file that contains source data for the buffer.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> class.</summary>
      <param name="source">A <see cref="T:System.IO.Stream" /> object that contains the source data for the buffer.</param>
      <param name="length">An integer that represents the size of the buffer to create.</param>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object that describes the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.IO.Stream,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> class.</summary>
      <param name="source">A <see cref="T:System.IO.Stream" /> object that contains the source data for the buffer.</param>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object that describes the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.String,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> class.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the file that contains source data for the buffer.</param>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object that describes the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> class.</summary>
      <param name="desc">A <see cref="T:Microsoft.DirectX.DirectSound.BufferDescription" /> object that describes the buffer to create.</param>
      <param name="parent">A <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object that represents the parent device to use with the buffer.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetEffects(System.Int32,System.Int32)">
      <summary>Retrieves a range of Microsoft DirectSound effect objects from a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
      <param name="startIndex">Starting index of the range of Microsoft DirectSound effect objects to retrieve from the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</param>
      <param name="count">The number of Microsoft DirectSound effect objects to retrieve from the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</param>
      <returns>An array of Microsoft DirectSound effect objects, such as <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" />, from the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetEffects(System.Int32)">
      <summary>Retrieves a Microsoft DirectSound effect object at a particular index from a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
      <param name="index">Index of Microsoft DirectSound effect object to retrieve from the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</param>
      <returns>A Microsoft DirectSound effect object, such as <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" />, from the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundBuffer8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetObjectInPath(System.Guid,System.Int32,System.Guid)">
      <summary>Retrieves a Microsoft DirectSound effect object at a particular index from a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
      <param name="guidObject">Unique class identifier of the object being searched for, such as <see cref="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardEchoGuid" />.</param>
      <param name="index">Index of Microsoft DirectSound effect object to retrieve from the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</param>
      <param name="guidInterface">Unique identifier of the desired interface, such as <see cref="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsEcho" /></param>
      <returns>A Microsoft DirectSound effect object, such as <see cref="T:Microsoft.DirectX.DirectSound.EchoEffect" />, from the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object you are searching.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.op_Equality(Microsoft.DirectX.DirectSound.SecondaryBuffer,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.op_Inequality(Microsoft.DirectX.DirectSound.SecondaryBuffer,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.SecondaryBuffer.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.SetEffects(Microsoft.DirectX.DirectSound.EffectDescription[])">
      <summary>Enables effects on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
      <param name="dsEff">An Array of <see cref="T:Microsoft.DirectX.DirectSound.EffectDescription" /> structures that contains descriptions of the effects to set in the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</param>
      <returns>An array that contains one element for each of the Microsoft DirectSound effect objects that was assigned to the <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object. One of the following values is returned for each Microsoft DirectSound effect object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.SecondaryBuffer.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.SendLoopException">
      <summary>A circular loop of send effects was detected.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SendLoopException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SendLoopException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SendLoopException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SendLoopException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SendLoopException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SendLoopException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SendLoopException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SendLoopException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.SoundException">
      <summary>Root exception type for all Microsoft DirectSound exceptions. Derives from <see cref="T:Microsoft.DirectX.DirectXException" />.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SoundException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SoundException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SoundException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.SoundException" /> class.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.GetExceptionFromResultInternal(System.Int32)">
      <summary>Retrieves an <see cref="T:System.Exception" /> object that represents the result code passed in.</summary>
      <param name="resultCode">Integer that represents the result code of the exception.</param>
      <returns>An <see cref="T:System.Exception" /> object that represents the error that occurred.</returns>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.UnsupportedException">
      <summary>The function called is not supported at this time.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.UnsupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.UnsupportedException" /> class.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds all of the data needed to serialize or deserialize the object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination serialized stream.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.UnsupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.UnsupportedException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that represents errors that occur during application execution.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.UnsupportedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.UnsupportedException" /> class.</summary>
      <param name="message">String that contains the error message to display.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.UnsupportedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.UnsupportedException" /> class.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.WavesReverbEffect">
      <summary>Represents a Microsoft DirectSound effects object used to set and retrieve effect parameters on a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object that supports Waves reverberation.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.WavesReverbEffect.Disposing">
      <summary>Occurs when the <see cref="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.Dispose" /> method is called or when the <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> object is finalized and collected by the garbage collector of the Microsoft .NETcommon language runtime.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.HighFrequencyRtRatioDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.HighFrequencyRtRatio" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.HighFrequencyRtRatioMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.HighFrequencyRtRatio" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.HighFrequencyRtRatioMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.HighFrequencyRtRatio" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.InGainDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.InGain" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.InGainMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.InGain" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.InGainMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.InGain" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbMixDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbMix" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbMixMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbMix" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbMixMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbMix" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbTimeDefault">
      <summary>Retrieves the default value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbTime" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbTimeMax">
      <summary>Retrieves the maximum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbTime" /> property.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbTimeMin">
      <summary>Retrieves the minimum value for the <see cref="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbTime" /> property.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> class. This method supports the .NET Framework Infrastructure and is not intended to be used directly in your code.</summary>
      <param name="lp">Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXWavesReverb8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" />. Not supported.</param>
      <param name="source">The <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> that is using this effect.</param>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance is equal to a specified object.</summary>
      <param name="compare">Object to compare to this object.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.Finalize">
      <summary>Allows the <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> object to free resources before it is destroyed by the garbage collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>Hash code for the instance.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the infrastructure for Microsoft DirectX 9.0 for Managed Code and is not intended to be used directly from your code.</summary>
      <param name="objId">Object identifier.</param>
      <returns>Pointer to the unmanaged Component Object Model (COM) interface, IDirectSoundFXWavesReverb8, which allows unmanaged COM clients to create an instance of the managed <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> class. Not supported.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.op_Equality(Microsoft.DirectX.DirectSound.WavesReverbEffect,Microsoft.DirectX.DirectSound.WavesReverbEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are the same.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are the same; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.op_Inequality(Microsoft.DirectX.DirectSound.WavesReverbEffect,Microsoft.DirectX.DirectSound.WavesReverbEffect)">
      <summary>Compares the current instance of a class to another instance to determine whether they are different.</summary>
      <param name="left">The <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> object to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Microsoft.DirectX.DirectSound.WavesReverbEffect" /> object to the right of the equality operator.</param>
      <returns>Returns true if the objects are different; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.DirectX.DirectSound.WavesReverbEffect.Disposing" /> event when called from within a derived class.</summary>
      <param name="i1">Invoking object reference; should be this object.</param>
      <param name="i2">Arguments to pass to the event handler.</param>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WavesReverbEffect.AllParameters">
      <summary>Retrieves or sets Waves reverb parameters of a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WavesReverbEffect.Disposed">
      <summary>Gets a value that indicates whether the object is disposed.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferDescriptionFlags">
      <summary>Contains constants for specifying the capabilities of sound buffers.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer must use hardware mixing.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer must be in software memory and use software mixing.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer has sticky focus. If the user switches to another application not using Microsoft DirectSound, the application's normal buffers are muted, but sticky focus buffers are still audible.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>No error occurs if such memory is not available. This flag has no effect on cards using the Peripheral Component Interconnect (PCI) bus. Cannot be combined with <see cref="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.ControlEffects" />.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer is a primary buffer. Cannot be combined with <see cref="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.ControlEffects" />.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The sound is reduced to silence at the maximum distance. Applies only to software buffers.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer is a global sound buffer. With this flag set, an application using Microsoft DirectSound can continue to play its buffers if the user switches focus to another application, even if the new application uses Microsoft DirectSound.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer can get an more accurate accurate play cursor.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer has volume control capability.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer has position notification capability.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer has pan control capability. Cannot be combined with <see cref="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.Control3D" />.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer supports effects processing.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer has frequency control capability.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer has 3-D control capability. Cannot be combined with <see cref="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.ControlPan" />, and cannot be set for a buffer with a stereo format in <see cref="T:Microsoft.DirectX.DirectSound.WaveFormat" />.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.">
      <summary>The buffer can be assigned to a hardware or software resource at play time. This flag must be set for buffers that use voice management.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferPlayFlags">
      <summary>Contains constants for specifying the play behavior of the buffer.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.">
      <summary>If the hardware has no available voices, a currently playing buffer will be stopped to make room for the new buffer. The buffer prematurely terminated will be the one with the lowest priority as set by the <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Play(System.Int32,Microsoft.DirectX.DirectSound.BufferPlayFlags)" /> parameter <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Play(System.Int32,Microsoft.DirectX.DirectSound.BufferPlayFlags)" /> method for the buffer.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.">
      <summary>If the hardware has no available voices, a currently playing buffer will be stopped to make room for the new buffer. The buffer prematurely terminated will be selected from buffers that have the buffer's <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.Mute3DAtMaximumDistance" /> property set to true and are beyond their maximum distance. If there are no such buffers, the method fails.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.">
      <summary>If the hardware has no available voices, a currently playing nonlooping buffer will be stopped to make room for the new buffer. The buffer prematurely terminated is the one with the least time left to play.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.">
      <summary>Play this voice in a software buffer only. This flag cannot be combined with <see cref="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.LocateInHardware" /> or any voice management flag.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.">
      <summary>Play this voice in a hardware buffer only. If the hardware has no available voices and no voice management flags are set, the <see cref="M:Microsoft.DirectX.DirectSound.Buffer.Play(System.Int32,Microsoft.DirectX.DirectSound.BufferPlayFlags)" /> method fails. This flag cannot be combined with <see cref="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.LocateInSoftware" />.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.">
      <summary>After the end of the audio buffer is reached, play restarts at the beginning of the buffer. Play continues until explicitly stopped. This flag must be set when playing a primary buffer.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.">
      <summary>Play this voice with the default settings.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferSize">
      <summary>Contains constants for the minimum and maximum buffer size.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferSize.">
      <summary>Minimum length for a buffer using effects, in milliseconds.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferSize.">
      <summary>Maximum length for a buffer, in bytes.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferSize.">
      <summary>Minimum length for a buffer (Other than the primary buffer), in bytes.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureEffectsReturnValue">
      <summary>Contains constants for a <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object's effects status.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CaptureEffectsReturnValue.">
      <summary>Effect is instantiated in hardware.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CaptureEffectsReturnValue.">
      <summary>Effect is instantiated in software.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CooperativeLevel">
      <summary>Contains constants for a <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object's cooperative level.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CooperativeLevel.">
      <summary>Sets the normal level. This level has the smoothest multitasking and resource-sharing behavior, but because it does not allow the primary buffer format to change, output is restricted to the default 8-bit format.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CooperativeLevel.">
      <summary>Sets the priority level. Applications with this cooperative level can have buffers that use the <see cref="P:Microsoft.DirectX.DirectSound.Buffer.Format" /> property and devices that call the <see cref="M:Microsoft.DirectX.DirectSound.Device.Compact" /> method.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CooperativeLevel.">
      <summary>Sets the write-primary level. The application has write access to the primary buffer. No secondary buffers can be played. This level cannot be set if the DirectSound driver is being emulated for the device; that is, if the <see cref="P:Microsoft.DirectX.DirectSound.Device.Caps" /> property returns the <see cref="P:Microsoft.DirectX.DirectSound.Caps.EmulateDriver" /> flag in the <see cref="T:Microsoft.DirectX.DirectSound.Caps" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset">
      <summary>Containts constants for reverberation presets for an <see cref="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect" /> object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates a classic plate reverb.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of a long hall.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a medium hall.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a large room.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a medium room.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a small room.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being underwater.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a sewer pipe.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a parking lot.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being on a plain.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a quarry.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in the mountains.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a city.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a forest.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in an alley</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a stone corridor.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a normal hallway.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a hallway with carpet.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a hangar.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in an arena.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a cave.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a concert hall.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in an auditorium.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a room made of stone.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a living room.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a bathroom.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a normal room.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Simulates the reverberation of being in a padded room.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Preset uses generic settings.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.">
      <summary>Preset uses default settings.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsReturnValue">
      <summary>Contains constants that describe the status of an effect object returned from a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.">
      <summary>No effect was created because resources weren't available.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.">
      <summary>Effect is instantiated in hardware.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.">
      <summary>Effect is instantiated in software.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.">
      <summary>Effect is available but was not created because one of the other effects requested could not be created. If any of the effects requested cannot be created, none of them are, and the call fails.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.">
      <summary>A circular loop of send effects was detected.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.">
      <summary>Effect has not yet been assigned to hardware or software. This value is returned if the buffer was created with the <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.DeferLocation" /> flag set to true.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.">
      <summary>Effect is not registered on the system, and the method failed as a result.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectStatus">
      <summary>Contains constants that describe the success of the effect in canceling the echo using a <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectStatus.">
      <summary>The Acoustic Echo Cancellation (AEC) algorithm is currently converged.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectStatus.">
      <summary>The Acoustic Echo Cancellation (AEC) algorithm lost convergence. The convergence history remains in this state until the algorithm is reset or timely data is no longer arriving on the capture or render stream.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectStatus.">
      <summary>When the Acoustic Echo Cancellation (AEC) algorithm has converged.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectStatus.">
      <summary>Initial state of the Acoustic Echo Cancellation (AEC) algorithm.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Frequency">
      <summary>Contains constants that describe the range of frequency, in samples per second, at which a software buffer can play.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Frequency.">
      <summary>Orignal buffer frequency.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Frequency.">
      <summary>Maximum buffer frequency.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Frequency.">
      <summary>Minimum buffer frequency.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.LockFlag">
      <summary>Contains constants that describe how to lock a buffer while reading or writing to it.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.LockFlag.">
      <summary>Do not lock the buffer.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.LockFlag.">
      <summary>Lock the entire buffer.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.LockFlag.">
      <summary>Start the lock at the write cursor.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Mode3D">
      <summary>Contains constents that describe the operation mode for 3-D sound processing.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Mode3D.">
      <summary>Processing of 3-D sound is disabled. The sound seems to originate from the center of the listener's head.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Mode3D.">
      <summary>Sound parameters (position, velocity, and orientation) are relative to the listener's parameters. In this mode, the absolute parameters of the sound are updated automatically as the listener's parameters change so that the relative parameters remain constant.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Mode3D.">
      <summary>Normal processing. This is the default mode.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.OperationMode">
      <summary>Contains constants that describe the mode of a <see cref="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect" /> object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.OperationMode.">
      <summary>The effect is passing through capture and render data without modifying it.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.OperationMode.">
      <summary>The effect is running in half duplex mode. Not presently supported.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.OperationMode.">
      <summary>The effect is passing through capture and render data without modifying it.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Pan">
      <summary>Contains constants which describe how a buffer plays a sound in the stereo (2-channel) field.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Pan.">
      <summary>Equal volume in both channels.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Pan.">
      <summary>The right channel is at normal volume, and the left channel is effectively silent.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Pan.">
      <summary>The left channel is at normal volume, and the right channel is effectively silent.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.PositionNotifyFlag">
      <summary>Contains constants that are used to signify types of position notifications.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.PositionNotifyFlag.">
      <summary>Causes the event to be signaled when playback or capture stops.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.PositionNotifyFlag.">
      <summary>No event is raised.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Volume">
      <summary>Contains constants that describe the minimum and maximum volume at which a buffer can play.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Volume.">
      <summary>Maximum volume. The buffer volume is not attenuated.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Volume.">
      <summary>Minimum volume. The buffer volume is effectively silent.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.WaveFormatTag">
      <summary>Contains constants that describe waveform-audio format types.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WaveFormatTag.">
      <summary>Waveform-audio format is one- or two-channel PCM data.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Angles">
      <summary>Contains properties that describe the inside and outside angles of the sound projection cone.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Angles.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Angles" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Angles.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Angles.Inside">
      <summary>Retrieves the inside angle of the sound projection cone, in degrees.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Angles.Outside">
      <summary>Retrieves the outside angle of the sound projection cone, in degrees.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Buffer3DSettings">
      <summary>Contains properties that describe all the information necessary to uniquely describe the location, orientation, and motion of a 3-D sound buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3DSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Buffer3DSettings" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3DSettings.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.ConeOrientation">
      <summary>Retrieves and sets the current orientation of this 3-D buffer's sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.ConeOutsideVolume">
      <summary>Retrieves and sets the volume of the sound outside the outside angle of the sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.InsideConeAngle">
      <summary>Retrieves and sets the angle of the inside sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.MaxDistance">
      <summary>Retrieves and sets the maximum attenuation distance.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.MinDistance">
      <summary>Retrieves and sets the minimum attenuation distance.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.Mode">
      <summary>Retrieves and sets the 3-D sound processing mode to be set.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.OutsideConeAngle">
      <summary>Retrieves and sets the angle of the outside sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.Position">
      <summary>Retrieves and sets the current position of the 3-D sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.Velocity">
      <summary>Retrieves and sets the current velocity of the 3-D sound buffer.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferCaps">
      <summary>Contains properties that describe the capabilities of a <see cref="T:Microsoft.DirectX.DirectSound.Buffer" /> object or a <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferCaps.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferCaps" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferCaps.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.BufferBytes">
      <summary>Retrieves the size of the new buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.CanGetCurrentPosition">
      <summary>Retrieves whether the application can get a more accurate play cursor.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.Control3D">
      <summary>Retrieves whether the buffer has 3-D control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlEffects">
      <summary>Retrieves whether the buffer supports effects processing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlFrequency">
      <summary>Retrieves whether the buffer has frequency control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlPan">
      <summary>Retrieves whether the buffer has pan control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlPositionNotify">
      <summary>Retrieves whether the buffer has position notification capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlVolume">
      <summary>Retrieves whether the buffer has volume control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.GlobalFocus">
      <summary>Retrieves whether the buffer is a global sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.LocateInHardware">
      <summary>Retrieves whether the buffer must use hardware mixing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.LocateInSoftware">
      <summary>Retrieves whether the buffer must use software memory and use software mixing, even if <see cref="P:Microsoft.DirectX.DirectSound.BufferDescription.StaticBuffer" /> is specified and hardware resources are available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.LocationDefer">
      <summary>Retrieves whether the buffer can be assigned to a hardware or software resource at play time.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.Mute3DAtMaximumDistance">
      <summary>Retrieves whether the sound is reduced to silence at the maximum distance.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.PlayCpuOverhead">
      <summary>Retrieves the processing overhead, as a percentage, of main processor cycles needed to mix this sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.PrimaryBuffer">
      <summary>Retrieves whether the buffer is a primary sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.StaticBuffer">
      <summary>Retrieves whether the buffer is placed in on-board hardware memory, if available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.StickyFocus">
      <summary>Retrieves whether the buffer has sticky focus.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.UnlockTransferRate">
      <summary>Retrieves the rate, in kilobytes per second, at which data is transferred to the buffer memory when reading and writing to a buffer.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferPositionNotify">
      <summary>Contains properties that describe a notification position.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferPositionNotify.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferPositionNotify" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferPositionNotify.EventNotifyHandle">
      <summary>Retrieves and sets the handle to the event to be signaled when the offset has been reached.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferPositionNotify.Offset">
      <summary>Retrieves and sets the offset from the beginning of the buffer where the notify event is to be triggered, or <see cref="F:Microsoft.DirectX.DirectSound.BufferPositionNotify.Offset.PositionNotifyFlag.OffsetStop" />.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferStatus">
      <summary>Contains properties that describe the status of a buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferStatus.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.BufferStatus" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferStatus.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.BufferLost">
      <summary>Retrieves whether a buffer is lost and must be restored before it is played or locked.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.LocatedInHardware">
      <summary>Retrieves whether a buffer is located in hardware.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.LocatedInSoftware">
      <summary>Retrieves whether a buffer is located in software.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.Looping">
      <summary>Retrieves whether the buffer is looping.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.Playing">
      <summary>Retrieves whether the buffer is playing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.Terminated">
      <summary>Retrieves whether the buffer has terminated.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Caps">
      <summary>Contains properties that describe the capabilities of a Microsoft DirectSound<see cref="T:Microsoft.DirectX.DirectSound.Device" /> object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Caps.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Caps" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Caps.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Certified">
      <summary>Retrieves whether the driver is a certified Windows Driver Module (WDM) device driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.ContinuousRate">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports all sample rates between the <see cref="P:Microsoft.DirectX.DirectSound.Caps.MinSecondarySampleRate" /> and <see cref="P:Microsoft.DirectX.DirectSound.Caps.MaxSecondarySampleRate" /> values.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.EmulateDriver">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object does not have a Microsoft DirectSound driver installed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardware3DAllBuffers">
      <summary>Retrieves the number of unallocated 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardware3DStaticBuffers">
      <summary>Retrieves the number of unallocated static 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardware3DStreamingBuffers">
      <summary>Retrieves the number of unallocated streaming 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardwareMemoryBytes">
      <summary>Retrieves the size, in bytes, of the free memory on the sound card.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardwareMixingAllBuffers">
      <summary>Retrieves the number of unallocated buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardwareMixingStaticBuffers">
      <summary>Retrieves the number of unallocated static buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardwareMixingStreamingBuffers">
      <summary>Retrieves the number of unallocated streaming buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxContigousFreeHardwareMemoryBytes">
      <summary>Retrieves the size, in bytes, of the largest contiguous block of free memory on the sound card.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardware3DAllBuffers">
      <summary>Retrieves the maximum number of 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardware3DStaticBuffers">
      <summary>Retrieves the maximum number of static 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardware3DStreamingBuffers">
      <summary>Retrieves the maximum number of streaming 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardwareMixingAllBuffers">
      <summary>Retrieves the number of buffers that can be mixed in hardware.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardwareMixingStaticBuffers">
      <summary>Retrieves the maximum number of static buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardwareMixingStreamingBuffers">
      <summary>Retrieves the maximum number of streaming sound buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxSecondarySampleRate">
      <summary>Retrieves the maximum sample rate specifications that are supported by this <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object's hardware <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> objects.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MinSecondarySampleRate">
      <summary>Retrieves the maximum sample rate specifications that are supported by this <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object's hardware <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> objects.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.PlayCpuOverheadSoftwareBuffers">
      <summary>Retrieves the processing overhead, as a percentage of main processor cycles, needed to mix software buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Primary16Bit">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports a primary buffer with 16-bit samples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Primary8Bit">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports primary buffers with 8-bit samples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.PrimaryBuffers">
      <summary>Retrieves the number of primary buffers supported.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.PrimaryMono">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports monophonic primary buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.PrimaryStereo">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports stereo primary buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Secondary16Bit">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports hardware-mixed <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> objects with 16-bit samples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Secondary8Bit">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports hardware-mixed <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> objects with 8-bit samples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.SecondaryMono">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports hardware-mixed monophonic <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> objects.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.SecondaryStereo">
      <summary>Retrieves whether the <see cref="T:Microsoft.DirectX.DirectSound.Device" /> object supports hardware-mixed stereo <see cref="T:Microsoft.DirectX.DirectSound.SecondaryBuffer" /> objects.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.TotalHardwareMemoryBytes">
      <summary>Retrieves the size, in bytes, of the amount of memory on the sound card that stores static sound buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.UnlockTransferRateHardwareBuffers">
      <summary>Retrieves the rate, in kilobytes per second, at which data can be transferred to hardware static sound buffers.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureBufferCaps">
      <summary>Contains properties that describe the capabilities of a <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBufferCaps.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBufferCaps" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBufferCaps.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferCaps.BufferBytes">
      <summary>Retrieves the size, in bytes, of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferCaps.WaveMapped">
      <summary>Retrieves whether the buffer wave mapped.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureBufferDescription">
      <summary>Contains properties that describe a <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBufferDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBufferDescription" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBufferDescription.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.BufferBytes">
      <summary>Retrieves and sets the size of the capture buffer to create, in bytes.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.CaptureEffectDescription">
      <summary>Retrieves and sets an array of <see cref="T:Microsoft.DirectX.DirectSound.CaptureEffectDescription" /> structures that describe capture effects supported by the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.ControlEffects">
      <summary>Retrieves and sets whether the <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object supports capture effects.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.Format">
      <summary>Retrieves and sets the format in which to capture the audio data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.WaveMapped">
      <summary>Retrieves and sets whether the Microsoft Win32 wave mapper will be used for formats not supported by the device.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureCaps">
      <summary>Contains properties that describes the capabilities of the capture device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureCaps.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureCaps" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureCaps.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Certified">
      <summary>Retrieves whether the driver for the device is a certified Windows Driver Model (WDM) driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Channels">
      <summary>Retrieves the number of channels supported by the device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.EmulatedDriver">
      <summary>Retrieves whether there is no Microsoft DirectSound capture driver for the device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format11KhzMono16Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 11Khz, 16-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format11KhzMono8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 11Khz, 8-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format11KhzStereo16Bit">
      <summary>Retrieves whet,er the capture device supports capturing audio with the 11Khz, 16-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format11KhzStereo8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 11Khz, 8-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format22KhzMono16Bit">
      <summary>Retrieves whet,er the capture device supports capturing audio with the 22Khz, 16-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format22KhzMono8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 22Khz, 8-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format22KhzStereo16Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 22Khz, 16-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format22KhzStereo8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 22Khz, 8-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format44KhzMono16Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 44Khz, 16-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format44KhzMono8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 44Khz, 8-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format44KhzStereo16Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 44Khz, 16-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format44KhzStereo8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 44Khz, 8-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format48KhzMono16Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 48Khz, 16-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format48KhzMono8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 48Khz, 8-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format48KhzStereo16Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 48Khz, 16-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format48KhzStereo8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 48Khz, 8-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format96KhzMono16Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 96Khz, 16-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format96KhzMono8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 96Khz, 8-bit, mono wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format96KhzStereo16Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 96Khz, 16-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format96KhzStereo8Bit">
      <summary>Retrieves whether the capture device supports capturing audio with the 96Khz, 8-bit, stereo wave format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.MultipleCapture">
      <summary>Retrieves whether multiple capture objects can be used simultaneously on the capture device.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureEffectDescription">
      <summary>Contains properties for an effect associated with a <see cref="T:Microsoft.DirectX.DirectSound.CaptureBuffer" /> object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureEffectDescription" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectDescription.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectDescription.GuidEffectsClass">
      <summary>Retrieves and sets the class identifier of the capture effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectDescription.GuidEffectsInstance">
      <summary>Retrieves and sets the unique identifier of the preferred capture effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectDescription.LocateInHardware">
      <summary>Retrieves or sets whether the capture effect must be in hardware.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectDescription.LocateInSoftware">
      <summary>Retrieves or sets whether the capture effect must be in software.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation">
      <summary>Contains properties for acoustic echo cancellation in a capture buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.Enable">
      <summary>Retrieves and sets whether the effect is enabled.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.Mode">
      <summary>Retrieves and sets the operation mode of the effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.NoiseFill">
      <summary>Retrieves and sets whether to enable background comfort noise for the effect.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress">
      <summary>Contains parameters for noise suppression in a capture buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress.Enable">
      <summary>Retrieves and sets whether the effect is enabled in the <see cref="T:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.DeviceInformation">
      <summary>Contains properties that describe information about a device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DeviceInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.DeviceInformation" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DeviceInformation.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DeviceInformation.Description">
      <summary>Retrieves a textual description of the Microsoft DirectSound device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DeviceInformation.DriverGuid">
      <summary>Retrieves the globally unique identifier (GUID) of a Microsoft DirectSound driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DeviceInformation.ModuleName">
      <summary>Retrieves the module name of the Microsoft DirectSound driver corresponding to this device.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectDescription">
      <summary>Contains properties that describe an effect associated with a buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectDescription" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectDescription.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectDescription.GuidEffectClass">
      <summary>Retrieves and sets the class identifier of the effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectDescription.LocateInHardware">
      <summary>Retrieves or sets whether the effect must be in hardware.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectDescription.LocateInSoftware">
      <summary>Retrieves or sets whether the effect must be in software.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsChorus">
      <summary>Contains parameters for a chorus effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsChorus.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsChorus" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsChorus.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Delay">
      <summary>Retrieves and sets the number of milliseconds the input is delayed before it is played back, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsChorus" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Depth">
      <summary>Retrieves and sets the percentage by which the delay time is modulated by the low-frequency oscillator, in hundredths of a percentage point, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsChorus" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Feedback">
      <summary>Retrieves and sets the percentage of output signal to feed back into the effect's input, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsChorus" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Frequency">
      <summary>Retrieves and sets the frequency of the LFO, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsChorus" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase">
      <summary>Retrieves and sets the phase differential between left and right LFOs, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsChorus" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Waveform">
      <summary>Retrieves and sets the waveform shape of the LFO, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsChorus" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.WetDryMix">
      <summary>Retrieves and sets the ratio of wet (processed) signal to dry (unprocessed) signal, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsChorus" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsCompressor">
      <summary>Contains parameters for a compressor effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsCompressor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsCompressor" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsCompressor.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Attack">
      <summary>Retrieves and sets the time before compression reaches its full value, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsCompressor" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Gain">
      <summary>Retrieves and sets the output gain of signal after compression, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsCompressor" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Predelay">
      <summary>Retrieves and sets the time after Threshold is reached before attack phase is started, in milliseconds, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsCompressor" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Ratio">
      <summary>Retrieves and sets the compression ratio, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsCompressor" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Release">
      <summary>Retrieves and sets the speed at which compression is stopped after input drops below Threshold, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsCompressor" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Threshold">
      <summary>Retrieves and sets the point at which compression begins, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsCompressor" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsDistortion">
      <summary>Contains parameters for a distortion effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsDistortion.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsDistortion" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsDistortion.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.Edge">
      <summary>Retrieves and sets the percentage of distortion intensity, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsDistortion" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.Gain">
      <summary>Retrieves and sets the amount of signal change after distortion, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsDistortion" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PostEqBandwidth">
      <summary>Retrieves and sets the width of frequency band that determines range of harmonic content addition, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsDistortion" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PostEqCenterFrequency">
      <summary>Retrieves and sets the center frequency of harmonic content addition, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsDistortion" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PreLowpassCutoff">
      <summary>Retrieves and sets the filter cutoff for high-frequency harmonics attenuation, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsDistortion" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsEcho">
      <summary>Contains parameters for an echo effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsEcho.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsEcho" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsEcho.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.Feedback">
      <summary>Retrieves and sets the percentage of output fed back into input, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsEcho" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.LeftDelay">
      <summary>Retrieves and sets the delay for left channel, in milliseconds, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsEcho" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.PanDelay">
      <summary>Retrieves and sets the value that specifies whether to swap left and right delays with each successive echo, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsEcho" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.RightDelay">
      <summary>Retrieves and sets the delay for right channel, in milliseconds, in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsEcho" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.WetDryMix">
      <summary>Retrieves and sets the ratio of wet (processed) signal to dry (unprocessed) signal in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsEcho" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsFlanger">
      <summary>Contains parameters for a flange effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsFlanger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsFlanger" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsFlanger.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Delay">
      <summary>Retrieves and sets the number of milliseconds the input is delayed before it is played back in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsFlanger" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Depth">
      <summary>Retrieves and sets the percentage by which the delay time is modulated by the low-frequency oscillator (LFO), in hundredths of a percentage point in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsFlanger" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Feedback">
      <summary>Retrieves and sets the percentage of output signal to feed back into the effect's input in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsFlanger" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Frequency">
      <summary>Retrieves and sets the frequency of the LFO in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsFlanger" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase">
      <summary>Retrieves and sets the phase differential between left and right LFOs in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsFlanger" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Waveform">
      <summary>Retrieves and sets the waveform shape of the LFO in the <see cref="T:Microsoft.DirectX.DirectSound.EffectsFlanger" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.WetDryMix">
      <summary>Retrieves and sets the ratio of wet (processed) signal to dry (unprocessed) signal of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsFlanger" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsGargle">
      <summary>Contains parameters for an amplitude modulation effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsGargle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsGargle" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsGargle.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsGargle.RateHz">
      <summary>Retrieves and sets the rate of modulation, in Hertz, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsGargle" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsGargle.WaveShape">
      <summary>Retrieves and sets the shape of the modulation waveform of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsGargle" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb">
      <summary>Contains parameters for an I3DL2 (Interactive 3D Audio Level 2) reverberation effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayHfRatio">
      <summary>Retrieves and sets the ratio of the decay time at high frequencies to the decay time at low frequencies, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayTime">
      <summary>Retrieves and sets the decay time, in seconds, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Density">
      <summary>Retrieves and sets the modal density in the late reverberation decay, in percent, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Diffusion">
      <summary>Retrieves and sets the echo density in the late reverberation decay, in percent, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.HfReference">
      <summary>Retrieves and sets the reference high frequency, in hertz, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reflections">
      <summary>Retrieves and sets the attenuation of early reflections relative to <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Room" />, in mB, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReflectionsDelay">
      <summary>Retrieves and sets the delay time of the first reflection relative to the direct path, in seconds, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reverb">
      <summary>Retrieves and sets the attenuation of late reverberation relative to <see cref="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Room" />, in mB, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReverbDelay">
      <summary>Retrieves and sets the time limit between the early reflections and the late reverberation relative to the time of the first reflection, in seconds, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Room">
      <summary>Retrieves and sets the attenuation of the room effect, in millibels (mB), of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomHf">
      <summary>Retrieves and sets the attenuation of the room high-frequency effect, in mB, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomRolloffFactor">
      <summary>Retrieves and sets the rolloff factor for the reflected signals of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsParamEq">
      <summary>Contains parameters for a parametric equalizer effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsParamEq.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsParamEq" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsParamEq.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Bandwidth">
      <summary>Retrieves and sets the bandwidth, in semitones, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsParamEq" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Center">
      <summary>Retrieves and sets the center frequency, in hertz, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsParamEq" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Gain">
      <summary>Retrieves and sets the gain, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsParamEq" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsWavesReverb">
      <summary>Contains parameters for a Waves reverberation effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsWavesReverb.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsWavesReverb" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ToString">
      <summary>Retrieves a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.HighFrequencyRtRatio">
      <summary>Retrieves and sets the high-frequency reverb time ratio of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsWavesReverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.InGain">
      <summary>Retrieves and sets the input gain of signal, in decibels (dB), of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsWavesReverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbMix">
      <summary>Retrieves and sets the reverb mix, in decibels (dB), of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsWavesReverb" /> structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbTime">
      <summary>Retrieves and sets the reverb time, in milliseconds, of the <see cref="T:Microsoft.DirectX.DirectSound.EffectsWavesReverb" /> structure.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Listener3DOrientation">
      <summary>Contains properties that encompass the front and top 3-D vectors for listeners orientation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DOrientation.#ctor(Microsoft.DirectX.Vector3,Microsoft.DirectX.Vector3)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Listener3DOrientation" /> structure.</summary>
      <param name="front" />
      <param name="top" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DOrientation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Listener3DOrientation" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DOrientation.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DOrientation.Front">
      <summary>Retrieves and sets the front of the listener's orientation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DOrientation.Top">
      <summary>Retrieves and sets the top of the listener's orientation.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Listener3DSettings">
      <summary>Contains properties that describes the 3-D world parameters and the position of the listener.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Listener3DSettings" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DSettings.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DistanceFactor">
      <summary>Retrieves and sets the number of meters in a vector unit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DopplerFactor">
      <summary>Retrieves and sets the ratio of Doppler effect to that in the real world.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.OrientFront">
      <summary>Retrieves and sets the listener's front orientation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.OrientTop">
      <summary>Retrieves and sets the listener's top orientation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.Position">
      <summary>Retrieves and sets the listener's position.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.RolloffFactor">
      <summary>Retrieves and sets the ratio of attenuation over distance to that in the real world.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.Velocity">
      <summary>Retrieves and sets the listener's velocity.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Speakers">
      <summary>Contains properties that define various speaker configurations.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Speakers.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.Speakers" /> structure.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Speakers.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.FivePointOne">
      <summary>Retrieves and sets whether the audio will be played through a speaker arrangement of five surround speakers with a subwoofer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.GeometryMax">
      <summary>Retrieves and sets whether the speakers are directed over an arc of 180 degrees.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.GeometryMin">
      <summary>Retrieves and sets whether the speakers are directed over an arc of 5 degrees.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.GeometryNarrow">
      <summary>Retrieves and sets whether the speakers are directed over an arc of 10 degrees.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.GeometryWide">
      <summary>Retrieves and sets whether the speakers are directed over an arc of 20 degrees.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Headphone">
      <summary>Retrieves and sets whether the audio will be played through headphones.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Mono">
      <summary>Retrieves and sets whether the audio will be played through a monaural speaker type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Quad">
      <summary>Retrieves and sets whether the audio will be played through a quadraphonic speaker type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.SevenPointOne">
      <summary>Retrieves and sets whether the audio will be played through a speaker arrangement of seven surround speakers with a subwoofer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Stereo">
      <summary>Retrieves and sets whether the audio will be played through a stereo speaker type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Surround">
      <summary>Retrieves and sets whether the audio will be played through a surround sound speaker type.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.WaveFormat">
      <summary>Contains properties that define the format of waveform-audio data.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WaveFormat.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.DirectX.DirectSound.WaveFormat" /> sturcture.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WaveFormat.ToString">
      <summary>Obtains a string representation of the current instance.</summary>
      <returns>String that represents the object.</returns>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.AverageBytesPerSecond">
      <summary>Retrieves and sets the required average data-transfer rate, in bytes per second, for the format type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.BitsPerSample">
      <summary>Retrieves and sets the bits per sample for the format type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.BlockAlign">
      <summary>Retrieves and sets the minimum atomic unit of data, in bytes, for the format type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.Channels">
      <summary>Retrieves and sets the number of channels in the waveform-audio data, for the format type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.FormatTag">
      <summary>Retrieves and sets the waveform-audio format type, for the format type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.SamplesPerSecond">
      <summary>Retrieves and sets the sample rate, in samples per second (hertz), for the format type.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.FileHeader">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.HACMDRIVER__">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.HACMSTREAM__">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.HMMIO__">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSound">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSound3DListener">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSound8">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundCapture">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundCaptureBuffer">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundCaptureBuffer8">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundCaptureFXAec">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundCaptureFXNoiseSuppress">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFullDuplex">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXChorus">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXCompressor">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXDistortion">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXEcho">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXFlanger">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXGargle">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXI3DL2Reverb">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXParamEq">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundFXWavesReverb">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.IDirectSoundNotify">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.pcmwaveformat_tag">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.tACMSTREAMHEADER">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.tWAVEFORMATEX">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails.wavefilter_tag">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DS3DBUFFER">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DS3DLISTENER">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSBCAPS">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSBPOSITIONNOTIFY">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSBUFFERDESC">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSCAPS">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSCBCAPS">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSCBUFFERDESC">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSCCAPS">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSCEFFECTDESC">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSCFXAec">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSCFXNoiseSuppress">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSEFFECTDESC">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXChorus">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXCompressor">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXDistortion">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXEcho">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXFlanger">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXGargle">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXI3DL2Reverb">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXParamEq">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._DSFXWavesReverb">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._MMCKINFO">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:Microsoft.DirectX.PrivateImplementationDetails._MMIOINFO">
      <summary>Allows the managed application programming interface (API) to have access to the unmanaged portions of the Microsoft DirectXapplication programming interface (API). This is not intended to be used directly from your code.</summary>
    </member>
  </members>
</doc>