<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManagedSquish</name>
    </assembly>
    <members>
        <member name="T:ManagedSquish.SquishFlags">
            <summary>
            Flags used when compressing/decompressing DXT data. These are the same values as defined in squish.h.
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.Dxt1">
            <summary>
            Use DXT1 compression.
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.Dxt3">
            <summary>
            Use DXT3 compression.
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.Dxt5">
            <summary>
            Use DXT5 compression.
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.ColourIterativeClusterFit">
            <summary>
            Use a very slow but very high quality colour compressor.
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.ColourClusterFit">
            <summary>
            Use a slow but high quality colour compressor (the default).
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.ColourRangeFit">
            <summary>
            Use a fast but low quality colour compressor.
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.ColourMetricPerceptual">
            <summary>
            Use a perceptual metric for colour error (the default).
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.ColourMetricUniform">
            <summary>
            Use a uniform metric for colour error.
            </summary>
        </member>
        <member name="F:ManagedSquish.SquishFlags.WeightColourByAlpha">
            <summary>
            Weight the colour by alpha during cluster fit (disabled by default).
            </summary>
        </member>
        <member name="T:ManagedSquish.Squish">
            <summary>
            Wrapper for libsquish DXT compression/decompression library.
            </summary>
        </member>
        <member name="M:ManagedSquish.Squish.GetStorageRequirements(System.Int32,System.Int32,ManagedSquish.SquishFlags)">
            <summary>
            Returns the final size in bytes of DXT data compressed with the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="width">Source image width.</param>
            <param name="height">Source image height.</param>
            <param name="flags">Compression parameters.</param>
            <returns>Size in bytes of the DXT data.</returns>
        </member>
        <member name="M:ManagedSquish.Squish.Compress(System.IntPtr,System.IntPtr,ManagedSquish.SquishFlags)">
            <summary>
            Compress a 4x4 pixel block using the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="rgba">Source RGBA block.</param>
            <param name="block">Output DXT compressed block.</param>
            <param name="flags">Compression flags.</param>
        </member>
        <member name="M:ManagedSquish.Squish.Compress(System.Byte[],ManagedSquish.SquishFlags)">
            <summary>
            Compress a 4x4 pixel block using the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="rgba">Source RGBA block.</param>
            <param name="flags">Compression flags.</param>
            <returns>Output DXT compressed block.</returns>
        </member>
        <member name="M:ManagedSquish.Squish.CompressMasked(System.IntPtr,System.Int32,System.IntPtr,ManagedSquish.SquishFlags)">
            <summary>
            Compress a 4x4 pixel block using the parameters specified in <paramref name="flags"/>. The <paramref name="mask"/> parameter is a used as 
            a bit mask to specifify what pixels are valid for compression, corresponding the lowest bit to the first pixel.
            </summary>
            <param name="rgba">Source RGBA block.</param>
            <param name="mask">Pixel bit mask.</param>
            <param name="block">Output DXT compressed block.</param>
            <param name="flags">Compression flags.</param>
        </member>
        <member name="M:ManagedSquish.Squish.CompressMasked(System.Byte[],System.Int32,ManagedSquish.SquishFlags)">
            <summary>
            Compress a 4x4 pixel block using the parameters specified in <paramref name="flags"/>. The <paramref name="mask"/> parameter is a used as 
            a bit mask to specifify what pixels are valid for compression, corresponding the lowest bit to the first pixel.
            </summary>
            <param name="rgba">Source RGBA block.</param>
            <param name="mask">Pixel bit mask.</param>
            <param name="flags">Compression flags.</param>
            <returns>Output DXT compressed block.</returns>
        </member>
        <member name="M:ManagedSquish.Squish.Decompress(System.IntPtr,System.IntPtr,ManagedSquish.SquishFlags)">
            <summary>
            Decompresses a 4x4 pixel block using the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="rgba">Output RGBA decompressed block.</param>
            <param name="block">Source DXT block.</param>
            <param name="flags">Decompression flags.</param>
        </member>
        <member name="M:ManagedSquish.Squish.Decompress(System.Byte[],ManagedSquish.SquishFlags)">
            <summary>
            Decompresses a 4x4 pixel block using the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="block">Source DXT block.</param>
            <param name="flags">Decompression flags.</param>
            <returns>Output RGBA decompressed block.</returns>
        </member>
        <member name="M:ManagedSquish.Squish.CompressImage(System.IntPtr,System.Int32,System.Int32,System.IntPtr,ManagedSquish.SquishFlags)">
            <summary>
            Compresses an image using the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="rgba">Source RGBA image.</param>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="blocks">Output DXT compressed image.</param>
            <param name="flags">Compression flags.</param>
        </member>
        <member name="M:ManagedSquish.Squish.CompressImage(System.Byte[],System.Int32,System.Int32,ManagedSquish.SquishFlags)">
            <summary>
            Compresses an image using the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="rgba">Source RGBA image.</param>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="flags">Compression flags.</param>
            <returns>Output DXT compressed image.</returns>
        </member>
        <member name="M:ManagedSquish.Squish.DecompressImage(System.IntPtr,System.Int32,System.Int32,System.IntPtr,ManagedSquish.SquishFlags)">
            <summary>
            Decompresses an image using the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="rgba">Output RGBA decompressed image.</param>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="blocks">Source DXT compressed image.</param>
            <param name="flags">Decompression flags.</param>
        </member>
        <member name="M:ManagedSquish.Squish.DecompressImage(System.Byte[],System.Int32,System.Int32,ManagedSquish.SquishFlags)">
            <summary>
            Decompresses an image using the parameters specified in <paramref name="flags"/>.
            </summary>
            <param name="blocks">Source DXT compressed image.</param>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="flags">Decompression flags.</param>
            <returns>Output RGBA decompressed image.</returns>
        </member>
    </members>
</doc>
